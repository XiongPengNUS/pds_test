[{"name": "app.py", "content": "#app.py - Shiny app file for running the application.\n\n#The file specifies the design of all UI components used in the application.\n\n#Author:  Peng Xiong (xiongpengnus@gmail.com)\n#Date:    March 29, 2025\n\n#Version: 1.0\n#License: MIT License\n\nimport io\nimport json\nfrom PIL import Image\nfrom pathlib import Path\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\n#import pyperclip\nfrom xlsxwriter.workbook import Workbook\n\nfrom shiny import reactive\nfrom shiny.ui import output_plot\nfrom shiny.express import render, ui, input, expressify\n\nfrom bokeh.models import ColorPicker\nfrom shinywidgets import render_bokeh\n\nfrom .autosource import *\nfrom .canvas import *\nfrom .styles import *\n\n\n#current_file = Path(__file__)\n#current_directory = current_file.parent\n\ndef hr(margin=0.75, offset=0):\n\n    return ui.HTML(f\"<hr style='margin-bottom:{margin + offset}em;margin-top:{margin - offset}em'>\")\n\n\ndef ui_block(string, btype):\n\n    return ui.markdown(f'<div class=\"alert alert-block alert-{btype}\">\\n{string}</div>')\n\n\ndef inline_label(string, pt=\"5px\"):\n    \n    return ui.HTML(f'<p style=\"padding-top:{pt}\">{string}</p>')\n\n\ndef big_label(string, font=12):\n\n    return ui.HTML(f'<p style=\"font-size:{font}pt\">{string}</p>')\n\n\ndef tool_icon_code(id, figsize):\n\n    return (\n        \"@render.plot()\\n\"\n        f\"def {id}_button_icon():\\n\"\n        \"    current_directory = Path(__file__).parent\\n\"\n        f\"    fig = plt.figure(figsize={figsize}, facecolor='none')\\n\"\n        f\"    img = np.asarray(Image.open(current_directory / 'images/{id}.png'))\\n\"\n        \"    plt.imshow(img)\\n\"\n        \"    plt.axis('off')\\n\"\n        \"    plt.tight_layout(pad=0)\\n\"\n        \"    return fig\\n\"\n    )\n\n\ndef tool_effect_code(name, cat):\n\n    id = name.lower().replace(' ', '_')\n\n    return (\n        \"@reactive.effect\\n\"\n        f\"@reactive.event(input.{id}_button)\\n\"\n        f\"def to_{id}_section():\\n\"\n        f\"    {cat}_selected.set('{name}')\\n\"\n        f\"    ui.update_navs('main', selected='{cat}s_panel')\\n\"\n        f\"    {cat}_memory.set([])\\n\"\n    )\n\n\ndef tool_disable(disabled):\n\n    for item in ops_menu + dvs_menu + mds_menu:\n        item_id = item.lower().replace(' ', '_')\n        ui.update_action_button(f\"{item_id}_button\", disabled=disabled)\n\n\ndef model_variables(data):\n\n    columns = to_column_choices(data.columns)\n    col_nums, col_cats, col_nbs = num_cat_labels(data)\n\n    col_predicted = []\n    col_predictors = []\n    for c in columns:\n        if c in col_cats:\n            nc = len(data[to_selected_columns(c, data)].unique())\n            if  nc > 30:\n                continue\n            elif nc > 10:\n                col_predictors.append(c)\n                continue\n        col_predicted.append(c)\n        col_predictors.append(c)\n    \n    return col_predicted, col_predictors\n\n\ndef invalid_name(name, error=False):\n\n    try:\n        exec(f\"{name} = 1\")\n        if name in var_names.get():\n            raise ValueError(f\"The variable name '{name}' was already used.\")\n        return False\n    except Exception as err:\n        if error:\n            return err\n        else:\n            return True\n\n\ndef display_table(df, min_rows=10):\n\n    if 60 >= df.shape[0]:\n        return df\n\n    head = min_rows // 2\n    tail = min_rows - head\n\n    df_head = df.head(head)\n    df_tail = df.tail(tail)\n\n    columns = df.columns\n    ellipsis_row = pd.DataFrame([[\"...\"] * len(columns)],\n                                columns=columns, index=[\"...\"])\n\n    return pd.concat([df_head, ellipsis_row, df_tail])\n\n# Global variables and constants\n# Default colors for data visuals like bar charts and line plots\ndefault_colors = [c['color'] for c in mpl.rcParams['axes.prop_cycle']]\n\n# Color maps for representing numerical data\nnum_cmaps = ['viridis', 'plasma', 'inferno', 'magma', 'cividis',\n             'Greys', 'Purples', 'Blues', 'Greens', 'Oranges', 'Reds',\n             'YlOrBr', 'YlOrRd', 'OrRd', 'PuRd', 'RdPu', 'BuPu',\n             'GnBu', 'PuBu', 'YlGnBu', 'PuBuGn', 'BuGn', 'YlGn']\n\n# Color maps for representing categorical data\ncat_cmaps = ['Pastel1', 'Pastel2', 'Paired', 'Accent', 'Dark2',\n             'Set1', 'Set2', 'Set3', 'tab10', 'tab20', 'tab20b',\n             'tab20c']\n\n# The menu of all operation tools\nops_menu = [\"Value counts operations\",\n            \"Select columns\", \"Sort rows\", \"Boolean conditions\", \"Treat missing values\",\n            \"Correlation\", \"Aggregation\", \"Group by\", \"Pivot table\",\n            \"Add columns\", \"Time trend\", \"Clustering\", \n            \"ANOVA\", \"Variance inflation factor\", \"Over sampling\"]\n\n# The menu of all data visualization tools\ndvs_menu = [\"Value counts\", \"Probability plot\", \"Histogram\", \"KDE\", \"Box plot\", \"Pair plot\",\n            \"Heat map\", \"Bar chart\", \"Radar chart\", \"Line plot\", \"Filled areas\",\n            \"Scatter plot\", \"Regression plot\", \"ACF and PACF\"]\n\n# The menu of all modeling tools\nmds_menu = [\"Statsmodels\", \"Sklearn models\"]\n\n# Reactive values shared across the app\nnodes = reactive.value([])\nnode_input = reactive.value(dict(data=None, name=\"data\"))\nnode_highlights = reactive.value([])\narc_highlights = reactive.value([])\n\ncanvas_lim = reactive.value([64, -51.2])\n\nop_selected = reactive.value(None)\ndv_selected = reactive.value(None)\nmd_selected = reactive.value(None)\n\nops = reactive.value(dict(type=None, source=None, data_out=None))\nop_memory = reactive.value([])\n\ndvs = reactive.value(dict(type=None, source=None, fig=None, width=640, height=480))\ndv_memory = reactive.value([])\ninit_color = reactive.value(default_colors[0])\n\nmds = reactive.value(dict(type=\"\", source={}, results=None, outputs=None, memory={}))\nmd_memory = reactive.value({})\nmd_page = reactive.value(1)\n\n\ndvs_view = reactive.value(dict(fig=None, width=640, height=480))\n\nmodel_visual_view = reactive.value(dict(pred=None, reside=None))\nnode_view = reactive.value(None)\n\nmodel_outcome = reactive.value(\"reg\")\nmodel_page = reactive.value(1)\nmodel_reset = reactive.value(False)\n\nvar_names = reactive.value([])\n\n\n#ui.page_opts(title=\"Panda Shifu\", full_width=True)\n\nwith ui.layout_column_wrap(width=\"1060px\", fixed_width=True):\n    with ui.navset_hidden(id=\"main\"):\n        with ui.nav_panel(None, value=\"canvas_panel\"):\n            ui.HTML('<br>')\n            with ui.layout_sidebar(height='900px'):\n                with ui.sidebar(width='350px', open=\"always\", bg='#f8f8f8', height=\"900px\"):\n\n                    with ui.navset_tab(id=\"main_toolset_navs\"):\n                        button_gap = \"10px\"\n                        #button_heights = \"110px\"    \n                        #icon_size = \"140px\", \"120px\"\n                        button_heights = \"90px\"\n                        icon_size = \"95px\", \"70px\"\n                        figsize = (4, 3)\n\n                        with ui.nav_panel(\"Operations\", value=\"ops_toolset_nav\"):\n                            with ui.layout_columns(col_widths=(4, 4, 4), gap=button_gap, row_heights=button_heights):\n                                tool_ns = globals()\n                                for op_name in ops_menu:\n                                    op_id = op_name.lower().replace(' ', '_')\n                                    exec(tool_icon_code(op_id, figsize), tool_ns)\n                                    icon = output_plot(f\"{op_id}_button_icon\",\n                                                    width=icon_size[0], height=icon_size[1])\n\n                                    ui.input_action_button(f\"{op_id}_button\", \"\", icon=icon,\n                                                        style=\"padding:0px;padding-top:5px;padding-bottom:5px\",\n                                                        disabled=True)\n                                    exec(tool_effect_code(op_name, \"op\"), tool_ns)\n                                \n                        with ui.nav_panel(\"Visuals\", value=\"dvs_toolset\"):\n                            with ui.layout_columns(col_widths=(4, 4, 4), gap=button_gap, row_heights=button_heights):\n                                tool_ns = globals()\n                                for dv_name in dvs_menu:\n                                    dv_id = dv_name.lower().replace(' ', '_')\n                                    exec(tool_icon_code(dv_id, figsize), tool_ns)\n                                    icon = output_plot(f\"{dv_id}_button_icon\",\n                                                    width=icon_size[0], height=icon_size[1])\n\n                                    ui.input_action_button(f\"{dv_id}_button\", \"\", icon=icon,\n                                                        style=\"padding:0px;padding-top:5px;padding-bottom:5px\",\n                                                        disabled=True)\n                                    exec(tool_effect_code(dv_name, \"dv\"), tool_ns)\n\n                        with ui.nav_panel(\"Models\", value=\"mds_toolset\"):\n                            with ui.layout_columns(col_widths=(4, 4, 4), gap=button_gap, row_heights=button_heights):\n                                tool_ns = globals()\n                                for md_name in mds_menu:\n                                    md_id = md_name.lower().replace(' ', '_')\n                                    exec(tool_icon_code(md_id, figsize), tool_ns)\n                                    icon = output_plot(f\"{md_id}_button_icon\",\n                                                    width=icon_size[0], height=icon_size[1])\n\n                                    ui.input_action_button(f\"{md_id}_button\", \"\", icon=icon,\n                                                        style=\"padding:0px;padding-top:5px;padding-bottom:5px\",\n                                                        disabled=True)\n                                    exec(tool_effect_code(md_name, \"md\"), tool_ns)\n\n                with ui.layout_columns(col_widths=(5, 7), gap=\"20px\", height=\"140px\"):\n                    \n                    with ui.card():\n                        ui.card_header(\"Data file\", style=chd_style)\n                        ui.input_file(\"upload_data_file\", \"\",\n                                    button_label='Upload', accept=[\".csv\"], multiple=False, width=\"100%\")\n\n                        @reactive.effect\n                        @reactive.event(input.upload_data_file)\n                        def load_data_file():\n                            file = input.upload_data_file()\n                            if file is not None:\n                                df = pd.read_csv(file[0][\"datapath\"])\n                                input_dict = node_input.get()\n                                input_dict[\"data\"] = df\n\n                                node_list = nodes.get()\n                                node_list.clear()\n                                view = dict(name=\"data\",\n                                            string=df.to_string(max_rows=6, max_cols=6),\n                                            shape=df.shape)\n                                node_view.set(view)\n                                code = f\"data = pd.read_csv({file[0]['name'].__repr__()})\\ndata\"\n                                source = dict(name_out=\"data\", code=code, imports=[], markdown=\"\")\n                                node_list.append(PSNode((0, 0), \"data\",\n                                                        info=dict(name=\"data\", data=df, view=view, source=source)))\n                                node_input.set(dict(name=\"data\", data=df))\n\n                                cs = [\"red\"]\n                                ac = [\"gray\"]\n                                node_highlights.set(cs)\n                                arc_highlights.set(ac)\n\n                                var_names.set([\"data\"])\n\n                                tool_disable(False)\n                    \n                    with ui.card():\n                        ui.card_header(\"Download\", style=chd_style)\n                        with ui.layout_columns(col_widths=(4, 4, 4), gap=\"10px\"):\n                            @render.download(label=\"Excel\", filename=\"data.xlsx\")\n                            def export_data():\n                                with io.BytesIO() as buf:\n                                    node_list = nodes.get()\n                                    with pd.ExcelWriter(buf, engine=\"xlsxwriter\") as writer:\n                                        workbook = writer.book\n                                        fig_index = 1\n                                        model_index = 1\n                                        for node in node_list:\n                                            if node.ntype == \"data\":\n                                                # Output the dataset to the spreadsheet\n                                                info = node.info\n                                                info[\"data\"].to_excel(writer, sheet_name=info[\"name\"])\n                                            elif node.ntype == \"model\":\n                                                # Output the model fitting result to the spreadsheet\n                                                view = node.info[\"view\"]\n                                                result_cell = pd.DataFrame({'': [view[\"results\"]]})\n                                                result_cell.to_excel(writer, sheet_name=f\"Model {model_index}\")\n                                                model_index += 1\n                                            elif node.ntype == \"visual\":\n                                                # Output the figure as an image to the spreadsheet\n                                                view = node.info[\"view\"]\n                                                fig = view[\"fig\"]\n                                                \n                                                img_buffer = io.BytesIO()\n                                                fig.savefig(img_buffer, format=\"png\")\n                                                plt.close(fig)\n\n                                                sheet_name = f\"Figure {fig_index}\"\n                                                writer.sheets[sheet_name] = workbook.add_worksheet(sheet_name)\n                                                writer.sheets[sheet_name].insert_image(\"B3\", f\"plot_{fig_index}.png\",\n                                                                                    {\"image_data\": img_buffer})\n                                                fig_index += 1\n                                    buf.seek(0)\n                                    yield buf.getvalue()\n                            \n                            @render.download(label=\"Jupyter\", filename=\"code.ipynb\")\n                            def export_code():\n                                node_list = nodes.get()\n\n                                with io.BytesIO() as buf:\n                                    notebook_data = export(node_list)\n                                    buf.write(json.dumps(notebook_data, indent=4).encode(\"utf-8\"))\n\n                                    buf.seek(0)\n                                    yield buf.getvalue()\n                            \n                            @render.download(label=\"Python\", filename=\"code.py\")\n                            def export_py_code():\n                                node_list = nodes.get()\n\n                                with io.StringIO() as buf:\n                                    notebook_data = export(node_list)\n                                    code_list = []\n                                    for cell in notebook_data[\"cells\"]:\n                                        if cell[\"cell_type\"] == \"code\":\n                                            code_list.append(\"\".join(cell[\"source\"]))\n                                        else:\n                                            code_list.append(\"# \" + \"\".join(cell[\"source\"]).replace(\"\\n\", \"\\n# \"))\n                                    code_string = \"\\n\\n\".join(code_list)\n                                    \n                                    buf.write(code_string)\n\n                                    buf.seek(0)\n                                    yield buf.getvalue().encode(\"utf-8\")\n                \n                with ui.card(height='775px'):\n                        @render.express\n                        def canvas_plot_func():\n\n                            xmax, ymin = canvas_lim.get()\n                            canvas_width, canvas_height = int((xmax + 4) * 12.5), int((3.2 - ymin) * 12.5)\n                            output_plot(\"canvas_plot\", click=True)\n\n                            with ui.hold():\n\n                                @render.plot(alt=\"Canvas plot\", width=canvas_width, height=canvas_height)\n                                def canvas_plot():\n                                    \n                                    node_list = nodes.get()\n                                    cs = node_highlights.get()\n                                    ac = arc_highlights.get()\n\n                                    fig, ax = plt.subplots()\n                                    if len(node_list) > 0:\n                                        xl, yl = node_list[0].get_all_lines()\n                                        ax.plot(xl, yl, color='k', linewidth=2, zorder=0)\n                                    for node, c, a in zip(node_list, cs, ac):\n                                        pos = node.pos\n                                        node_circle = plt.Circle(pos, 1.0,\n                                                                facecolor=c, edgecolor='k', linewidth=2,\n                                                                zorder=5)\n                                        ax.add_patch(node_circle)\n                                        anno = \"D\" if node.ntype == \"data\" else \"V\" if node.ntype == \"visual\" else \"M\"\n                                        ac = \"white\" if c == \"red\" else \"k\"\n                                        ax.annotate(anno,  xy=pos, color=ac, fontsize=\"small\", weight=\"heavy\",\n                                                    horizontalalignment=\"center\", verticalalignment=\"center\",\n                                                    zorder=10)\n                                        #if sum(pos) > 0:\n                                        if pos[0] > 0:\n                                            before = node.before\n                                            pos = ((0.35*before.pos[0] + 0.65*node.pos[0]), node.pos[1])\n                                            arc_circle = plt.Circle(pos, 0.5,\n                                                                    facecolor=a, edgecolor='k',\n                                                                    linewidth=2, zorder=1)\n                                            ax.add_patch(arc_circle)\n\n                                    ax.set_xlim([-4, xmax])\n                                    ax.set_ylim([ymin, 3.2])\n                                    ax.axis('off')\n\n                                    return fig\n                                \n                        events = (input.canvas_plot_click, input.upload_data_file, input.cancel_data_button)\n                        @reactive.effect\n                        @reactive.event(*events)\n                        def update_canvas_plot():\n                            clk = input.canvas_plot_click()\n                            cs = node_highlights.get()\n                            ac = arc_highlights.get()\n                            selected_idx = None if 'red' not in cs else cs.index('red')\n                            node_list = nodes.get()\n                            xn = [n.pos[0] for n in node_list]\n                            yn = [n.pos[1] for n in node_list]\n\n                            input_dict = dict(name=\"\", data=None)\n                            if clk is not None:\n                                cs = ['gray'] * len(cs)\n                                ac = ['gray'] * len(cs)\n                                for i, (x, y) in enumerate(zip(xn, yn)):\n                                    if (clk['x'] - x)**2 + (clk['y'] - y)**2 < 1:\n                                        if i != selected_idx:\n                                            cs[i] = 'red'\n                                            node = node_list[i]\n                                            if node.ntype == \"data\":\n                                                node_info = node.info\n                                                input_dict = dict(name=node_info[\"name\"],\n                                                                data=node_info[\"data\"])\n                                                node_input.set(input_dict)\n                                                node_view.set(node_list[i].info[\"view\"])\n                                            elif node.ntype == \"visual\":\n                                                node_view.set(node_list[i].info[\"view\"])\n                                            elif node.ntype == \"model\":\n                                                node_view.set(node_list[i].info[\"view\"])\n                                            \n                                        break\n\n                                    if (clk['x'] - x + 3.5)**2 + (clk['y'] - y)**2 < 0.5**2:\n                                        node = node_list[i]\n                                        if i > 0 and ac[i] != 'orange':\n                                            node_view.set(node.info[\"source\"])\n                                            ac[i] = \"orange\"\n                                            break\n                                        \n                                node_highlights.set(cs)\n                                arc_highlights.set(ac)\n                                disabled = input_dict[\"data\"] is None\n\n                                tool_disable(disabled)\n\n            @render.express\n            def float_node_view():\n                view = node_view.get()\n                pos = dict(left=\"35%\", bottom=\"10%\")\n                if view is not None:\n                    if \"string\" in view:\n                        with ui.panel_absolute(draggable=True, width=\"590px\", **pos):\n                            with ui.panel_well():\n                                ui.card_header(\"Dataset\", style=chd_style)\n                                with ui.card():#(height=270):\n                                    row, col = view[\"shape\"]\n                                    #ui.markdown(f\"```{view['name']}```: {row} rows x {col} columns\\n\"\n                                    #            f\"```\\n{view['string']}\\n```\")\n                                    ui.markdown(\n                                        f\"<pre style='font-size:12px'><code>{view['name']}:</code>\"\n                                        f\" {row} rows x {col} columns<br><br>\"\n                                        f\"<code>{view['string'].replace('\\n', '<br>')}</code></pre>\"\n                                    )\n                                ui.input_action_button(\"close_data_view\", \"Close\", width=\"110px\")\n\n                    elif \"width\" in view and \"height\" in view:\n                        fig = view[\"fig\"]\n                        fig.set_dpi(60)\n                        width = int(np.minimum(view[\"width\"]*3/5, 600))\n                        height = view[\"height\"]*3/5\n                        with ui.panel_absolute(draggable=True, width=f\"{width + 90}px\", **pos):\n                            with ui.panel_well():\n                                ui.card_header(\"Figure\", style=chd_style)\n                                with ui.card(height=height+20, max_height=480):\n                                    @render.plot(width=width, height=height)\n                                    def fig_view_plot():\n                                        return fig\n                                ui.input_action_button(\"close_fig_view\", \"Close\", width=\"110px\")\n                    elif \"code\" in view:\n                        with ui.panel_absolute(draggable=True, width=f\"550px\", **pos):\n                            with ui.panel_well():\n                                ui.card_header(\"Source\", style=chd_style)\n                                code = view[\"code\"]\n                                if isinstance(code, dict):\n                                    keys = [\"vars\", \"dummy\", \"pipeline\", \"fitting\"]\n                                    code = '\\n'.join([code[k] for k in keys])\n                                markdown = view[\"markdown\"]\n                                clines = code.split(\"\\n\")\n                                if len(clines) > 15:\n                                    clines = clines[:6] + [\"... ...\"] * 3 + clines[-6:]\n                                    code = \"\\n\".join(clines)\n                                with ui.card():\n                                    ui.markdown(view[\"markdown\"])\n                                    hr(0.5)\n                                    #with ui.layout_columns(col_widths=(-10, 2)):\n                                    #    ui.input_action_link(\"node_view_copy\", \"copy\", style=\"height:1px\")\n                                    #@render.code\n                                    #def source_code_view():\n                                    #    return code\n                                    code_html = code.replace(\"\\n\", \"<br>\")\n                                    ui.markdown(f\"<pre style='font-size:12px'><code>{code_html}</code></pre>\")\n\n                                ui.input_action_button(\"close_source_view\", \"Close\", width=\"110px\")\n                    elif \"results\" in view:\n                        with ui.panel_absolute(draggable=True, width=f\"650px\", **pos):\n                            with ui.panel_well():\n                                ui.card_header(\"Model\", style=chd_style)\n                                results = view[\"results\"]\n                                with ui.card(max_height=280):\n                                    #@render.code\n                                    #def source_code_view():\n                                    #    return results\n                                    results_html = results.replace(\"\\n\", \"<br>\")\n                                    ui.markdown(f\"<pre style='font-size:12px'><code>{results_html}</code></pre>\")\n                                ui.input_action_button(\"close_model_view\", \"Close\", width=\"110px\")\n\n            @reactive.effect\n            @reactive.event(input.close_data_view)\n            def close_data_view_button():\n                node_view.set(None)\n            \n            @reactive.effect\n            @reactive.event(input.close_fig_view)\n            def close_fig_view_button():\n                node_view.set(None)\n            \n            @reactive.effect\n            @reactive.event(input.close_model_view)\n            def close_model_view_button():\n                node_view.set(None)\n\n            @reactive.effect\n            @reactive.event(input.close_source_view)\n            def close_source_view_button():\n                node_view.set(None)\n\n        with ui.nav_panel(None, value=\"ops_panel\"):\n            ui.HTML('<br>')\n            with ui.layout_sidebar(height='900px'):\n                with ui.sidebar(bg='#f8f8f8', width='350px', height='900px'):\n                    \n                    @render.express\n                    def ops_panel_ui():\n                        \n                        node = node_input.get()\n                        data_in = node[\"data\"]\n                        name_in = node[\"name\"]\n                        ops_dict = ops.get()\n                        if data_in is None:\n                            return\n\n                        columns = to_column_choices(data_in.columns)\n                        col_nums, col_cats, col_nbs = num_cat_labels(data_in)\n                        aggs = ['count', 'mean', 'median', 'std', 'var', 'min', 'max', 'sum']\n                        aggs_default = ['count', 'mean']\n\n                        op_type = op_selected.get()\n                        ui.markdown(f\"#### {op_type}\")\n\n                        if op_type == \"Value counts operations\":\n                            count_choices = columns\n                            ui.input_selectize(\"counts_ops_selectize\", \"Columns\",\n                                            choices=count_choices, selected=[],\n                                            multiple=True)\n                            \n                            @render.express(inline=True)\n                            def counts_ops_unstack_ui():\n                                selected = list(input.counts_ops_selectize())\n                                maxItems = len(selected) - 1 if len(selected) > 1 else 0\n                                ui.input_selectize(\"counts_ops_unstack_selectize\", \"Unstack levels\",\n                                                choices=selected, selected=[],\n                                                multiple=True, remove_button=True,\n                                                options={\"placeholder\": \"None\", \"maxItems\": maxItems})\n\n                            @render.express(inline=True)\n                            def counts_ops_sort_by_ui():\n                                unstack = list(input.counts_ops_unstack_selectize())\n                                if len(unstack) == 0:\n                                    with ui.layout_columns(col_widths=(6, 6)):\n                                        ui.input_switch(\"counts_ops_sort_switch\",\n                                                        \"Sort\", value=True)\n                                        ui.input_switch(\"counts_ops_sort_descending_switch\",\n                                                        \"Descending\", value=True)\n                            \n                            with ui.layout_columns(col_widths=(6, 6)):\n                                ui.input_switch(\"counts_ops_normalize_switch\", \"Normalize\")\n                                ui.input_switch(\"counts_ops_reset_switch\", \"Reset index\")\n        \n                        elif op_type == \"Select columns\":\n                            ui.input_selectize(\"select_columns_selectize\", \"Columns\",\n                                            choices=columns, selected=columns,\n                                            multiple=True)\n                        elif op_type == \"Sort rows\":\n                            ui.input_selectize(\"sort_columns_selectize\", \"Sort on columns\",\n                                            choices=columns, selected=[], multiple=True,\n                                            remove_button=True)\n                            with ui.layout_columns(col_widths=(6, 6)):\n                                ui.input_switch(\"sort_descending_switch\", \"Descending\")\n                                ui.input_switch(\"sort_reset_switch\", \"Reset index\")\n                        elif op_type == \"Boolean conditions\":\n                            with ui.layout_columns(col_widths=(8, 4)):\n                                ui.input_selectize(\"filter_column_selectize\", \"Column on the left\",\n                                                choices=[\"\"] + columns)\n                                filter_operators = [\"\", \"==\", \"!=\", \"<=\", \"<\", \">=\", \">\", \"in\", \"not in\"]\n                                ui.input_selectize(\"filter_operator_selectize\", \"Operator\",\n                                                choices=filter_operators, selected=\"\")\n                            ui.input_text(\"filter_value_text\", \"Value on the right\")\n\n                            with ui.layout_columns(col_widths=(-5, 7)):\n                                ui.input_action_button(\"add_filter_button\", \"New condition\")\n                            \n                            @reactive.effect\n                            @reactive.event(input.filter_column_selectize,\n                                            input.filter_operator_selectize,\n                                            input.filter_value_text)\n                            def add_filter_button_disable():\n                                cond1 = input.filter_column_selectize() == \"\"\n                                cond2 = input.filter_operator_selectize() == \"\"\n                                cond3 = str_to_values(input.filter_value_text(), sup=True) is None\n                                ui.update_action_button(\"add_filter_button\", disabled=(cond1 or cond2 or cond3))\n                            \n                            with ui.layout_columns(col_widths=(6, 6)):\n                                ui.input_switch(\"filter_select_rows_switch\", \"Filter rows\")\n\n                                @render.express\n                                def filter_reset_index_ui():\n                                    if input.filter_select_rows_switch():\n                                        ui.input_switch(\"filter_reset_switch\", \"Reset index\")\n                            \n                            @render.express\n                            def filter_condition_column_ui():\n                                if not input.filter_select_rows_switch():\n                                    ui.input_text(\"filter_condition_column_text\", \"To column\")\n\n                        elif op_type == \"Correlation\":\n                            ui.input_selectize(\"corr_metric_selectize\", \"Metric\",\n                                            choices=[\"Correlation\", \"Covariance\"])\n                            ui.input_selectize(\"corr_columns_selectize\", \"Columns\",\n                                            choices=[\"\"] + col_nbs, selected=col_nbs, multiple=True)\n                            ui.input_selectize(\"corr_drops_selectize\", \"Drop rows\", choices=[],\n                                            multiple=True, remove_button=True,\n                                            options={\"placeholder\": \"None\"})\n                            \n                            @reactive.effect\n                            @reactive.event(input.corr_columns_selectize)\n                            def orr_drops_selectize_update_choices():\n                                cols = input.corr_columns_selectize()\n                                if len(cols) > 0:\n                                    ui.update_selectize(\"corr_drops_selectize\", choices=cols, selected=[])\n                                else:\n                                    ui.update_selectize(\"corr_drops_selectize\", choices=[])\n                        elif op_type == \"Aggregation\":\n                            ui.input_selectize('agg_columns_selectize', 'Columns',\n                                            choices=[\"\"] + col_nbs, selected=\"\", multiple=True)\n                            ui.input_selectize(\"agg_methods_selectize\", 'Methods',\n                                            choices=aggs, selected=aggs_default, multiple=True)\n                            ui.input_switch(\"agg_transpose_switch\", \"Transpose\")\n                        elif op_type == \"Group by\":\n                            ui.input_selectize(\"group_by_columns_selectize\", \"Group by\",\n                                            choices=[\"\"] + columns,\n                                            multiple=True, remove_button=True)\n                            ui.input_selectize(\"group_view_columns_selectize\", \"View on\",\n                                            choices=[\"\"] + columns,\n                                            multiple=True, remove_button=True)\n                            ui.input_selectize(\"group_methods_selectize\", \"Methods\",\n                                            choices=[\"\"] + aggs,\n                                            multiple=True, remove_button=True)\n                            with ui.layout_columns(col_widths=(6, 6)):\n                                ui.input_switch(\"group_reset_switch\", \"Reset index\")\n                                ui.input_switch(\"group_transpose_switch\", \"Transpose\")\n                        elif op_type == \"Pivot table\":\n                            ui.input_selectize(\"pivot_values_selectize\", \"View on\",\n                                            choices=[\"\"] + columns, multiple=True, remove_button=True)\n                            ui.input_selectize(\"pivot_index_selectize\", \"Row index\",\n                                            choices=[\"\"] + columns, multiple=True, remove_button=True)\n                            ui.input_selectize(\"pivot_columns_selectize\", \"Columns\", choices=[\"\"] + col_cats,\n                                            multiple=True, remove_button=True)\n                            ui.input_selectize(\"pivot_methods_selectize\", \"Methods\", \n                                            choices=[\"\"] + aggs, multiple=True, remove_button=True)\n                            with ui.layout_columns(col_widths=(6, 6)):\n                                ui.input_switch(\"pivot_reset_switch\", \"Reset index\")\n                                ui.input_switch(\"pivot_transpose_switch\", \"Transpose\")\n                        elif op_type == \"Treat missing values\":\n                            nan_columns = to_column_choices(data_in.columns[data_in.isnull().sum() > 0])\n                            ui.input_selectize(\"nan_columns_selectize\", \"Columns\", choices=[\"\"]+nan_columns,\n                                            multiple=True, remove_button=True,\n                                            options={\"placeholder\": \"All columns\"})\n                            ui.input_selectize(\"nan_method_selectize\", \"Method\", choices=[\"drop\", \"fill\"])\n                            @render.express\n                            def nan_conditional_ui():\n                                if input.nan_method_selectize() == \"fill\":\n                                    ui.input_text(\"nan_fill_value_text\", \"Value to fill\")\n                                elif input.nan_method_selectize() == \"drop\":\n                                    ui.input_switch(\"nan_reset_switch\", \"Reset index\")\n                        elif op_type == \"Time trend\":\n                            ui.input_selectize(\"time_trend_columns_selectize\", \"Columns\",\n                                            choices=[\"\"] + col_nums,\n                                            multiple=True, remove_button=True)\n                            with ui.layout_columns(col_widths=(4, 8)):\n                                transforms =  [\"change\", \"relative change\", \"log change\", \"moving average\"]\n                                inline_label(\"Transform\")\n                                ui.input_selectize(\"time_trend_transform_selectize\", \"\",\n                                                choices=[\"\"] + transforms)\n                                inline_label(\"Steps\")\n                                ui.input_text(\"time_trend_steps_text\", \"\", placeholder=\"1\")\n                            ui.input_switch(\"time_trend_drop_original_data\", \"Drop original data\")\n                        elif op_type == \"ANOVA\":\n                            ui.input_selectize(\"anova_target_selectize\", \"Numerical target\",\n                                            choices=[\"\"] + col_nums)\n                            ui.input_selectize(\"anova_features_selectize\", \"Features\",\n                                            choices=[\"\"], multiple=True, remove_button=True)\n                            ui.input_text(\"anova_formula_text\", \"Formula\")\n\n                            with ui.layout_columns(col_widths=(2, 4, 2, 4)):\n                                inline_label(\"Type\")\n                                ui.input_selectize(\"anova_type_selectize\", \"\", choices=[\"I\", \"II\", \"III\"])\n                                inline_label(\"Test\")\n                                ui.input_selectize(\"anova_test_selectize\", \"\", choices=[\"F\", \"Chisq\", \"Cp\"])\n\n                            @reactive.effect\n                            @reactive.event(input.anova_target_selectize, ignore_init=True)\n                            def anoava_features_choices_update():\n                                node = node_input.get()\n                                data_in = node[\"data\"]\n                                max_cats = np.minimum(len(data_in)//10, 100)\n                                target = to_selected_columns(input.anova_target_selectize(), data_in)\n                                if target != \"\":\n                                    xdata = data_in.drop(columns=[target])\n                                    feature_choices = discrete_labels(xdata, max_cats=max_cats)\n                                    ui.update_selectize(\"anova_features_selectize\",\n                                                        choices=[\"\"] + feature_choices, selected=\"\")\n                                else:\n                                    ui.update_selectize(\"anova_features_selectize\",\n                                                        choices=[\"\"] + columns)\n                            \n                            @reactive.effect\n                            @reactive.event(input.anova_target_selectize,\n                                            input.anova_features_selectize, ignore_init=True)\n                            def anova_formula_text_update():\n                                target = to_selected_columns(input.anova_target_selectize(), data_in)\n                                features = to_selected_columns(input.anova_features_selectize(), data_in)\n                                if target != \"\" and len(features) > 0:\n                                    features_list = [f\"C({item})\" if item in col_nbs else item for item in features]\n                                    formula = f\"{target} ~ {' + '.join(features_list)}\"\n                                    ui.update_text(\"anova_formula_text\", value=formula)\n                                else:\n                                    ui.update_text(\"anova_formula_text\", value=\"\")\n\n                        elif op_type == \"Variance inflation factor\":\n                            #_, feature_choices = model_variables(data_in)\n                            feature_choices = [col for col in col_nbs if\n                                            data_in[col].isnull().sum() == 0 and\n                                            data_in[col].min() < data_in[col].max()]\n                            ui.input_selectize(\"vif_features_selectize\", \"Features\",\n                                            choices=feature_choices, selected=col_nums,\n                                            multiple=True)\n                            with ui.layout_columns(col_widths=(6, 6)):\n                                ui.input_switch(\"vif_add_constant_switch\", \"Intercept\", value=True)\n                                ui.input_switch(\"vif_reset_switch\", \"Reset index\", value=True)\n\n                        elif op_type == \"Clustering\":\n                            ui.input_selectize(\"clustering_method_selectize\", \"Method\",\n                                            choices=[\"K-means clustering\", \"Hierarchical clustering\"])\n                            ui.input_selectize(\"clustering_columns_selectize\", \"Features for clustering\",\n                                            choices=[\"\"] + col_nbs, multiple=True, remove_button=True)\n                            ui.input_text(\"clustering_numbers_text\", \"Numbers of clusters\")\n                        elif op_type == \"Over sampling\":\n                            ui.input_selectize(\"over_sampling_target_selectize\", \"Categorical target\",\n                                            choices=[\"\"] + col_cats)\n                            ui.input_selectize(\"over_sampling_features_selectize\", \"Features\",\n                                            choices=[\"\"] + columns,\n                                            multiple=True, remove_button=True)\n                            ui.input_selectize(\"over_sampling_method_selectize\", \"Method\",\n                                            choices=[\"\", \"Random over-sampling\", \"SMOTE\", \"ADASYN\"])\n                            with ui.layout_columns(col_widths=(6, 6)):\n                                strategies = [\"auto\", \"minority\", \"not minority\", \"not majority\", \"all\"]\n                                ui.input_selectize(\"over_sampling_strategy_selectize\", \"Strategy\",\n                                                choices=strategies)\n                                ui.input_numeric(\"over_sampling_k_neighbors_numeric\", \"Neighbor No.\",\n                                                min=1, max=50, step=1, value=5)\n                            \n                            @reactive.effect\n                            @reactive.event(input.over_sampling_target_selectize)\n                            def over_sampling_features_choices_update():\n                                target = input.over_sampling_target_selectize()\n                                if target != \"\":\n                                    cols = [c for c in columns if c != target]\n                                    ui.update_selectize(\"over_sampling_features_selectize\",\n                                                        choices=cols, selected=cols)\n                                else:\n                                    ui.update_selectize(\"over_sampling_features_selectize\",\n                                                        choices=[\"\"] + columns, selected=\"\")\n                            \n                            @reactive.effect\n                            @reactive.event(input.over_sampling_features_selectize)\n                            def over_sampling_method_ui_update():\n                                node = node_input.get()\n                                data_in = node[\"data\"]\n                                features = to_selected_columns(input.over_sampling_features_selectize(), data_in)\n                                xdata = data_in[features]\n                                is_num = xdata.apply(is_numeric_dtype, axis=0).values\n                                if all(is_num):\n                                    choices = [\"\", \"Random over-sampling\", \"SMOTE\", \"ADASYN\"]\n                                else:\n                                    choices = [\"\", \"Random over-sampling\", \"SMOTE\"]\n                                ui.update_selectize(\"over_sampling_method_selectize\",\n                                                    choices=choices, selected=\"\")\n\n                        elif op_type == \"Add columns\":\n                            choices = [\"Arithmetic expression\",\n                                       \"Type conversion\", \"String operations\",\n                                       \"To date time\", \"To dummies\", \"To segments\"]\n                            ui.input_selectize(\"add_cols_type_selectize\", \"Expression type\",\n                                               choices=choices)\n                            \n                            label_dict = {\"Arithmetic expression\": \"Formula\",\n                                          \"Type conversion\": \"Data type\",\n                                          \"String operations\": \"Methods\",\n                                          \"To date time\": \"Format\",\n                                          \"To dummies\": \"\",\n                                          \"To segments\": \"Bins\",\n                                          \"\": \"Formula\"}\n\n                            @render.express(inline=True)\n                            def add_cols_from():\n\n                                exp_type = input.add_cols_type_selectize()\n                                if exp_type in choices[:2]:\n                                    cols = columns\n                                elif exp_type in choices[2:-1]:\n                                    cols = col_cats\n                                else:\n                                    cols = col_nums\n                                \n                                multiple = exp_type == choices[0]\n                                \n                                ui.input_selectize(\"add_cols_from_columns_selectize\", \"From column(s)\",\n                                                choices=[\"\"] + cols, \n                                                multiple=multiple, remove_button=multiple)\n                                ui.input_text(\"add_cols_to_columns_text\", \"To column(s)\")\n\n                                if exp_type == \"To dummies\":\n                                    with ui.layout_columns(col_widths=(6, 6)):\n                                        ui.input_switch(\"add_cols_drop_switch\", \"Drop first\")\n                                        ui.input_switch(\"add_cols_binary_switch\", \"To binaries\")\n                                else:\n                                    label = label_dict[exp_type]\n                                    ui.input_text(\"add_cols_expression_text\", label)\n                                    if exp_type == \"To segments\":\n                                        ui.input_text(\"add_cols_labels_text\", \"Labels\", placeholder=\"None\")        \n\n                            @reactive.effect\n                            @reactive.event(input.add_cols_type_selectize)\n                            def reset_add_cols():\n\n                                ui.update_selectize(\"add_cols_columns_selectize\", selected=\"\")\n                            \n                            @reactive.effect\n                            @reactive.event(input.add_cols_from_columns_selectize)\n                            def update_formula():\n\n                                from_cols = to_selected_columns(input.add_cols_from_columns_selectize(), data_in)\n                                if input.add_cols_type_selectize() == \"Arithmetic expression\":\n                                    terms = [f\"{name_in}[{c.__repr__()}]\" for c in from_cols]\n                                    ui.update_text(\"add_cols_expression_text\", value=\" + \".join(terms))\n                        \n                        hr(0)\n                        ui.input_text(\"op_name_out_text\", \"Output name\",\n                                    placeholder=\"Key in a variable name...\")\n                        \n                        ui.input_text_area(\"op_markdown_text_area\", \"Markdown\",\n                                        placeholder=\"Key in notes...\", height=\"100px\")\n                        \n                        #ui.input_action_button(\"op_debug\", \"Debug\")\n                        #@render.code\n                        #@reactive.event(input.op_debug)\n                        #def op_debug_display():\n                        #    return str(ops_dict)\n\n                    @reactive.effect\n                    @reactive.event(input.add_filter_button, ignore_init=True)\n                    def add_filter_button_action():\n                        \n                        filters = op_memory.get()\n                        filters.append(dict(column=input.filter_column_selectize(),\n                                            operator=input.filter_operator_selectize(),\n                                            value=input.filter_value_text()))\n                        ui.update_selectize(\"filter_column_selectize\", selected=\"\")\n                        ui.update_selectize(\"filter_operator_selectize\", selected=\"\")\n                        ui.update_text(\"filter_value_text\", value=\"\")\n\n                ui.input_switch(\"op_show_code_switch\", \"Show code\")\n\n                @render.express(inline=True)\n                def op_source_results_ui():\n\n                    node = node_input.get()\n                    data_in = node[\"data\"]\n                    name_in = node[\"name\"]\n                \n                    ops_dict = ops.get()\n                    source = ops_dict[\"source\"]\n\n                    name_out = input.op_name_out_text().strip()\n                    source = operation_source(op_selected.get(), name_in, data_in, input, op_memory.get())\n                    ops_dict[\"type\"] = op_selected.get()\n                    ops_dict[\"source\"] = source\n\n                    if name_out in var_names.get():\n                        msg = f\"The variable name '{name_out}' was already used.\"\n                        source[\"error\"] = msg\n                        data_out = msg\n                    else:\n                        source[\"error\"] = None\n                        data_out = operation_exec_source(data_in, name_in, source)\n                    ops_dict[\"data_out\"] = data_out\n\n                    if input.op_show_code_switch():\n                        \n                        @render.ui\n                        @reactive.event(input.op_markdown_text_area)\n                        def op_markdown_display():\n                            if input.op_markdown_text_area().strip() != \"\":\n                                return ui.markdown(input.op_markdown_text_area())\n                                    \n                        @render.code\n                        def op_code_display():\n                            imports = source[\"imports\"]\n                            imports_code = f\"{'\\n'.join(imports)}\\n\\n\" if len(imports) > 0 else \"\"\n                            return (\n                                f\"{imports_code}\"\n                                f\"{source['code']}\"\n                            )\n\n                        hr()\n                \n                #with ui.layout_columns(col_widths=(3, -9)):\n                #    with ui.layout_columns(col_widths=(6, 6)):\n                #        inline_label(\"Rows to display\")\n                #        ui.input_selectize(\"data_min_rows\", \"\",\n                #                           choices=[\"10\", \"16\", \"30\", \"50\", \"100\", \"1000\"])\n\n                    with ui.card(height=\"720px\", full_screen=True):\n\n                        if isinstance(data_out, str):\n                            ui_block(f\"<b>Error</b>: {data_out}\", 'danger')\n                        else:\n                            row, col = data_out.shape\n                            table_width = len(data_out.__repr__().split('\\n')[0]) * 72 // 96\n                            \n                            with ui.layout_column_wrap(width=f\"{table_width}px\",\n                                                       fixed_width=True, fill=False, fillable=False):\n                                @render.table()\n                                def data_preview():\n                                    table = display_table(data_out, 16).style.format(precision=4)\n                                    table.set_caption(f\"{row} rows x {col} columns\")\n                                    return table.set_table_styles(table_styles)\n\n                    @reactive.effect\n                    def operation_save_update_disable():\n                        \n                        ops_dict = ops.get()\n                        if ops_dict[\"source\"] is None:\n                            ui.update_action_button('save_data', disabled=True)\n                        else:\n                            name_out = ops_dict[\"source\"][\"name_out\"]\n                            data_out = ops_dict[\"data_out\"]\n                            if isinstance(data_out, str) or data_out is None or name_out == \"\":\n                                ui.update_action_button('save_data_button', disabled=True)\n                            else:\n                                ui.update_action_button('save_data_button', disabled=False)\n\n                with ui.layout_columns(col_widths=(2, -8, 2)):\n                    ui.input_action_button(\"cancel_data_button\", \"Cancel\", value=0)\n                    ui.input_action_button(\"save_data_button\", \"Save\")\n\n                @reactive.effect\n                @reactive.event(input.cancel_data_button, input.save_data_button)\n                def save_cancel_data_button_action():\n\n                    ui.update_text(\"op_name_out_text\", value=\"\")\n                    ui.update_text_area(\"op_markdown_text_area\", value=\"\")\n                    op_memory.set([])\n\n                @reactive.effect\n                @reactive.event(input.save_data_button)\n                def save_data_button_action():\n\n                    node_list = nodes.get()\n                    ops_dict = ops.get()\n                    source = ops_dict[\"source\"]\n                    name_out = source[\"name_out\"]\n                    data_out = ops_dict[\"data_out\"]\n                    \n                    view = dict(name=name_out,\n                                string=data_out.to_string(max_rows=6, max_cols=6),\n                                shape=data_out.shape)\n                    node_view.set(view)\n                    \n                    cs = node_highlights.get()\n                    root = node_list[cs.index(\"red\")]\n                    info = dict(name=name_out, data=data_out,\n                                view=view, source=source)\n                    node_list.append(root.grow(\"data\", info=info))\n                    node_input.set(dict(name=name_out, data=data_out, view=view))\n\n                    cs = ['gray'] * (len(node_list) - 1) + ['red']\n                    node_highlights.set(cs)\n                    arc_highlights.set([\"gray\"] * len(cs))\n\n                    all_names = var_names.get()\n                    all_names.append(name_out)\n\n        with ui.nav_panel(None, value=\"dvs_panel\"):\n            color = reactive.value('#1f77b4')\n            with ui.layout_sidebar(height=\"900px\"):\n                with ui.sidebar(bg='#f8f8f8', width='350px', height='900px'):\n                \n                    @render.express\n                    def dvs_panel_ui():\n                        dv_type = dv_selected.get()\n                        ui.markdown(f\"#### {dv_type}\")\n\n                        node = node_input.get()\n                        data = node[\"data\"]\n                        if data is None:\n                            return\n                        \n                        dvs_dict = dvs.get()\n\n                        with ui.navset_tab(id=\"visual_config_nav\"):\n                            with ui.nav_panel(\"Plot\"):\n\n                                columns = to_column_choices(data.columns)\n                                col_nums, col_cats, col_nbs = num_cat_labels(data)\n\n                                if dv_type == \"Value counts\":\n                                    choices = [\"\"] + discrete_labels(data, max_cats=100)\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Column\")\n                                        ui.input_selectize(\"value_counts_column_selectize\", \"\", choices=choices)\n\n                                    with ui.layout_columns(col_widths=(6, 6)):\n                                        ui.input_selectize(\"value_counts_direction_selectize\", \"Direction\",\n                                                           choices=[\"Vertical\", \"Horizontal\"])\n                                        ui.input_selectize(\"value_counts_method_selectize\", \"Method\",\n                                                           choices=[\"Count\", \"Density\"])\n                                    \n                                    @reactive.effect\n                                    @reactive.event(input.value_counts_column_selectize,\n                                                    input.value_counts_direction_selectize,\n                                                    input.value_counts_method_selectize)\n                                    def value_counts_labels_update():\n\n                                        column = input.value_counts_column_selectize()\n                                        direction =  input.value_counts_direction_selectize()\n                                        method = input.value_counts_method_selectize()\n\n                                        if direction == \"Vertical\":\n                                            ui.update_text(\"fig_xlabel_text\", value=column)\n                                            ui.update_text(\"fig_ylabel_text\", value=method)\n                                        elif direction == \"Horizontal\":\n                                            ui.update_text(\"fig_xlabel_text\", value=method)\n                                            ui.update_text(\"fig_ylabel_text\", value=column)\n\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Palette\", pt=\"8px\")\n                                        with ui.layout_columns(col_widths=(6, 6), gap=\"2px\"):\n\n                                            @render.ui\n                                            def value_counts_hexcolor():\n                                                c = color.get()\n                                                return ui.HTML(f\"<span style='{hc_style}'>{c}</span>\")\n\n                                            @render_bokeh(height=\"36px\", width=\"100%\", fill=True)\n                                            def value_counts_color_picker():\n                                                picker = ColorPicker(\n                                                    title=\"\",\n                                                    color='#1f77b4',\n                                                    min_width=95\n                                                )\n\n                                                def update_value_counts_picker_color(attr, old, new):\n                                                    color.set(new)\n\n                                                picker.on_change('color', update_value_counts_picker_color)\n                                                return picker\n                                    \n                                        inline_label(\"Opacity\", pt=\"22px\")\n                                        ui.input_slider(\"value_counts_alpha_slider\", \"\",\n                                                        min=0.2, max=1, step=0.05, value=1)\n                                \n                                elif dv_type == \"Histogram\":\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Column\")\n                                        ui.input_selectize(\"hist_column_selectize\", \"\",\n                                                           choices=[\"\"]+col_nums)\n\n                                        choices = [\"\"] + discrete_labels(data, max_cats=8)\n                                        inline_label(\"Group\")\n                                        ui.input_selectize(\"hist_group_by_selectize\", \"\",\n                                                           choices=choices, remove_button=True,\n                                                           options={\"placeholder\": \"None\"})\n                                    \n                                    with ui.layout_columns(col_widths=(6, 6)):\n                                        ui.input_numeric(\"hist_bins_numeric\", \"Bins\", min=5, max=80, value=10)\n                                        ui.input_selectize(\"hist_method_selectize\", \"Method\",\n                                                           choices=[\"Count\", \"Density\"])\n                                    \n                                    @reactive.effect\n                                    @reactive.event(input.hist_column_selectize,\n                                                    input.hist_method_selectize)\n                                    def hist_labels_update():\n\n                                        column = input.hist_column_selectize()\n                                        method = input.hist_method_selectize()\n\n                                        ui.update_text(\"fig_xlabel_text\", value=column)\n                                        ui.update_text(\"fig_ylabel_text\", value=method)\n                                        \n                                    with ui.navset_hidden(id=\"hist_conditional_ui\"):\n                                        with ui.nav_panel(None, value=\"hist_single_case\"):\n                                            with ui.layout_columns(col_widths=(3, 9)):\n                                                inline_label(\"Palette\", pt=\"8px\")\n                                                with ui.layout_columns(col_widths=(6, 6), gap=\"2px\"):\n\n                                                    @render.ui\n                                                    def hist_hexcolor():\n                                                        c = color.get()\n                                                        return ui.HTML(f\"<span style='{hc_style}'>{c}</span>\")\n\n                                                    @render_bokeh(height=\"36px\", width=\"100%\", fill=True)\n                                                    def hist_color_picker():\n                                                        picker = ColorPicker(\n                                                            title=\"\",\n                                                            color='#1f77b4',\n                                                            min_width=95\n                                                        )\n                                            \n                                                        def update_hist_picker_color(attr, old, new):\n                                                            color.set(new)\n\n                                                        picker.on_change('color', update_hist_picker_color)\n                                                        return picker\n                                        \n                                        with ui.nav_panel(None, value=\"hist_multiple_case\"):\n                                            with ui.layout_columns(col_widths=(6, 6)):\n                                                ui.input_selectize(\"hist_grouped_norm_selectize\", \"Normalized\",\n                                                                choices=[\"Separately\", \"Jointly\"])\n                                                ui.input_selectize(\"hist_grouped_multiple_selectize\", \"Style\",\n                                                                choices=[\"Layer\", \"Stack\", \"Fill\"])\n                                            with ui.layout_columns(col_widths=(3, 9)):\n                                                inline_label(\"Colormap\")\n                                                ui.input_selectize(\"hist_grouped_cmap_selectize\", \"\",\n                                                                choices=cat_cmaps, selected=\"tab10\")\n                                    \n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Opacity\", pt=\"22px\")\n                                        ui.input_slider(\"hist_alpha_slider\", \"\",\n                                                        min=0.2, max=1, step=0.05, value=1)\n                                    \n                                    @reactive.effect\n                                    @reactive.event(input.hist_group_by_selectize)\n                                    def hist_group_by_selectize_update_ui():\n\n                                        if input.hist_group_by_selectize() == \"\":\n                                            ui.update_navs(\"hist_conditional_ui\", selected=\"hist_single_case\")\n                                        else:\n                                            ui.update_navs(\"hist_conditional_ui\", selected=\"hist_multiple_case\")\n                                \n                                elif dv_type == \"KDE\":\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Column\")\n                                        ui.input_selectize(\"kde_column_selectize\", \"\",\n                                                        choices=[\"\"]+col_nums)\n\n                                        choices = [\"\"] + discrete_labels(data, max_cats=8)\n                                        inline_label(\"Group\")\n                                        ui.input_selectize(\"kde_group_by_selectize\", \"\",\n                                                        choices=choices, remove_button=True,\n                                                        options={\"placeholder\": \"None\"})\n                                    \n                                    @reactive.effect\n                                    @reactive.event(input.kde_column_selectize)\n                                    def hist_labels_update():\n\n                                        column = input.kde_column_selectize()\n                                        \n                                        ui.update_text(\"fig_xlabel_text\", value=column)\n                                        ui.update_text(\"fig_ylabel_text\", value=\"Density\")\n                                        \n                                    with ui.navset_hidden(id=\"kde_conditional_ui\"):\n                                        with ui.nav_panel(None, value=\"kde_single_case\"):\n                                            with ui.layout_columns(col_widths=(3, 9)):\n                                                inline_label(\"Palette\", pt=\"8px\")\n                                                with ui.layout_columns(col_widths=(6, 6), gap=\"2px\"):\n\n                                                    @render.ui\n                                                    def kde_hexcolor():\n                                                        c = color.get()\n                                                        return ui.HTML(f\"<span style='{hc_style}'>{c}</span>\")\n\n                                                    @render_bokeh(height=\"36px\", width=\"100%\", fill=True)\n                                                    def kde_color_picker():\n                                                        picker = ColorPicker(\n                                                            title=\"\",\n                                                            color='#1f77b4',\n                                                            min_width=95\n                                                        )\n                                            \n                                                        def update_kde_picker_color(attr, old, new):\n                                                            color.set(new)\n\n                                                        picker.on_change('color', update_kde_picker_color)\n                                                        return picker\n                                        \n                                        with ui.nav_panel(None, value=\"kde_multiple_case\"):\n                                            with ui.layout_columns(col_widths=(6, 6)):\n                                                ui.input_selectize(\"kde_grouped_norm_selectize\", \"Normalized\",\n                                                                choices=[\"Separately\", \"Jointly\"])\n                                                ui.input_selectize(\"kde_grouped_multiple_selectize\", \"Style\",\n                                                                choices=[\"Layer\", \"Stack\", \"Fill\"])\n                                            with ui.layout_columns(col_widths=(3, 9)):\n                                                inline_label(\"Colormap\")\n                                                ui.input_selectize(\"kde_grouped_cmap\", \"\",\n                                                                choices=cat_cmaps, selected=\"tab10\")\n                                    \n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Opacity\", pt=\"22px\")\n                                        ui.input_slider(\"kde_alpha_slider\", \"\",\n                                                        min=0.2, max=1, step=0.05, value=1)\n                                    \n                                    @reactive.effect\n                                    @reactive.event(input.kde_group_by_selectize)\n                                    def kde_group_by_selectize_update_ui():\n\n                                        if input.kde_group_by_selectize() == \"\":\n                                            ui.update_navs(\"kde_conditional_ui\", selected=\"kde_single_case\")\n                                        else:\n                                            ui.update_navs(\"kde_conditional_ui\", selected=\"kde_multiple_case\")\n\n                                elif dv_type == \"Box plot\":\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Column\")\n                                        ui.input_selectize(\"boxplot_column_selectize\", \"\",\n                                                           choices=[\"\"]+col_nums)\n\n                                        groups = [\"\"] + discrete_labels(data, max_cats=50)\n                                        inline_label(\"Group\")\n                                        ui.input_selectize(\"boxplot_group_by_selectize\", \"\",\n                                                           choices=groups, remove_button=True,\n                                                           options={\"placeholder\": \"None\"})\n                                    \n                                        hues = [\"\"] + discrete_labels(data, max_cats=8)\n                                        inline_label(\"Hues\")\n                                        ui.input_selectize(\"boxplot_hue_selectize\", \"\",\n                                                           choices=hues, remove_button=True,\n                                                           options={\"placeholder\": \"None\"})\n\n                                    @reactive.effect\n                                    @reactive.event(input.boxplot_column_selectize,\n                                                    input.boxplot_group_by_selectize,\n                                                    input.boxplot_direction_selectize)\n                                    def boxplot_labels_update():\n\n                                        column = input.boxplot_column_selectize()\n                                        group = input.boxplot_group_by_selectize()\n                                        if input.boxplot_direction_selectize() == \"Horizontal\":\n                                            group, column = column, group\n                                        ui.update_text(\"fig_xlabel_text\", value=group)\n                                        ui.update_text(\"fig_ylabel_text\", value=column)\n                                    \n                                    with ui.layout_columns(col_widths=(6, 6)):\n                                        ui.input_switch(\"boxplot_notch_switch\", \"Notch\")\n                                        ui.input_switch(\"boxplot_mean_switch\", \"Mean\")\n                                        ui.input_selectize(\"boxplot_direction_selectize\", \"Direction\",\n                                                           choices=[\"Vertical\", \"Horizontal\"])\n                                        ui.input_numeric(\"boxplot_width_numeric\", \"Width\",\n                                                         min=0.1, max=1, step=0.05, value=0.8)\n                                    \n                                    with ui.navset_hidden(id=\"boxplot_conditional_ui\"):\n                                        with ui.nav_panel(None, value=\"boxplot_single_case\"):\n                                            with ui.layout_columns(col_widths=(3, 9)):\n                                                inline_label(\"Palette\", pt=\"8px\")\n                                                with ui.layout_columns(col_widths=(6, 6), gap=\"2px\"):\n\n                                                    @render.ui\n                                                    def boxplot_hexcolor():\n                                                        c = color.get()\n                                                        return ui.HTML(f\"<span style='{hc_style}'>{c}</span>\")\n\n                                                    @render_bokeh(height=\"36px\", width=\"100%\", fill=True)\n                                                    def boxplot_color_picker():\n                                                        picker = ColorPicker(\n                                                            title=\"\",\n                                                            color='#1f77b4',\n                                                            min_width=95\n                                                        )\n                                            \n                                                        def update_boxplot_picker_color(attr, old, new):\n                                                            color.set(new)\n\n                                                        picker.on_change('color', update_boxplot_picker_color)\n                                                        return picker\n                                        \n                                        with ui.nav_panel(None, value=\"boxplot_multiple_case\"):\n                                            with ui.layout_columns(col_widths=(3, 9)):\n                                                inline_label(\"Colormap\")\n                                                ui.input_selectize(\"boxplot_grouped_cmap_selectize\", \"\",\n                                                                   choices=cat_cmaps, selected=\"tab10\")\n                                        \n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Opacity\", pt=\"22px\")\n                                        ui.input_slider(\"boxplot_alpha_slider\", \"\",\n                                                        min=0.2, max=1, step=0.05, value=1)\n\n                                    @reactive.effect\n                                    @reactive.event(input.boxplot_hue_selectize)\n                                    def boxplot_group_by_selectize_update_ui():\n\n                                        if input.boxplot_hue_selectize() == \"\":\n                                            ui.update_navs(\"boxplot_conditional_ui\",\n                                                           selected=\"boxplot_single_case\")\n                                        else:\n                                            ui.update_navs(\"boxplot_conditional_ui\",\n                                                           selected=\"boxplot_multiple_case\")\n                                \n                                elif dv_type == \"Probability plot\":\n                                    with ui.layout_columns(col_widths=(4, 8)):\n                                        inline_label(\"Column\")\n                                        ui.input_selectize(\"proba_plot_selectize\", \"\", choices=[\"\"] + col_nums)\n                                        distr_choices = [\"Normal\", \"Exponential\", \"Uniform\"]\n                                        inline_label(\"Distribution\")\n                                        ui.input_selectize(\"proba_plot_distri_selectize\", \"\",\n                                                           choices=distr_choices)\n                                    \n                                    ui.input_switch(\"proba_plot_standardize_switch\", \"Standardize\")\n\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Palette\", pt=\"8px\")\n                                        with ui.layout_columns(col_widths=(6, 6), gap=\"2px\"):\n\n                                            @render.ui\n                                            def probplot_hexcolor():\n                                                c = color.get()\n                                                return ui.HTML(f\"<span style='{hc_style}'>{c}</span>\")\n\n                                            @render_bokeh(height=\"36px\", width=\"100%\", fill=True)\n                                            def probplot_color_picker():\n                                                picker = ColorPicker(\n                                                    title=\"\",\n                                                    color='#1f77b4',\n                                                    min_width=95\n                                                )\n                                            \n                                                def update_probplot_picker_color(attr, old, new):\n                                                    color.set(new)\n\n                                                picker.on_change('color', update_probplot_picker_color)\n                                                return picker\n\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Opacity\", pt=\"22px\")\n                                        ui.input_slider(\"proba_plot_alpha_slider\", \"\",\n                                                        min=0.2, max=1, step=0.05, value=1)\n                                    \n                                    @reactive.effect\n                                    @reactive.event(input.proba_plot_selectize,\n                                                    input.proba_plot_standardize_switch)\n                                    def proba_plot_labels_update():\n                                        if input.proba_plot_selectize() != \"\":\n                                            ui.update_text(\"fig_xlabel_text\", value=\"Theoretical Quantiles\")\n                                            std_code = \"Standardized \" if input.proba_plot_standardize_switch() else \"\"\n                                            ui.update_text(\"fig_ylabel_text\", value=f\"{std_code}Sample Quantiles\")\n\n                                elif dv_type == \"Pair plot\":\n\n                                    ui.input_selectize(\"pair_columns_selectize\", \"Columns\", \n                                                       choices=[\"\"] + col_nums,\n                                                       multiple=True, remove_button=True)\n                                    ui.input_selectize(\"pair_drop_rows_selectize\", \"Drop rows\",\n                                                       choices=[\"\"], multiple=True, remove_button=True,\n                                                       options={\"placeholder\": \"None\"})\n                                    \n                                    @reactive.effect\n                                    def pair_columns_selectize_choices_update():\n                                        cols = list(input.pair_columns_selectize())\n                                        if len(cols) > 0:\n                                            ui.update_selectize(\"pair_drop_rows_selectize\", choices=cols)\n\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Hues\")\n                                        hue_choices = [\"\"] + discrete_labels(data, max_cats=8)\n                                        ui.input_selectize(\"pair_hue_selectize\", \"\",\n                                                           choices=[\"\"] + hue_choices, remove_button=True,\n                                                           options={\"placeholder\": \"None\"})\n                                        inline_label(\"Colormap\")\n                                        ui.input_selectize(\"pair_cmap_selectize\", \"\",\n                                                           choices=cat_cmaps, selected=\"tab10\")\n                                        inline_label(\"Opacity\", pt=\"22px\")\n                                        ui.input_slider(\"pair_alpha_slider\", \"\",\n                                                        min=0.2, max=1, step=0.05, value=1)\n\n                                    with ui.layout_columns(col_widths=(6, 6)):\n                                        ui.input_selectize(\"pair_kind_selectize\", \"Plot kind\", \n                                                           choices=[\"scatter\", \"kde\", \"hist\", \"reg\"])\n                                        ui.input_selectize(\"pair_diag_kind_selectize\", \"Diagonal kind\", \n                                                           choices=[\"auto\", \"kde\", \"hist\"])\n                                    ui.input_switch(\"pair_corner_switch\", \"Corner\")\n                                \n                                elif dv_type == \"Heat map\":\n                                    ui.input_selectize(\"heatmap_columns_selectize\", \"Columns\",\n                                                       choices=col_nbs, selected=[], remove_button=True,\n                                                       multiple=True)\n                                    \n                                    with ui.layout_columns(col_widths=(4, 8)):\n                                        inline_label(\"Colormap\")\n                                        ui.input_selectize(\"heatmap_colormap_selectize\", \"\",\n                                                           choices=num_cmaps)\n\n                                    with ui.layout_columns(col_widths=(6, 6)):\n                                        ui.input_switch(\"heatmap_annot_switch\", \"Annotate\", value=True)\n                                        ui.input_switch(\"heatmap_top_tick_switch\", \"Ticks at top\", value=True)\n\n                                elif dv_type == \"Bar chart\":\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Y-data\")\n                                        ui.input_selectize(\"bar_ydata_selectize\", \"\", choices=[\"\"]+col_nums)\n                                    \n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Palette\", pt=\"8px\")\n                                        with ui.layout_columns(col_widths=(6, 6), gap=\"2px\"):\n\n                                            @render.ui\n                                            def bar_hexcolor():\n                                                c = color.get()\n                                                return ui.HTML(f\"<span style='{hc_style}'>{c}</span>\")\n\n                                            @render_bokeh(height=\"36px\", width=\"100%\", fill=True)\n                                            def bar_color_picker():\n                                                picker = ColorPicker(\n                                                    title=\"\",\n                                                    color=init_color.get(),\n                                                    min_width=95\n                                                )\n                                            \n                                                def update_bar_picker_color(attr, old, new):\n                                                    color.set(new)\n\n                                                picker.on_change('color', update_bar_picker_color)\n                                                return picker\n                                    \n                                    with ui.layout_columns(col_widths=(-6, 6)):\n                                        ui.input_action_button(\"bar_add_button\", \"New bar\", )\n\n                                        @reactive.effect\n                                        @reactive.event(input.bar_ydata_selectize)\n                                        def bar_add_button_disable():\n\n                                            ui.update_action_button(\"bar_add_button\",\n                                                                    disabled=input.bar_ydata_selectize() == \"\")\n                                    \n                                    hr(1, 0.4)\n                                    with ui.layout_columns(col_widths=(6, 6)):\n                                        ui.input_switch(\"bar_sort_switch\", \"Sort bars\")\n\n                                        @render.express\n                                        def bar_sort_ascending_ui():\n                                            if input.bar_sort_switch():\n                                                ui.input_switch(\"bar_sort_descending_switch\", \"Descending\")\n\n                                    @render.express\n                                    def bar_sort_by_ui():\n                                        if input.bar_sort_switch():\n                                            choices = []\n                                            bars = dv_memory.get().copy()\n                                            for bar in bars:\n                                                choices.append(bar[\"ydata\"])\n                                            if input.bar_ydata_selectize() != \"\":\n                                                choices.append(input.bar_ydata_selectize())\n                                            if input.bar_xdata_selectize() != \"\":\n                                                choices.append(input.bar_xdata_selectize())\n                                            with ui.layout_columns(col_widths=(3, 9)):\n                                                inline_label(\"Sort by\")\n                                                ui.input_selectize(\"bar_sort_by_selectize\", \"\",\n                                                                   choices=[\"\"] + choices, remove_button=True,\n                                                                   options={\"placeholder\": \"Row index\"})\n                                    \n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"X-data\")\n                                        ui.input_selectize(\"bar_xdata_selectize\", \"\",\n                                                           choices=[\"\"]+columns, remove_button=True,\n                                                           options={\"placeholder\": \"Row index\"})\n                                    \n                                    with ui.layout_columns(col_widths=(6, 6)):\n                                        dt = [\"Vertical\", \"Horizontal\"]\n                                        ui.input_selectize(\"bar_direction_selectize\", \"Direction\", choices=dt)\n                                        btype = [\"Clustered\", \"Stacked\"]\n                                        ui.input_selectize(\"bar_mode_selectize\", \"Type of bars\", choices=btype)\n\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Width\", pt=\"22px\")\n                                        ui.input_slider(\"bar_width_slider\", \"\",\n                                                        min=0.1, max=1.0, value=0.8, step=0.05)\n                                        inline_label(\"Opacity\", pt=\"22px\")\n                                        ui.input_slider(\"bar_alpha_slider\", \"\",\n                                                        min=0.2, max=1.0, value=1.0, step=0.05)\n                                \n                                elif dv_type == \"Radar chart\":\n                                    ui.input_selectize(\"radar_selectize\", \"Columns\",\n                                                       choices=[\"\"] + col_nums,\n                                                       multiple=True, remove_button=True)\n                                    with ui.layout_columns(col_widths=(4, 8)):\n                                        inline_label(\"Ticks angle\", pt=\"22px\")\n                                        ui.input_slider(\"radar_tick_angle_slider\", \"\",\n                                                        min=0, max=355, value=0, step=5)\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Category\")\n                                        ui.input_selectize(\"radar_cats_selectize\", \"\",\n                                                           choices=[\"\"] + columns, remove_button=True,\n                                                           options={\"placeholder\": \"Row index\"})\n                                        inline_label(\"Colormap\")\n                                        ui.input_selectize(\"radar_cmap_selectize\", \"\",\n                                                           choices=cat_cmaps, selected=\"tab10\")\n                                        inline_label(\"Opacity\", pt=\"22px\")\n                                        ui.input_slider(\"radar_alpha_slider\", \"\",\n                                                        min=0.2, max=1.0, value=0.6, step=0.05)\n\n                                elif dv_type == \"Line plot\":\n\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Y-data\")\n                                        ui.input_selectize(\"line_ydata_selectize\", \"\",\n                                                           choices=[\"\"]+col_nums)\n                                        \n                                        inline_label(\"X-data\")\n                                        ui.input_selectize(\"line_xdata_selectize\", \"\",\n                                                           choices=[\"\"]+columns, remove_button=True,\n                                                           options={\"placeholder\": \"Row index\"})\n                                        \n                                        inline_label(\"Margin\")\n                                        ui.input_selectize(\"line_margin_data_selectize\", \"\",\n                                                           choices=[\"\"]+col_nums,\n                                                           multiple=True, remove_button=True,\n                                                           options={\"placeholder\": \"None\", \"maxItems\": 2})\n                                    with ui.layout_columns(col_widths=(6, 6)):\n                                        styles = [\"solid\", \"dash\", \"dot\", \"dash-dot\"]\n                                        ui.input_selectize(\"line_style_selectize\", \"Style\", choices=styles)\n                                        markers = [\"none\", \"circle\", \"square\", \"dot\",\n                                                   \"diamond\", \"triangle\", \"star\", \"cross\"]\n                                        ui.input_selectize(\"line_marker_selectize\", \"Marker\", choices=markers)\n                                    \n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label('Width', pt=\"22px\")\n                                        ui.input_slider(\"line_width_slider\", \"\",\n                                                        min=0.5, max=4, step=0.5, value=1.5)\n\n                                        inline_label(\"Scale\", \"22px\")\n                                        ui.input_slider(\"line_marker_scale_slider\", \"\",\n                                                        min=0.1, max=2, step=0.05, value=1)\n\n                                        inline_label(\"Palette\", pt=\"8px\")\n                                        with ui.layout_columns(col_widths=(6, 6), gap=\"2px\"):\n\n                                            @render.ui\n                                            def line_hexcolor():\n                                                c = color.get()\n                                                return ui.HTML(f\"<span style='{hc_style}'>{c}</span>\")\n\n                                            @render_bokeh(height=\"36px\", width=\"100%\", fill=True)\n                                            def line_color_picker():\n                                                picker = ColorPicker(\n                                                    title=\"\",\n                                                    color=init_color.get(),\n                                                    min_width=95\n                                                )\n                                            \n                                                def update_line_picker_color(attr, old, new):\n                                                    color.set(new)\n\n                                                picker.on_change('color', update_line_picker_color)\n                                                return picker\n                                    \n                                    with ui.layout_columns(col_widths=(-6, 6)):\n                                        ui.input_action_button(\"line_add_button\", \"New line\", )\n                                    \n                                    @reactive.effect\n                                    @reactive.event(input.line_ydata_selectize)\n                                    def line_add_button_disable():\n\n                                        ui.update_action_button(\"line_add_button\",\n                                                                disabled=input.line_ydata_selectize() == \"\")\n                                \n                                elif dv_type == \"Scatter plot\":\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Y-data\")\n                                        ui.input_selectize(\"scatter_ydata_selectize\", \"\",\n                                                           choices=[\"\"]+columns)\n                                        inline_label(\"X-data\")\n                                        ui.input_selectize(\"scatter_xdata_selectize\", \"\",\n                                                           choices=[\"\"]+columns, remove_button=True,\n                                                           options={\"placeholder\": \"Row index\"})\n                                        @reactive.effect\n                                        @reactive.event(input.scatter_xdata_selectize,\n                                                        input.scatter_ydata_selectize)\n                                        def scatter_labels_update():\n                                            ui.update_text(\"fig_xlabel_text\",\n                                                           value=input.scatter_xdata_selectize())\n                                            ui.update_text(\"fig_ylabel_text\",\n                                                           value=input.scatter_ydata_selectize())\n\n                                        inline_label(\"Size\")\n                                        ui.input_selectize(\"scatter_size_data_selectize\", \"\",\n                                                           choices=[\"\"]+col_nums,\n                                                           remove_button=True, options={\"placeholder\": \"None\"})\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label('Scale', pt=\"22px\")\n                                        ui.input_slider(\"scatter_size_scale_slider\", \"\",\n                                                        min=0.1, max=2, value=1, step=0.05)\n                                    \n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Hues\")\n                                        ui.input_selectize(\"scatter_color_data_selectize\", \"\",\n                                                           choices=[\"\"]+columns,\n                                                           remove_button=True, options={\"placeholder\": \"None\"})\n                                    \n                                    with ui.navset_hidden(id=\"scatter_conditional_ui\"):\n                                        with ui.nav_panel(None, value=\"scatter_single_case\"):\n                                            with ui.layout_columns(col_widths=(3, 9)):\n                                                inline_label(\"Palette\", pt=\"8px\")\n                                                with ui.layout_columns(col_widths=(6, 6), gap=\"2px\"):\n\n                                                    @render.ui\n                                                    def scatter_hexcolor():\n                                                        c = color.get()\n                                                        return ui.HTML(f\"<span style='{hc_style}'>{c}</span>\")\n\n                                                    @render_bokeh(height=\"36px\", width=\"100%\", fill=True)\n                                                    def scatter_color_picker():\n                                                        picker = ColorPicker(\n                                                            title=\"\",\n                                                            color='#1f77b4',\n                                                            min_width=95\n                                                        )\n                                            \n                                                        def update_scatter_picker_color(attr, old, new):\n                                                            color.set(new)\n\n                                                        picker.on_change('color', update_scatter_picker_color)\n                                                        return picker\n                                        \n                                        with ui.nav_panel(None, value=\"scatter_multiple_case\"):\n                                            with ui.layout_columns(col_widths=(3, 9)):\n                                                inline_label(\"Colormap\")\n                                                ui.input_selectize(\"scatter_cmap_selectize\", \"\",\n                                                                   choices=num_cmaps, selected=\"viridis\")\n                                        \n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Opacity\", pt=\"22px\")\n                                        ui.input_slider(\"scatter_alpha_slider\", \"\",\n                                                        min=0.2, max=1.0, value=1.0, step=0.05)\n                                    \n                                    @reactive.effect\n                                    @reactive.event(input.scatter_color_data_selectize)\n                                    def scatter_color_data_selectize_update_ui():\n\n                                        color_data = input.scatter_color_data_selectize()\n\n                                        if color_data == \"\":\n                                            ui.update_navs(\"scatter_conditional_ui\",\n                                                           selected=\"scatter_single_case\")\n                                        else:\n                                            ui.update_navs(\"scatter_conditional_ui\",\n                                                           selected=\"scatter_multiple_case\")\n                                            \n                                            if color_data in col_cats:\n                                                cmaps, cmap = cat_cmaps, \"tab10\"\n                                            else:\n                                                cmaps, cmap = num_cmaps, \"viridis\"\n                                            ui.update_selectize(\"scatter_cmap_selectize\",\n                                                                choices=cmaps, selected=cmap)\n                                \n                                elif dv_type == \"Regression plot\":\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Y-data\")\n                                        ui.input_selectize(\"regplot_ydata_selectize\", \"\",\n                                                           choices=[\"\"]+col_nbs)\n                                        inline_label(\"X-data\")\n                                        ui.input_selectize(\"regplot_xdata_selectize\", \"\",\n                                                           choices=[\"\"]+col_nbs)\n                                        \n                                        @reactive.effect\n                                        @reactive.event(input.regplot_xdata_selectize,\n                                                        input.regplot_ydata_selectize)\n                                        def regplot_labels_update():\n                                            ui.update_text(\"fig_xlabel_text\",\n                                                           value=input.regplot_xdata_selectize())\n                                            ui.update_text(\"fig_ylabel_text\",\n                                                           value=input.regplot_ydata_selectize())\n                                    \n                                        choices = [\"\"] + discrete_labels(data, max_cats=8)\n                                        inline_label(\"Hues\")\n                                        ui.input_selectize(\"regplot_color_data_selectize\", \"\",\n                                                           choices=choices,\n                                                           remove_button=True, options={\"placeholder\": \"None\"})\n                                    \n                                    with ui.navset_hidden(id=\"regplot_conditional_ui\"):\n                                        with ui.nav_panel(None, value=\"regplot_single_case\"):\n                                            with ui.layout_columns(col_widths=(3, 9)):\n                                                inline_label(\"Palette\", pt=\"8px\")\n                                                with ui.layout_columns(col_widths=(6, 6), gap=\"2px\"):\n\n                                                    @render.ui\n                                                    def regplot_hexcolor():\n                                                        c = color.get()\n                                                        return ui.HTML(f\"<span style='{hc_style}'>{c}</span>\")\n\n                                                    @render_bokeh(height=\"36px\", width=\"100%\", fill=True)\n                                                    def regplot_color_picker():\n                                                        picker = ColorPicker(\n                                                            title=\"\",\n                                                            color='#1f77b4',\n                                                            min_width=95\n                                                        )\n                                            \n                                                        def update_regplot_picker_color(attr, old, new):\n                                                            color.set(new)\n\n                                                        picker.on_change('color', update_regplot_picker_color)\n                                                        return picker\n                                        \n                                        with ui.nav_panel(None, value=\"regplot_multiple_case\"):\n                                            with ui.layout_columns(col_widths=(3, 9)):\n                                                inline_label(\"Colormap\")\n                                                ui.input_selectize(\"regplot_cmap_selectize\", \"\",\n                                                                   choices=num_cmaps, selected=\"viridis\")\n                                    \n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Opacity\", pt=\"22px\")\n                                        ui.input_slider(\"regplot_alpha_slider\", \"\",\n                                                        min=0.2, max=1.0, value=1.0, step=0.05)\n                                    \n\n                                    with ui.layout_columns(col_widths=(6, 6)):\n                                        ui.input_switch(\"regplot_fitted_line_switch\", \"Fitted line\", value=True)\n                                        ui.input_switch(\"regplot_centroid_switch\", \"Centroid\")\n                                        inline_label(\"Confidence level\")\n                                        ui.input_selectize(\"regplot_ci_level_selectize\", \"\",\n                                                           choices=[\"None\", \"80%\", \"85%\", \"90%\", \"95%\", \"99%\"])\n                                        inline_label(\"Transformation\")\n                                        ui.input_selectize(\"regplot_transform_selectize\", \"\",\n                                                           choices=[\"None\", \"Polynomial\"])\n\n                                    @render.express(inline=True)\n                                    def regplot_poly_degree_ui():\n                                        if input.regplot_transform_selectize() == \"Polynomial\":\n                                            with ui.layout_columns(col_widths=(6, 6)):\n                                                inline_label(\"Polynomial order\")\n                                                ui.input_numeric(\"regplot_poly_order_numeric\", \"\", \n                                                                 min=2, max=10, step=1, value=2)\n\n                                    @reactive.effect\n                                    @reactive.event(input.regplot_ydata_selectize,\n                                                    input.regplot_xdata_selectize)\n                                    def regplot_transform_choices_update():\n                                        node = node_input.get()\n                                        data = node[\"data\"]\n                                        ylabel = to_selected_columns(input.regplot_ydata_selectize(), data)\n                                        xlabel = to_selected_columns(input.regplot_xdata_selectize(), data)\n                                        if xlabel != \"\" and ylabel != \"\":\n                                            choices = [\"None\", \"Polynomial\"]\n                                            xvalue = data[xlabel]\n                                            if (xvalue > 0).all():\n                                                choices.append(\"Log\")\n                                            yvalue = data[ylabel]\n                                            if is_bool_dtype(yvalue) or ((yvalue*(1-yvalue) >= 0).all()):\n                                                choices.append(\"Logistic\")\n                                            ui.update_selectize(\"regplot_transform_selectize\",\n                                                                choices=choices)\n\n                                    @reactive.effect\n                                    @reactive.event(input.regplot_color_data_selectize)\n                                    def regplot_color_data_selectize_update_ui():\n\n                                        color_data = input.regplot_color_data_selectize()\n\n                                        if color_data == \"\":\n                                            ui.update_navs(\"regplot_conditional_ui\",\n                                                           selected=\"regplot_single_case\")\n                                        else:\n                                            ui.update_navs(\"regplot_conditional_ui\",\n                                                           selected=\"regplot_multiple_case\")\n                                            cmaps, cmap = cat_cmaps, \"tab10\"\n                                            ui.update_selectize(\"regplot_cmap_selectize\",\n                                                                choices=cmaps, selected=cmap)\n\n                                elif dv_type == \"Filled areas\":\n\n                                    ui.input_selectize(\"filled_areas_ydata_selectize\", \"Y-data\",\n                                                       choices=[\"\"] + col_nums,\n                                                       multiple=True, remove_button=True)\n                                    \n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"X-data\")\n                                        ui.input_selectize(\"filled_areas_xdata_selectize\", \"\",\n                                                           choices=[\"\"] + columns, remove_button=True,\n                                                           options={\"placeholder\": \"Row index\"})\n\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Style\")\n                                        ui.input_selectize(\"filled_areas_style_selectize\", \"\",\n                                                           choices=[\"Layer\", \"Stack\"], selected=\"Stack\")\n\n                                        inline_label(\"Cmap\")\n                                        ui.input_selectize(\"filled_areas_cmap_selectize\", \"\",\n                                                           choices=cat_cmaps, selected=\"tab10\")\n\n                                        inline_label(\"Opacity\", pt=\"22px\")\n                                        ui.input_slider(\"filled_areas_alpha_slider\", \"\",\n                                                        min=0.2, max=1, step=0.05, value=1)\n                                \n                                if dv_type == \"ACF and PACF\":\n                                    ui.input_selectize(\"ac_plot_selectize\", \"Columns\",\n                                                       choices=[\"\"] + col_nums,\n                                                       multiple=True, remove_button=True,\n                                                       options={\"maxItems\": 8})\n                                    max_lags = min([data.shape[0] // 2, 100])\n                                    with ui.layout_columns(col_widths=(6, 6)):\n                                        ui.input_selectize(\"ac_plot_type_selectize\", \"Plot type\",\n                                                           choices=[\"ACF\", \"PACF\"])\n                                        ui.input_selectize(\"ac_plot_method_selectize\", \"Method\", choices=[\"\"])\n                                        ui.input_numeric(\"ac_plot_lags_numeric\", \"Lags\",\n                                                         min=4, max=max_lags, value=27, step=1)\n                                        ui.input_selectize(\"ac_plot_ci_selectize\", \"Confidence level\",\n                                                           choices=[\"80%\", \"85%\", \"90%\", \"95%\", \"99%\"],\n                                                           selected=\"95%\")\n\n                                    with ui.layout_columns(col_widths=(3, 9)):\n                                        inline_label(\"Palette\", pt=\"8px\")\n                                        with ui.layout_columns(col_widths=(6, 6), gap=\"2px\"):\n                                    \n                                            @render.ui\n                                            def ac_plot_hexcolor():\n                                                c = color.get()\n                                                return ui.HTML(f\"<span style='{hc_style}'>{c}</span>\")\n\n                                            @render_bokeh(height=\"36px\", width=\"100%\", fill=True)\n                                            def ac_plot_color_picker():\n                                                picker = ColorPicker(\n                                                    title=\"\",\n                                                    color='#1f77b4',\n                                                    min_width=95\n                                                )\n                                            \n                                                def update_ac_plot_picker_color(attr, old, new):\n                                                    color.set(new)\n\n                                                picker.on_change('color', update_ac_plot_picker_color)\n                                                return picker\n\n                                    @reactive.effect\n                                    @reactive.event(input.ac_plot_type_selectize)\n                                    def ac_plot_method_choices_update():\n\n                                        if input.ac_plot_type_selectize() == \"ACF\":\n                                            choices = [\"Not adjusted\", \"Adjusted\"]\n                                        else:\n                                            choices = [\"ywunbiased\", \"yw\", \"ywm\", \"ols\", \"ols-inefficient\",\n                                                       \"ols-adjusted\", \"ld\", \"ldb\", \"burg\"]\n                                        ui.update_selectize(\"ac_plot_method_selectize\",\n                                                            choices=choices, selected=choices[0])\n\n                            if dv_type not in [\"Pair plot\", \"Radar chart\", \"ACF and PACF\"]:\n                                with ui.nav_panel(\"Labels\"):\n                                    ui.input_text(\"fig_title_text\", \"Title\")\n                                    with ui.layout_columns(col_widths=(6, 6)):\n                                        ui.input_text(\"fig_xlabel_text\", \"X-label\")\n                                        ui.input_text(\"fig_ylabel_text\", \"Y-label\")\n                                            \n                                    locs = [\"upper left\", \"upper right\",\n                                            \"lower left\", \"lower right\"]    \n                                    ui.input_selectize(\"fig_legend_loc_selectize\", \"Legend location\",\n                                                       choices=locs, selected=locs[0])\n        \n                                    with ui.layout_columns(col_widths=(6, 6)):\n                                        ui.input_selectize(\"fig_fontsize_selectize\", \"Font size\",\n                                                           choices=list(range(6, 21)), selected=10)\n                                        ui.input_numeric(\"fig_xtick_rotate_numeric\", \"Rotate X-ticks:\",\n                                                         min=-90, max=90, step=10, value=0)\n\n                            with ui.nav_panel(\"Figure\"):\n\n                                ui.input_switch(\"fig_grid_switch\", \"Grid\")\n                                            \n                                ui.markdown(\"Figure size\")\n                                    \n                                with ui.layout_columns(col_widths=(3, 9)):\n                                    inline_label('Width', '22px')\n                                    ui.input_slider(\"fig_width_slider\", \"\",\n                                                    value=640, min=150, max=1500, step=5)\n                                    inline_label('Height', '22px')\n                                    ui.input_slider(\"fig_height_slider\", \"\",\n                                                    value=480, min=150, max=1500, step=5)\n                        \n                        hr(0)\n                        ui.input_text_area(\"dv_markdown_text_area\", \"Markdown\",\n                                        placeholder=\"Key in notes...\", height=\"100px\")\n                        \n                    @reactive.effect\n                    @reactive.event(input.bar_add_button, ignore_init=True)\n                    def bar_add_button_action():\n                        \n                        bars = dv_memory.get()\n                        bars.append(dict(ydata=input.bar_ydata_selectize(), color=color.get()))\n                        ui.update_selectize(\"bar_ydata_selectize\", selected=\"\")\n\n                        index = default_colors.index(init_color.get())\n                        init_color.set(default_colors[(index + 1) % len(default_colors)])\n                        color.set(init_color.get())\n                    \n                    @reactive.effect\n                    @reactive.event(input.line_add_button, ignore_init=True)\n                    def line_add_button_action():\n                        \n                        lines = dv_memory.get()\n                        lines.append(dict(ydata=input.line_ydata_selectize(),\n                                          xdata=input.line_xdata_selectize(),\n                                          margin=input.line_margin_data_selectize(),\n                                          color=color.get(),\n                                          style=input.line_style_selectize(),\n                                          marker=input.line_marker_selectize(),\n                                          width=input.line_width_slider(),\n                                          scale=input.line_marker_scale_slider()))\n\n                        ui.update_selectize(\"line_margin_data_selectize\", selected=\"\")\n                        ui.update_selectize(\"line_ydata_selectize\", selected=\"\")\n                        ui.update_selectize(\"line_style_selectize\", selected=\"solid\")\n                        ui.update_selectize(\"line_marker_selectize\", selected=\"none\")\n\n                        ui.update_slider(\"line_width_slider\", value=1.5)\n                        ui.update_slider(\"line_marker_scale_slider\", value=1)\n\n                        index = default_colors.index(init_color.get())\n                        init_color.set(default_colors[(index + 1) % len(default_colors)])\n                        color.set(init_color.get())\n\n                ui.input_switch(\"dv_show_code_switch\", \"Show code\")\n\n                @render.express(inline=True)\n                def show_visual_results_source():\n                \n                    node = node_input.get()\n                    data = node[\"data\"]\n                    if data is None:\n                        return\n                    name_in = node[\"name\"]\n                    dvs_dict = dvs.get()\n                    col_nums, col_cats, col_nbs = num_cat_labels(data)\n\n                    source = visual_source(dv_selected.get(), name_in, data, input, color.get(), dv_memory.get())\n                    dvs_dict[\"type\"] = dv_selected.get()\n                    dvs_dict[\"source\"] = source\n\n                    if input.dv_show_code_switch():\n                        \n                        @render.ui\n                        @reactive.event(input.dv_markdown_text_area)\n                        def dv_markdown_display():\n                            if input.dv_markdown_text_area().strip() != \"\":\n                                return ui.markdown(input.dv_markdown_text_area())\n\n                        @render.code\n                        def dv_code_display():\n                            return (\n                                f\"{'\\n'.join(source['imports'])}\\n\\n\"\n                                f\"{source['code']}\"\n                            )\n\n                        hr()\n\n                    with ui.card(height=\"720px\", full_screen=True):\n                        fig = visual_exec_source(data, name_in, dvs_dict)\n                        if isinstance(fig, str):\n                            ui_block(fig, \"danger\")\n                            fig = None\n                        else:\n                            size = (640, 480) if fig is None else (fig.get_size_inches() * 100).round()\n                            width, height = size\n                            @render.plot(width=width, height=height)\n                            def visual_figure_preview(): \n                                return fig\n\n                            dvs_dict[\"width\"] = width\n                            dvs_dict[\"height\"] = height\n                            dvs_dict[\"fig\"] = fig\n\n                with ui.layout_columns(col_widths=(2, -8, 2)):\n                    ui.input_action_button(\"cancel_visual_button\", \"Cancel\")\n                    ui.input_action_button(\"save_visual_button\", \"Save\")\n                \n                @reactive.effect\n                @reactive.event(input.save_visual_button)\n                def save_visual_button_action():\n\n                    dvs_dict = dvs.get()\n                    node_list = nodes.get()\n                    cs = node_highlights.get()\n\n                    view = dict(fig=dvs_dict[\"fig\"], width=dvs_dict[\"width\"], height=dvs_dict[\"height\"])\n                    root = node_list[cs.index(\"red\")]\n                    info = dict(view=view, source=dvs_dict[\"source\"])\n                    node_view.set(view)\n                    node_list.append(root.grow(\"visual\", info=info))\n                    \n                    cs = [\"gray\"] * len(cs) + [\"red\"]\n                    node_highlights.set(cs)\n                    arc_highlights.set([\"gray\"] * len(cs))\n                    \n                    tool_disable(True)\n\n                @reactive.effect\n                @reactive.event(input.cancel_visual_button, input.save_visual_button)\n                def visual_to_canvas_action():\n\n                    ui.update_text_area(\"dv_markdown_text_area\", value=\"\")\n                    dv_memory.set([])\n                    color.set(\"#1f77b4\")\n                    init_color.set(default_colors[0])\n\n        with ui.nav_panel(None, value=\"mds_panel\"):\n            with ui.layout_sidebar(height=\"900px\"):\n                with ui.sidebar(bg='#f8f8f8', width='350px', height='900px'):\n                    \n                    @render.express\n                    def mds_panel_ui():\n\n                        node = node_input.get()\n                        data, name = node[\"data\"], node[\"name\"]\n                        if data is None:\n                            return\n                        mds_dict = mds.get()\n                        md_type = md_selected.get()\n\n                        col_nums, col_cats, col_nbs = num_cat_labels(data)\n                        col_predicted, col_predictors = model_variables(data)\n                        if md_type == \"Statsmodels\":\n                            col_predicted = col_nums\n\n                        ui.markdown(f\"#### {md_type}\")\n                        with ui.navset_hidden(id=\"model_page_navset\"):\n                            with ui.nav_panel(\"model_page1\"):\n                                if md_type == \"Sklearn models\":\n                                    ui.markdown(\"**Step 1: specify variables**\")\n\n                                ui.input_selectize(\"model_dependent_selectize\", \"Dependent variable\",\n                                                   choices=[\"\"] + col_predicted)\n                                ui.input_selectize(\"model_independent_selectize\", \"Independent variables\",\n                                                   choices=[\"\"] + col_predictors,\n                                                   multiple=True, remove_button=True)\n                                ui.input_selectize(\"model_numeric_cats_selectize\", \"Numbers treated as categories\",\n                                                   choices=[\"\"], multiple=True, remove_button=True,\n                                                   options={\"placeholder\": \"None\"})\n                                \n                                if md_type == \"Statsmodels\":\n                                    ui.input_selectize(\"statsmodels_type_selectize\", \"Model type\",\n                                                       choices=[\"ols\", \"logit\"])\n                                    ui.input_text(\"statsmodels_formula_text\", \"Formula\")\n\n                                    hr()\n                                    ui.input_text(\"statsmodels_output_text\", \"Output name\",\n                                                  placeholder=\"Key in a variable name...\")\n\n                                    @render.express\n                                    def fit_statsmodels_ui():\n                                        if input.statsmodels_formula_text().strip() != \"\":\n                                            ui.input_task_button(\"statsmodels_fitting_button\", \"Fit model\",\n                                                                 label_busy=\"Running...\", width=\"100%\")\n\n                            with ui.nav_panel(\"model_page2\"):\n                                ui.markdown(\"**Step 2: model pipeline**\")\n                                \n                                @render.express\n                                @reactive.event(input.model_dependent_selectize,\n                                                input.model_independent_selectize)\n                                def sklearn_predicted_var_ui():\n                                    mds_dict = mds.get()\n                                    pred_type = mds_dict[\"type\"]\n                                    if pred_type == \"Classifier\":\n                                        ind_col = input.model_independent_selectize()\n                                        nc = len(set(ind_col).intersection(set(col_cats) - set(col_nbs)))\n                                        nc += len(input.model_numeric_cats_selectize())\n                                        os_choices = [\"Not applied\", \"RandomOverSampler\", \"SMOTE\"]\n                                        if nc == 0:\n                                            os_choices.append(\"ADASYN\")\n                                        ui.input_selectize(\"sklearn_over_sampling_selectize\", \"Over-sampling\",\n                                                           choices=os_choices)\n                                    else:\n                                        ui.input_switch(\"sklearn_predicted_log_switch\",\n                                                        \"Log transformation of target\")\n\n                                @render.express\n                                def sklearn_over_sampling_k_neighbors_ui():\n                                    mds_dict = mds.get()\n                                    pred_type = mds_dict[\"type\"]\n                                    if pred_type == \"Classifier\":\n                                        if input.sklearn_over_sampling_selectize() in [\"SMOTE\", \"ADASYN\"]:\n                                            with ui.layout_columns(col_widths=(4, 8)):\n                                                inline_label(\"Neighbors\")\n                                                ui.input_text(\"sklearn_over_sampling_k_neighbors\", \"\",\n                                                              placeholder=\"5\")\n\n                                with ui.layout_columns(col_widths=(4, 8)):\n                                    inline_label(\"Scalilng\")\n                                    ui.input_selectize(\"sklearn_scaling_selectize\", \"\",\n                                                       choices=[\"Not applied\", \"StandardScaler\", \"Normalizer\"])\n                                    inline_label(\"PCA\")\n                                    ui.input_text(\"sklearn_pca_numbers\", \"\", placeholder=\"Not applied\")\n\n                                hr()\n                                ui.input_selectize(\"sklearn_model_selectize\", \"Model selection\",\n                                                   choices=[\"\"])\n                                \n                                @render.express\n                                def sklearn_model_hypers_ui():\n                                    model_name = input.sklearn_model_selectize()\n                                    if model_name == \"\":\n                                        return\n                                    hyper_list = model_hypers[model_name]\n                                    \n                                    if len(hyper_list) == 1:\n                                        hyper, label, default_value = hyper_list[0]\n                                        ui.input_text(f\"sklearn_{model_name.lower()}_{hyper}\", label,\n                                                      placeholder=default_value)\n                                    else:\n                                        for hyper, label, default_value in hyper_list:\n                                            with ui.layout_columns(col_widths=(6, 6), gap=\"5px\"):\n                                                inline_label(label)\n                                                ui.input_text(f\"sklearn_{model_name.lower()}_{hyper}\", \"\",\n                                                              placeholder=default_value)\n                    \n                            with ui.nav_panel(\"model_page3\"):\n                                ui.markdown(\"**Step 3: model fitting and evaluation**\")\n                                with ui.layout_columns(col_widths=(4, 8), px=\"5px\"):\n                                    inline_label(\"CV Folds\")\n                                    ui.input_numeric(\"sklearn_cv_folds_numeric\", \"\",\n                                                     min=2, max=100, step=1, value=5)\n                            \n                                ui.input_switch(\"sklearn_test_set_switch\", \"Test ratio\")\n                                @render.express\n                                def sklearn_test_ratio_shown():\n                                    if input.sklearn_test_set_switch():\n                                        ui.input_numeric(\"sklearn_test_ratio_numeric\", \"\",\n                                                         min=0.05, max=0.5, step=0.05, value=0.25)\n                                \n                                ui.input_task_button(\"sklearn_fitting_button\", \"Fit model\",\n                                                     label_busy=\"Running...\", width=\"100%\")\n\n                            with ui.nav_panel(\"model_page4\"):\n                                ui.markdown(\"**Step 4: save results**\")\n                                ui.input_text(\"sklearn_output_text\", \"Output name\",\n                                              placeholder=\"Key in a variable name...\")\n                                \n                                @render.express\n                                def sklearn_regression_out_ui():\n                                    mds_dict = mds.get()\n                                    if mds_dict[\"type\"] == \"Regressor\":\n                                        ui.input_switch(\"sklearn_residual_switch\", \"Include residuals\")\n                                \n                                ui.input_checkbox_group(\"sklearn_outputs_checkbox\", \" \", choices=[])\n\n                                @render.express\n                                def sklearn_class_output_ui():\n                                    dependent = input.model_dependent_selectize()\n                                    if dependent == \"\":\n                                        return\n                                    mds_dict = mds.get()\n                                    if mds_dict[\"type\"] == \"Classifier\":\n                                        with ui.layout_columns(col_widths=(4, 8), gap=\"5px\"):\n                                            if is_bool_dtype(data[dependent]):\n                                                class_choices = [\"False\", \"True\"]\n                                            else:\n                                                class_choices = np.unique(data[dependent]).tolist()\n                                            inline_label(\"Target class\")\n                                            ui.input_selectize(\"sklearn_class_selectize\", \"\",\n                                                               choices=[\"\"] + class_choices, selected=\"\",\n                                                               remove_button=True,\n                                                               options={\"placeholder\": \"None\"})\n\n                                        @render.express\n                                        def sklearn_class_threshold_ui():\n                                            target_class = input.sklearn_class_selectize()\n                                            if target_class != \"\":\n                                                with ui.layout_columns(col_widths=(4, 8), gap=\"5px\"):\n                                                    inline_label(\"Threshold\", pt=\"22px\")\n                                                    ui.input_slider(\"sklearn_class_threshold_slider\", \"\",\n                                                                    min=0.001, max=0.999, value=0.5, step=0.001)\n                                \n                                @reactive.effect\n                                @reactive.event(input.sklearn_class_selectize)\n                                def sklearn_outputs_checkbox_choices_udpate():\n\n                                    target_class = input.sklearn_class_selectize()\n                                    if target_class == \"\":\n                                        choices = [\"Confusion matrix\"]\n                                    else:\n                                        choices = [\"Confusion matrix\",\n                                                   \"Receiver-operating characteristic\",\n                                                   \"Precision-recall\", ]\n                                    ui.update_checkbox_group(\"sklearn_outputs_checkbox\", choices=choices)\n                            \n                            @reactive.effect\n                            @reactive.event(input.model_dependent_selectize)\n                            def model_type_update():\n                                data = node_input.get()[\"data\"]\n                                mds_dict = mds.get()\n                                predicted = input.model_dependent_selectize()\n                                if predicted != \"\":\n                                    y = data[predicted]\n                                    if (not is_numeric_dtype(y)) or is_bool_dtype(y):\n                                        mds_dict[\"type\"] = \"Classifier\"\n                                    else:\n                                        mds_dict[\"type\"] = \"Regressor\"\n\n                        if md_type == \"Sklearn models\":\n                            with ui.layout_columns(col_widths=(5, -2, 5)):\n                                ui.input_action_button(\"sklearn_page_back_button\", \"Back\", disabled=True)\n                                ui.input_action_button(\"sklearn_page_next_button\", \"Next\", disabled=True)\n\n                    #ui.input_action_button(\"md_debug\", \"Debug\")\n                    #@render.code\n                    #@reactive.event(input.md_debug)\n                    #def md_debug_display():\n                    #    return str(mds.get()[\"source\"])\n\n                    @reactive.effect\n                    @reactive.event(input.model_dependent_selectize, ignore_init=True)\n                    def model_independent_selectize_choices_updated():\n                        dep_col = input.model_dependent_selectize()\n                        if dep_col != \"\":\n                            node = node_input.get()\n                            _, choices = model_variables(node[\"data\"])\n                            choices.remove(dep_col)\n                            ui.update_selectize(\"model_independent_selectize\",\n                                                choices=choices, selected=choices)\n                    \n                    @reactive.effect\n                    @reactive.event(input.model_independent_selectize, ignore_init=True)\n                    def model_numeric_cats_selectize_choices_updated():\n                        ind_col = input.model_independent_selectize()\n                        node = node_input.get()\n                        data = node[\"data\"]\n                        col_nums, col_cats, col_nbs = num_cat_labels(data)\n\n                        cat_col = []\n                        for c in ind_col:\n                            if c in col_nums:\n                                nc = len(data[to_selected_columns(c, data)].unique())\n                                if nc <= 30:\n                                    cat_col.append(c)\n                        ui.update_selectize(\"model_numeric_cats_selectize\",\n                                            choices=[\"\"]+cat_col, selected=\"\")\n\n                    @reactive.effect\n                    @reactive.event(input.model_dependent_selectize,\n                                    input.model_independent_selectize,\n                                    input.model_numeric_cats_selectize, ignore_init=True)\n                    def statsmodels_formula_text_update():\n                        if md_selected.get() == \"Statsmodels\":\n                            dependent = input.model_dependent_selectize()\n                            independents = input.model_independent_selectize()\n                            num_cats = input.model_numeric_cats_selectize()\n                            independents = [f\"C({c})\" if c in num_cats else c for c in independents]\n                            if dependent != \"\" and independents != \"\":\n                                formula = f\"{dependent} ~ {' + '.join(independents)}\"\n                                ui.update_text(\"statsmodels_formula_text\", value=formula)\n\n                    @reactive.effect\n                    @reactive.event(input.sklearn_page_back_button)\n                    def sklearn_page_back_button_action():\n                        md_page.set(md_page.get() - 1)\n\n                    @reactive.effect\n                    @reactive.event(input.sklearn_page_next_button)\n                    def sklearn_page_next_button_action():\n                        md_page.set(md_page.get() + 1)\n\n                    @reactive.effect\n                    def sklearn_page_update():\n                        page = md_page.get()\n                        ui.update_navs(\"model_page_navset\",\n                                    selected=f\"model_page{md_page.get()}\")\n                        ui.update_action_button(\"sklearn_page_back_button\", disabled=page < 2)\n\n                        if page == 1:\n                            predicted = input.model_dependent_selectize()\n                            predictors = input.model_independent_selectize()\n                            disabled = predicted == \"\" or len(predictors) == 0\n                        elif page == 2:\n                            disabled = input.sklearn_model_selectize() == \"\"\n                        elif page == 3:\n                            disabled = len(md_memory.get()) == 0\n                        else:\n                            disabled = True\n                        ui.update_action_button(\"sklearn_page_next_button\", disabled=disabled)\n\n                    @reactive.effect\n                    def sklearn_model_choices():\n\n                        mds_dict = mds.get()\n                        if md_page.get() == 2:\n                            if mds_dict[\"type\"] == \"Regressor\":\n                                models = [\"LinearRegression\", \"Ridge\", \"Lasso\",\n                                          \"DecisionTreeRegressor\", \"RandomForestRegressor\"]\n                                output_choices = [\"Prediction plot\", \"Residual plot\"]\n                            elif mds_dict[\"type\"] == \"Classifier\":\n                                models = [\"LogisticRegression\",\n                                          \"DecisionTreeClassifier\", \"RandomForestClassifier\"]\n                                output_choices = [\"Confusion matrix\"]\n                            else:\n                                models = [\"No available model\"]\n                                output_choices = []\n\n                            selected = input.sklearn_model_selectize()\n                            if selected not in models:\n                                selected = models[0]\n                            ui.update_selectize(\"sklearn_model_selectize\",\n                                                choices=models, selected=selected)\n                            ui.update_checkbox_group(\"sklearn_outputs_checkbox\",\n                                                     choices=output_choices)\n\n                    ui.input_text_area(\"md_markdown_text_area\", \"Markdown\",\n                                       placeholder=\"Key in notes...\", height=\"100px\")\n                \n                @reactive.effect\n                @reactive.event(input.statsmodels_fitting_button)\n                def statsmodels_results_update():\n                    node = node_input.get()\n                    data, name = node[\"data\"], node[\"name\"]\n                    md_type = md_selected.get()\n                    if md_type != \"Statsmodels\":\n                        return\n\n                    mds_dict = mds.get()\n                    source = mds_dict[\"source\"]\n                    try:\n                        statsmodels_ns = {name: data}\n                        exec(\"\\n\".join(source[\"imports\"]), statsmodels_ns)\n                        exec(source[\"code\"].replace(\"print\", \"\"), statsmodels_ns)\n                        result_summary = eval(\"result.summary()\", statsmodels_ns).__str__()\n                        name_save = input.statsmodels_output_text().strip()\n                        if name_save != \"\":\n                            invalid = invalid_name(name_save, error=True)\n                            if invalid is not False:\n                                raise invalid\n                        mds_dict[\"memory\"] = dict(result=eval(\"result\", statsmodels_ns))\n                    except Exception as err:\n                        result_summary = err\n                        mds_dict[\"memory\"] = {}\n                    mds_dict[\"results\"] = result_summary\n                    md_memory.set(dict(summary=result_summary))\n                \n                @reactive.effect\n                @reactive.event(input.sklearn_fitting_button, ignore_init=True)\n                def sklearn_fitting_results_update():\n                    mds_dict = mds.get()\n                    current_imports = mds_dict[\"source\"][\"imports\"][3]\n                    current_code = mds_dict[\"source\"][\"code\"][3].replace(\"print\", \"\")\n                    test_set = input.sklearn_test_set_switch()\n                    try:\n                        sklearn_ns = {}\n                        exec(\"\\n\".join(current_imports), sklearn_ns)\n                        memory = mds_dict[\"memory\"]\n                        for key, value in memory.items():\n                            sklearn_ns[key] = value\n                        exec(current_code, sklearn_ns)\n                        name_save = input.sklearn_output_text().strip()\n                        if name_save != \"\":\n                            invalid = invalid_name(name_save, error=True)\n                            if invalid is not False:\n                                raise invalid\n\n                        if \"search = \" in current_code:\n                            param_lines = []\n                            for p in memory[\"params\"]:\n                                best_param_value = eval('search', sklearn_ns).best_params_[p]\n                                param_lines.append(f\"- {p[p.index('__')+2:]}: {best_param_value}\")\n                            params_code = (\n                                \"Best parameters:\\n\"\n                                f\"{'\\n'.join(param_lines)}\\n\\n\"\n                            )\n                        else:\n                            params_code = \"\"\n\n                        if test_set:\n                            test_result = f\"\\nTest score: {eval('test_score', sklearn_ns):.4f}\"\n                        else:\n                            test_result = \"\"\n\n                        result = (\n                            f\"{params_code}\"\n                            f\"{eval('table', sklearn_ns)}\\n\\n\"\n                            f\"Cross-validation score: {eval('score', sklearn_ns).mean():.4f}\"\n                            f\"{test_result}\"\n                        )        \n                    except Exception as err:\n                        result = err\n\n                    if isinstance(result, str):\n                        variables = [\"model\", \"cv\"] \n                        if mds_dict[\"type\"] == \"Regressor\":\n                            variables.append(\"yhat_cv\")\n                        else:\n                            variables.append(\"proba_cv\")\n                        \n                        if test_set:\n                            variables.extend([\"x_train\", \"x_test\", \"y_train\", \"y_test\"])\n                            if mds_dict[\"type\"] == \"Regressor\":\n                                variables.append(\"yhat_test\")\n                            else:\n                                variables.append(\"proba_test\")\n                    \n                        for var in variables:\n                            mds_dict[\"memory\"][var] = eval(var, sklearn_ns)\n\n                    mds_dict[\"results\"] = result\n                    md_memory.set(dict(result=result))\n                \n                @reactive.effect\n                @reactive.event(input.sklearn_test_set_switch)\n                def sklearn_test_set_switch_update():\n                    if md_page.get() == 3:\n                        md_memory.set({})\n\n                ui.input_switch(\"md_show_code_switch\", \"Show code\")\n\n                @render.express(inline=True)\n                def show_model_source_results():\n                \n                    node = node_input.get()\n                    data, name = node[\"data\"], node[\"name\"]\n                    mds_dict = mds.get()\n                    md_type = md_selected.get()\n                    memory = md_memory.get()\n                    if data is None:\n                        return\n                \n                    mds_dict[\"outputs\"] = []\n                    if md_type == \"Statsmodels\":\n                        source = statsmodels_source(mds_dict, name, input)\n                        name_save = input.statsmodels_output_text().strip()\n                        if name_save == \"\":\n                            coef_source = dict(type=None, code=\"\", imports=[])\n                        else:\n                            coef_source = statsmodels_outputs_source(input)\n                        mds_dict[\"outputs\"].append(coef_source)\n                    else:\n                        source = sklearn_model_source(mds_dict, name, data, input, md_page.get())\n                        name_save = input.sklearn_output_text().strip()\n                        if name_save == \"\":\n                            result_source = dict(type=None, code=\"\", imports=[])\n                        else:\n                            result_source = sklearn_outputs_source(mds_dict, name, data, input)\n                        mds_dict[\"outputs\"].append(result_source)\n                        plot_source = sklearn_plots_source(mds_dict, name, data, input, md_page.get())\n                        mds_dict[\"outputs\"].extend(plot_source)\n                    mds_dict[\"source\"] = source\n\n                    if input.md_show_code_switch():\n                        @render.ui\n                        @reactive.event(input.md_markdown_text_area)\n                        def md_markdown_display():\n                            if input.md_markdown_text_area().strip() != \"\":\n                                return ui.markdown(input.md_markdown_text_area())\n\n                        if md_type == \"Statsmodels\":\n                            @render.code\n                            def statsmodels_code_display():\n                                imports = list(set(source[\"imports\"]))\n                                imports.sort(reverse=True)\n                                code = source[\"code\"]\n                                for out in mds_dict[\"outputs\"]:\n                                    if out[\"code\"] != \"\":\n                                        imports += out[\"imports\"]\n                                        code += f\"\\n\\n{out['code']}\"\n\n                                return (\n                                    f\"{'\\n'.join(imports)}\\n\\n\"\n                                    f\"{code}\"\n                                )\n                        elif md_type == \"Sklearn models\":\n                            @render.code\n                            def sklearn_model_code_display():\n                                page = md_page.get()\n                                imports = source[\"imports\"][page]\n                                code = source[\"code\"][page]\n                                if page == 4:\n                                    code_segments = [] if code == \"\" else [code]\n                                    for out in mds_dict[\"outputs\"]:\n                                        if out[\"code\"] != \"\":\n                                            imports += out[\"imports\"]\n                                            #code += f\"\\n\\n{out['code']}\"\n                                            code_segments.append(out[\"code\"])\n                                    \n                                    code = \"\\n\\n\".join(code_segments)\n\n                                imports = list(set(imports))\n                                imports.sort(reverse=True)\n                                imports_code = \"\" if len(imports) == 0 else f\"{'\\n'.join(imports)}\\n\\n\"\n                                return (\n                                    f\"{imports_code}\"\n                                    f\"{code}\"\n                                )\n\n                        hr()\n\n                    with ui.card(height=\"720px\", full_screen=True):\n                        if md_type == \"Statsmodels\":\n                            @render.ui\n                            def model_results_display():                        \n                                if \"summary\" in memory:\n                                    result_summary = memory[\"summary\"]\n                                    if isinstance(result_summary, str):\n                                        return ui.markdown(f\"```\\n{result_summary}\\n```\")\n                                    else:\n                                        return ui_block(f\"<b>Error</b>: {result_summary}\", 'danger')\n                        else:\n                            page = md_page.get()\n                            columns = data.columns.tolist()\n                            if page == 1:\n                                row, col = data.shape\n                                table_width = len(data.__repr__().split('\\n')[0]) * 72 // 96\n                                with ui.layout_column_wrap(width=f\"{table_width}px\",\n                                                           fixed_width=True, fill=False, fillable=False):\n                                    @render.table()\n                                    def model_data_preview():\n                                        table = display_table(data, 16).style.format(precision=4)\n                                        table.set_caption(f\"{row} rows x {col} columns\")\n                                        \n                                        styles = table_styles.copy()\n                                        predicted = input.model_dependent_selectize()\n                                        if predicted != \"\":\n                                            col_index = columns.index(predicted)\n                                            c = \"#ffe7e7\"\n                                            styles.append(dict(selector=f\"td.col{col_index}\",\n                                                               props=[(\"background-color\", c)]))\n                                        predictors = input.model_independent_selectize()\n                                        c = \"#eae7ff\"\n                                        for p in predictors:\n                                            col_index = columns.index(p)\n                                            styles.append(dict(selector=f\"td.col{col_index}\",\n                                                               props=[(\"background-color\", c)]))\n\n                                        return table.set_table_styles(styles)\n                                    \n                                current_imports = mds_dict[\"source\"][\"imports\"][1]\n                                current_code = mds_dict[\"source\"][\"code\"][1]\n                                sklearn_ns = {}\n                                if len(current_imports) > 0:\n                                    exec('\\n'.join(current_imports), sklearn_ns)\n                                if current_code != \"\":\n                                    name = node[\"name\"]\n                                    #exec(f\"{name} = data\")\n                                    sklearn_ns[name] = data\n                                    exec(current_code, sklearn_ns)\n                                    mds_dict[\"memory\"][\"x\"] = eval(\"x\", sklearn_ns)\n                                    mds_dict[\"memory\"][\"y\"] = eval(\"y\", sklearn_ns)\n                                    if \"to_dummies = \" in current_code:\n                                        mds_dict[\"memory\"][\"to_dummies\"] = eval(\"to_dummies\", sklearn_ns)\n\n                            elif page == 2:\n                                @render.ui\n                                def sklearn_pipeline_display():\n                                    current_imports = mds_dict[\"source\"][\"imports\"][2]\n                                    current_code = mds_dict[\"source\"][\"code\"][2]\n                                    if current_code != \"\":\n                                        try:\n                                            sklearn_ns = {}\n                                            if \"to_dummies\" in mds_dict[\"memory\"]:\n                                                sklearn_ns[\"to_dummies\"] = mds_dict[\"memory\"][\"to_dummies\"]\n                                            exec('\\n'.join(current_imports), sklearn_ns)\n                                            exec(current_code, sklearn_ns)\n                                            mds_dict[\"memory\"][\"pipe\"] = eval(\"pipe\", sklearn_ns)\n                                            if \"params = \" in current_code:\n                                                mds_dict[\"memory\"][\"params\"] = eval(\"params\", sklearn_ns) \n                                            return ui.HTML(eval(\"pipe\", sklearn_ns)._repr_html_())\n                                        except Exception as err:\n                                            return ui_block(str(err), \"danger\")\n                            \n                            elif page == 3:\n                                memory = md_memory.get()\n                                if \"result\" in memory:\n                                    result = memory[\"result\"]\n                                    if isinstance(result, str):\n                                        @render.code\n                                        def sklearn_result_message_display():\n                                            return result\n                                    else:\n                                        ui_block(result, \"danger\")\n\n                            elif page == 4:\n                                @render.express\n                                def sklearn_plots_display():\n                                    memory = md_memory.get()\n                                    if mds_dict[\"type\"] == \"Classifier\":\n                                        y_label = input.model_dependent_selectize()\n                                        if y_label == \"\":\n                                            return \n                                        target_class = input.sklearn_class_selectize()\n                                        if is_bool_dtype(data[y_label]) and target_class in [\"True\", \"False\"]:\n                                            target_class = eval(target_class)\n                                        default = target_class == \"\"\n\n                                        if not default:\n                                            threshold = input.sklearn_class_threshold_slider()\n                                            mds_dict[\"memory\"][\"threshold\"] = threshold\n                                            mds_dict[\"memory\"][\"target\"] = target_class\n                                            classes = np.unique(data[y_label]).tolist()\n                                            index = classes.index(target_class) if target_class in classes else 0\n                                            mds_dict[\"memory\"][\"index\"] = index\n                                            mds_dict[\"memory\"][\"y_target\"] = (data[y_label] == target_class)\n                                        \n                                    outputs = mds_dict[\"outputs\"]\n                                    if \"result\" in memory:\n                                        if isinstance(memory[\"result\"], str):\n                                            @expressify\n                                            def sklearn_plot_display(idx):\n                                                sklearn_ns = dict(mds=mds, render=render)\n                                                exec(\n                                                    \"@render.plot\\n\"\n                                                    f\"def plot_display_fun{idx}():\\n\"\n                                                    \"    mds_dict = mds.get()\\n\"\n                                                    f\"    if {idx} < len(mds_dict['outputs']):\\n\"\n                                                    f\"        return mds_dict['outputs'][{idx}]['fig']\",\n                                                    sklearn_ns\n                                                )\n                                                outputs = mds.get()[\"outputs\"]\n                                                width, height = outputs[idx][\"fig\"].get_size_inches() * 100\n                                                output_plot(f\"plot_display_fun{idx}\", width=width, height=height)\n                                \n                                            with ui.layout_columns(col_widths=(6, 6)):\n                                                for idx, out in enumerate(outputs):\n                                                    if out[\"type\"] == 'plot':\n                                                        sklearn_ns = {}\n                                                        define_imports = mds.get()[\"source\"][\"imports\"][4]\n                                                        current_imports = define_imports + out[\"imports\"]\n                                                        current_imports.extend([\"import pandas as pd\",\n                                                                                \"import numpy as np\"])\n                                                        define_code = mds.get()[\"source\"][\"code\"][4]\n                                                        current_code = f\"{define_code}\\n\" + out[\"code\"]\n                                                        if len(current_imports) > 0:\n                                                            exec(\"\\n\".join(current_imports), sklearn_ns)\n                                                        for key, value in mds_dict[\"memory\"].items():\n                                                            #exec(f\"{key} = value\")\n                                                            sklearn_ns[key] = value\n                                                        \n                                                        exec(\"\\n\".join(current_code.split(\"\\n\")[:-1]), sklearn_ns)\n                                                        out[\"fig\"] = eval(\"fig\", sklearn_ns)\n                                                        sklearn_plot_display(idx)\n                                    else:\n                                        ui.markdown(\" \")\n                                                        \n                with ui.layout_columns(col_widths=(2, -8, 2)):\n                    ui.input_action_button(\"cancel_model_button\", \"Cancel\")\n                    ui.input_action_button(\"save_model_button\", \"Save\", disabled=True)\n                \n                @reactive.effect\n                @reactive.event(input.statsmodels_fitting_button, input.statsmodels_output_text)\n                def save_statsmodels_button_disable():\n                    \n                    mds_dict = mds.get()\n                    memory = md_memory.get()\n                    fit = len(mds_dict[\"memory\"]) > 0\n                    invalid = invalid_name(input.statsmodels_output_text().strip())\n                    disabled = invalid or (not fit)\n                    ui.update_action_button(\"save_model_button\", disabled=disabled)\n                \n                @reactive.effect\n                @reactive.event(input.sklearn_fitting_button, input.sklearn_output_text,\n                                input.sklearn_test_set_switch)\n                def save_sklearn_button_disable():\n                    \n                    memory = md_memory.get()\n                    disabled = True\n                    if \"result\" in memory:\n                        invalid = invalid_name(input.sklearn_output_text().strip())\n                        disabled = (not isinstance(memory[\"result\"], str)) or (md_page.get() < 3) or invalid\n                    \n                    ui.update_action_button(\"save_model_button\", disabled=disabled)\n\n                @reactive.effect\n                @reactive.event(input.cancel_model_button, input.save_model_button)\n                def model_to_canvas_action():\n                    ui.update_text_area(\"md_markdown_text_area\", value=\"\")\n                    md_page.set(1)\n                    md_memory.set({})\n                \n                @reactive.effect\n                @reactive.event(input.save_model_button)\n                def save_model_button_action():\n\n                    node = node_input.get()\n                    data, name = node[\"data\"], node[\"name\"]\n\n                    node_list = nodes.get()\n                    cs = node_highlights.get()\n                    root = node_list[cs.index(\"red\")]\n\n                    # Save model node \n                    mds_dict = mds.get()\n                    md_type = md_selected.get()\n                    if md_type == \"Statsmodels\":\n                        method = input.statsmodels_type_selectize()\n                        model_view = dict(name=f\"{md_type}: {method}\", \n                                        results=mds_dict[\"results\"])\n                        source = mds_dict[\"source\"]\n                        define_imports = []\n                        define_code = \"\"\n                    else:\n                        source = mds_dict[\"source\"]\n                        model = input.sklearn_model_selectize()\n                        model_view = dict(name=f\"{md_type}: {model}\", \n                                        results=mds_dict[\"results\"])\n\n                        code = \"\\n\\n\".join([seg for seg in source[\"code\"].values() if seg != \"\"])\n                        imports_dict = source[\"imports\"]\n                        imports = imports_dict[1] + imports_dict[2] + imports_dict[3] + imports_dict[4]\n                        markdown = source[\"markdown\"]\n                        source = dict(code=code, imports=imports, markdown=markdown)\n\n                        define_imports = mds_dict[\"source\"][\"imports\"][4]\n                        define_code = mds_dict[\"source\"][\"code\"][4]\n                        \n                    node_view.set(model_view)\n                    model_info = dict(type=md_type, data=data, view=model_view, source=source)\n                    model_node = root.grow(\"model\", info=model_info)\n                    \n                    node_list.append(model_node)\n                    \n                    sklearn_ns = {}\n                    for key, value in mds_dict[\"memory\"].items():\n                        #exec(f\"{key} = value\")\n                        sklearn_ns[key] = value\n                    sklearn_ns[name] = data\n\n                    if define_imports:\n                        exec(\"\\n\".join(define_imports), sklearn_ns)\n                    if define_code != \"\":\n                        exec(define_code, sklearn_ns)\n\n                    output_nodes = []\n                    for out in mds_dict[\"outputs\"]:\n                        if out[\"type\"] == \"data\":\n                            if len(out[\"imports\"]) > 0:\n                                exec(\"\\n\".join(out['imports']), sklearn_ns)\n                            exec(out[\"code\"], sklearn_ns)\n\n                            name_out = out[\"name_out\"]\n                            data_out = eval(name_out, sklearn_ns)\n                            view = dict(name=name_out, string=data_out.to_string(max_rows=6, max_cols=6),\n                                        shape=data_out.shape)\n                            info = dict(name=name_out, data=data_out, view=view,\n                                        source=dict(code=out[\"code\"], imports=out[\"imports\"], markdown=\"\"))\n                            output_nodes.append(model_node.grow(\"data\", info=info))\n                            \n                            all_names = var_names.get()\n                            all_names.append(name_out)\n                        elif out[\"type\"] == \"plot\":\n                            fig = out[\"fig\"]\n                            view = dict(fig=fig, width=420, height=420)\n                            info = dict(view=view, \n                                        source=dict(code=out[\"code\"], imports=out[\"imports\"], markdown=\"\"))\n                            output_nodes.append(model_node.grow(\"visual\", info=info))\n\n                    node_list.extend(output_nodes)\n                    cs = ['gray'] * len(node_list)\n                    cs[-1 - len(output_nodes)] = \"red\"\n                    node_highlights.set(cs)\n                    arc_highlights.set([\"gray\"] * len(cs))\n\n                    tool_disable(True)\n\n        save_buttons = input.save_data_button, input.save_visual_button, input.save_model_button\n        cancel_buttons = input.cancel_data_button, input.cancel_visual_button, input.cancel_model_button\n        @reactive.effect\n        @reactive.event(*(save_buttons + cancel_buttons))\n        def node_to_canvas_panel():\n\n            ui.update_navs(\"main\", selected=\"canvas_panel\")\n            ops.set(dict(type=None, source=None, data_out=None))\n            dvs.set(dict(type=None, source=None, fig=None, width=640, height=480))\n            mds.set(dict(type=\"\", source={}, results=None, outputs=None, memory={}))\n            \n            xmax, ymin = canvas_lim.get()\n            node_list = nodes.get()\n            node_xmax = max([n.pos[0] for n in node_list])\n            node_ymin = min([n.pos[1] for n in node_list])\n\n            if xmax <= node_xmax:\n                xmax = node_xmax + 4\n            if ymin >= node_ymin:\n                ymin = node_ymin - 3.2\n            canvas_lim.set((xmax, ymin))\n", "type": "text"}, {"name": "autosource.py", "content": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom pandas.api.types import is_numeric_dtype, is_bool_dtype\nfrom collections.abc import Iterable\nfrom numbers import Real\n\n\nmodel_hypers = {\n    \"LinearRegression\": [],\n    \"Ridge\": [(\"alpha\", \"Shrinkage parameter alpha\", \"1.0\")],\n    \"Lasso\": [(\"alpha\", \"Shrinkage parameter alpha\", \"1.0\")],\n    \"DecisionTreeRegressor\": [\n        (\"max_depth\", \"Max tree depth\", \"None\"),\n        (\"min_samples_split\", \"Min samples split\", \"2\"),\n        (\"min_samples_leaf\", \"Min samples leaf\", \"1\"),\n        (\"max_leaf_nodes\", \"Max leaf nodes\", \"None\")\n    ],\n    \"RandomForestRegressor\": [\n        (\"max_depth\", \"Max tree depth\", \"None\"),\n        (\"min_samples_split\", \"Min samples split\", \"2\"),\n        (\"min_samples_leaf\", \"Min samples leaf\", \"1\"),\n        (\"max_leaf_nodes\", \"Max leaf nodes\", \"None\"),\n        (\"max_features\", \"Max features\", \"1.0\")\n    ],\n    \"LogisticRegression\": [(\"C\", \"Inverse regularization C\", \"1.0\")],\n    \"DecisionTreeClassifier\": [\n        (\"max_depth\", \"Max tree depth\", \"None\"),\n        (\"min_samples_split\", \"Min samples split\", \"2\"),\n        (\"min_samples_leaf\", \"Min samples leaf\", \"1\"),\n        (\"max_leaf_nodes\", \"Max leaf nodes\", \"None\")\n    ],\n    \"RandomForestClassifier\": [\n        (\"max_depth\", \"Max tree depth\", \"None\"),\n        (\"min_samples_split\", \"Min samples split\", \"2\"),\n        (\"min_samples_leaf\", \"Min samples leaf\", \"1\"),\n        (\"max_leaf_nodes\", \"Max leaf nodes\", \"None\"),\n        (\"max_features\", \"Max features\", \"sqrt\")\n    ],\n}\n\n\ndef to_column_choices(columns):\n\n    if isinstance(columns, pd.MultiIndex):\n        return [col.__repr__() for col in columns]\n    else:\n        return columns.tolist()\n\n\ndef to_selected_columns(columns, data):\n\n    if isinstance(data.columns, pd.MultiIndex):\n        if isinstance(columns, str):\n            return \"\" if columns == \"\" else eval(columns) \n        else:\n            return [eval(col) for col in columns\n                    if col in to_column_choices(data.columns)]\n    else:\n        if isinstance(columns, str):\n            return columns\n        else:\n            return list(columns)\n\n\ndef str_to_values(string, sup=False):\n\n    try:\n        values = eval(string.strip())\n    except Exception as err:\n        if sup:\n            values = None\n        else:\n            values = err\n    \n    return values\n\n\ndef str_to_numstr(string, sup=False):\n\n    if string.strip() == \"\":\n        return None\n\n    try:\n        nums = eval(string.strip())\n        if isinstance(nums, np.ndarray):\n            numstr = string.strip()\n        elif isinstance(nums, Iterable):\n            numstr = list(nums).__repr__()\n        elif isinstance(nums, Real):\n            numstr = [nums].__repr__()\n        else:\n            raise TypeError(\"Not numbers.\")\n    except Exception as err:\n        if sup:\n            numstr = None\n        else:\n            numstr = err\n    \n    return numstr\n\n\ndef num_cat_labels(data):\n\n    is_num = data.apply(is_numeric_dtype, axis=0).values\n    is_bool = data.apply(is_bool_dtype, axis=0).values\n    \n    nums = to_column_choices(data.columns[is_num & (~is_bool)])\n    cats = to_column_choices(data.columns[(~is_num) | is_bool])\n    nbs = to_column_choices(data.columns[is_num])\n\n    return nums, cats, nbs\n\n\ndef discrete_labels(data, max_cats=50):\n\n    s = data.apply(lambda x: len(x.unique())) <= max_cats\n    \n    return to_column_choices(s[s].index)\n\n\ndef operation_source(op, name, data, ui_input, memory):\n\n    name_out = ui_input.op_name_out_text().strip()\n    left = f\"{name_out} = \" if name_out != '' else \"\"\n    result = f\"\\n{name_out}\" if name_out != \"\" else \"\"\n    right = \"\" if left == \"\" else \".copy()\"\n\n    markdown = ui_input.op_markdown_text_area().strip()\n\n    imports = []\n\n    code = f\"{left}{name}{right}{result}\"\n    if op == \"Value counts operations\":\n        columns = to_selected_columns(ui_input.counts_ops_selectize(), data)\n        unpack = to_selected_columns(ui_input.counts_ops_unstack_selectize(), data)\n\n        normalize = ui_input.counts_ops_normalize_switch()\n\n        kwargs = []\n        if len(columns) > 0:\n            unpack_code = f\".unstack(level={unpack.__repr__()})\" if len(unpack) > 0 else \".to_frame()\"\n            if normalize:\n                kwargs.append(f\"normalize={normalize}\")\n            if len(unpack) == 0:\n                sort = ui_input.counts_ops_sort_switch()\n                if not sort:\n                    kwargs.append(\"sort=False\")\n                else:\n                    descending = ui_input.counts_ops_sort_descending_switch()\n                    if not descending:\n                        kwargs.append(\"ascending=True\")\n            column_code = f\"{columns[0].__repr__()}\" if len(columns) == 1 else f\"{columns}\"\n            reset_code = \".reset_index()\" if ui_input.counts_ops_reset_switch() else \"\"\n            code = (\n                f\"columns = {column_code}\\n\"\n                f\"{left}{name}[columns].value_counts({', '.join(kwargs)}){unpack_code}{reset_code}\"\n                f\"{result}\"\n            )\n\n    elif op == \"Select columns\":\n        columns = to_selected_columns(ui_input.select_columns_selectize(), data)\n        if columns != data.columns.tolist():\n            code = (\n                f\"columns = {columns}\\n\"\n                f\"{left}{name}[columns].copy()\"\n                f\"{result}\"\n            )\n\n    elif op == \"Boolean conditions\":\n        current_column = ui_input.filter_column_selectize()\n        current_operator = ui_input.filter_operator_selectize()\n        current_value_str = ui_input.filter_value_text().strip()\n\n        filters = memory.copy()\n        if current_column != \"\" and current_operator != \"\" and current_value_str != \"\":\n            current_filter = dict(column=current_column, operator=current_operator, value=current_value_str)\n            filters += [current_filter]\n        \n        cond_lines = []\n        for i, filter in enumerate(filters):\n            column = to_selected_columns(filter[\"column\"], data)\n            operator = filter[\"operator\"]\n            value = filter[\"value\"]\n\n            if operator in [\"in\", \"not in\"]:\n                iter_values = str_to_values(value, sup=True)\n                if iter_values is None:\n                    iter_values = value.__repr__()\n                elif isinstance(iter_values, Iterable) and not isinstance(iter_values, str):\n                    iter_values = list(iter_values)\n                else:\n                    iter_values = [iter_values]\n                not_code = \"~\" if operator == \"not in\" else \"\"\n                opr_code = f\".isin({iter_values})\"\n            else:\n                not_code = \"\"\n                opr_code = f\" {operator} {value}\"\n\n            cond_code = f\"cond{i+1} = {not_code}{name}[{column.__repr__()}]{opr_code}\"\n            cond_lines.append(cond_code)\n        \n        if len(cond_lines) > 0:\n            conds_code = \" & \".join([f\"cond{i}\"for i in range(1, 1 + len(cond_lines))])\n            if ui_input.filter_select_rows_switch():\n                reset_code = \".reset_index(drop=True)\" if ui_input.filter_reset_switch() else \"\"\n                code = (\n                    f\"{'\\n'.join(cond_lines)}\\n\"\n                    f\"{left}{name}.loc[{conds_code}]{reset_code}{result}\"\n                )\n            else:\n                to_column = ui_input.filter_condition_column_text().strip()\n                if to_column != \"\":\n                    to_column_repr = to_column.__repr__()\n                    copy_name = f\"{name}_copy\" if left == \"\" else f\"{name_out}\"\n                    copy_code = f\"{copy_name} = {name}.copy()\" if left == \"\" else f\"{left}{name}.copy()\"\n                    code = (\n                        f\"{'\\n'.join(cond_lines)}\\n\"\n                        f\"{copy_code}\\n\"\n                        f\"{copy_name}[{to_column_repr}] = {conds_code}\\n\"\n                        f\"{copy_name}\"\n                    )\n\n    elif op == \"Sort rows\":\n        columns = to_selected_columns(ui_input.sort_columns_selectize(), data)\n        descending = ui_input.sort_descending_switch()\n        reset = ui_input.sort_reset_switch()\n        if len(columns) > 0:\n            descending_code = f\", ascending=False\" if descending else \"\"\n            columns_code = columns[::-1].__repr__()\n            reset_code = \".reset_index(drop=True)\" if reset else \"\"\n            code = f\"{left}{name}.sort_values({columns_code}{descending_code}){reset_code}{result}\"\n    \n    elif op == \"Correlation\":\n        metric = ui_input.corr_metric_selectize()\n        columns = to_selected_columns(ui_input.corr_columns_selectize(), data)\n        drops = to_selected_columns(ui_input.corr_drops_selectize(), data)\n        \n        if columns is not None and metric != \"\":\n            method = \"corr\" if metric == \"Correlation\" else \"cov\"\n            drop_code = f\".drop(index={drops.__repr__()})\" if len(drops) > 0 else \"\"\n            code = (\n                f\"columns = {columns.__repr__()}\\n\"\n                f\"{left}{name}[columns].{method}(){drop_code}{result}\"\n            )\n    \n    elif op == \"Aggregation\":\n        columns = to_selected_columns(ui_input.agg_columns_selectize(), data)\n        aggs = list(ui_input.agg_methods_selectize())\n\n        transpose_code = \".transpose()\" if ui_input.agg_transpose_switch() else \"\"\n\n        if columns == data.columns.tolist():\n            code = f\"{left}{name}.agg({aggs}){transpose_code}{result}\"\n        elif len(columns) > 0:\n            code = (\n                f\"columns = {columns}\\n\"\n                f\"{left}{name}[columns].agg({aggs}){transpose_code}{result}\"\n            )\n    \n    elif op == \"Group by\":\n        columns = to_selected_columns(ui_input.group_by_columns_selectize(), data)\n        views = to_selected_columns(ui_input.group_view_columns_selectize(), data)\n        aggs = list(ui_input.group_methods_selectize())\n        reset_index = ui_input.group_reset_switch()\n        reset_code = \".reset_index()\" if reset_index else \"\"\n        if columns != [] and views != [] and aggs != []:\n            rename_col_code = \"\"\n            if ui_input.group_transpose_switch():\n                transpose_code = \".T\"\n                if len(columns) == 1 and left != \"\" and columns[0] in data.columns:\n                    if is_numeric_dtype(data[columns[0]]):\n                        rename_col_code = f\"\\n{name_out}.columns = {name_out}.columns.astype(str)\"\n            else:\n                transpose_code = \"\"\n        \n            code = (\n                f\"{left}{name}.groupby({columns.__repr__()})[{views.__repr__()}]\"\n                f\".agg({aggs.__repr__()}){transpose_code}{reset_code}{rename_col_code}{result}\"\n            )\n    \n    elif op == \"Pivot table\":\n        values = to_selected_columns(ui_input.pivot_values_selectize(), data)\n        index = to_selected_columns(ui_input.pivot_index_selectize(), data)\n        columns = to_selected_columns(ui_input.pivot_columns_selectize(), data)\n        methods = list(ui_input.pivot_methods_selectize())\n        reset = ui_input.pivot_reset_switch()\n        transpose = ui_input.pivot_transpose_switch()\n\n        if values != [] and index != [] and columns != [] and methods != []:\n            values_code = f\"values = {values.__repr__()}\"\n            index_code = f\"index = {index.__repr__()}\"\n            columns_code = f\"columns = {columns.__repr__()}\"\n            methods_code = f\"func = {methods.__repr__()}\"\n            reset_code = \".reset_index()\" if reset else \"\"\n            rename_col_code = \"\"\n            if transpose:\n                transpose_code = \".T\"\n                if len(index) == 1 and left != \"\" and index[0] in data.columns:\n                    if is_numeric_dtype(data[index[0]]):\n                        rename_col_code = f\"\\n{name_out}.columns = {name_out}.columns.astype(str)\"\n            else:\n                transpose_code = \"\"\n            code = (\n                f\"{values_code}\\n\"\n                f\"{index_code}\\n\"\n                f\"{columns_code}\\n\"\n                f\"{methods_code}\\n\"\n                f\"{left}{name}.pivot_table(values, index, columns, aggfunc=func)\"\n                f\"{transpose_code}{reset_code}{rename_col_code}{result}\"\n            )\n\n    elif op == \"Treat missing values\":\n        columns = to_selected_columns(ui_input.nan_columns_selectize(), data)\n        method = ui_input.nan_method_selectize()\n        treat_all = len(columns) == 0\n        if method == \"drop\":\n            reset_code = \".reset_index(drop=True)\" if ui_input.nan_reset_switch() else \"\"\n            if treat_all:\n                code = f\"{left}{name}.dropna(){reset_code}{result}\"\n            else:\n                code = (\n                    f\"missing = {name}[{columns.__repr__()}].isnull().any(axis=1)\\n\"\n                    f\"{left}{name}.loc[~missing]{reset_code}{result}\"\n                )\n        elif method == \"fill\":\n            value_str = ui_input.nan_fill_value_text().strip()\n            if value_str == \"\":\n                right = \"\" if left == \"\" else \".copy()\"\n                code = f\"{left}{name}{right}{result}\"\n            else:\n                if treat_all:\n                    code = f\"{left}{name}.fillna({value_str}){result}\"\n                else:\n                    if left == \"\":\n                        copy_code = f\"{name}_copy = {name}.copy()\"\n                        copy_name = f\"{name}_copy\"\n                    else:\n                        copy_code = f\"{left}{name}.copy()\"\n                        copy_name = name_out\n                    code = (\n                        f\"{copy_code}\\n\"\n                        f\"columns = {columns.__repr__()}\\n\"\n                        f\"{copy_name}.loc[:, columns] = {name}.loc[:, columns].fillna({value_str})\\n\"\n                        f\"{copy_name}\"\n                    )\n    \n    elif op == \"Time trend\":\n        columns = to_selected_columns(ui_input.time_trend_columns_selectize(), data)\n        transform = ui_input.time_trend_transform_selectize()\n        steps_str = str_to_numstr(ui_input.time_trend_steps_text())\n        if steps_str is None:\n            steps_str = '[1]'\n        steps = eval(steps_str) if isinstance(steps_str, str) else [1]\n\n        if ui_input.time_trend_drop_original_data():\n            copy_right_code = \"pd.DataFrame()\"\n            imports.append(\"import pandas as pd\")\n        else:\n            copy_right_code = f\"{name}.copy()\" \n        copy_name = f\"{name}_copy\" if left == \"\" else name_out\n        copy_code = f\"{copy_name} = {copy_right_code}\" if left == \"\" else f\"{left}{copy_right_code}\"\n        \n        if len(columns) > 0 and transform != \"\":\n            if transform == \"change\":\n                expr = f\"{name}[from_cols].diff(step)\"\n            elif transform == \"relative change\":\n                expr = f\"{name}[from_cols].pct_change(step)\"\n            elif transform == \"log change\":\n                expr = f\"np.log({name}[from_cols]).diff(step)\"\n                imports.append(\"import numpy as np\")\n            elif transform == \"moving average\":\n                expr = f\"{name}[from_cols].rolling(step).mean()\"\n            else:\n                expr = \"None\"\n\n            \n            if len(steps) == 1:\n                step = steps[0]\n                step_str = f\"{step}-step \" if step != 1 or transform == \"moving average\" else \"\"\n                code = (\n                    f\"step = {step}\\n\"\n                    f\"from_cols = {columns.__repr__()}\\n\"\n                    f\"to_cols = [f'{step_str}{transform} of {{c}}' for c in from_cols]\\n\"\n                    f\"{copy_code}\\n\"\n                    f\"{copy_name}[to_cols] = {expr}\\n\"\n                    f\"{copy_name}\"\n                )\n            else:\n                step_str = f\"{{step}}-step \"\n                code = (\n                    f\"from_cols = {columns.__repr__()}\\n\"\n                    f\"{copy_code}\\n\"\n                    f\"for step in {steps_str}:\\n\"\n                    f\"    to_cols = [f'{step_str}{transform} of {{c}}' for c in from_cols]\\n\"\n                    f\"    {copy_name}[to_cols] = {expr}\\n\"\n                    f\"{copy_name}\"\n                )\n    \n    elif op == \"ANOVA\":\n        formula = ui_input.anova_formula_text()\n        if formula != \"\":\n            anova_type = ui_input.anova_type_selectize()\n            type_code = f\", typ={anova_type.__repr__()}\" if anova_type != \"\" else \"\"\n            anova_test = ui_input.anova_test_selectize()\n            test_code = f\", test={anova_test.__repr__()}\" if anova_test not in [\"\", \"F\"] else \"\"\n            anova_code = f\"sm.stats.anova_lm(model{type_code}{test_code})\"\n            code = (\n                f\"model = smf.ols({formula.__repr__()}, data={name}).fit()\\n\"\n                f\"anova_dict = {anova_code}.to_dict()\\n\"\n                f\"anova_dict['df'] = {{key: int(value) for key, value in anova_dict['df'].items()}}\\n\"\n                f\"{left}pd.DataFrame(anova_dict)\"\n                f\"{result}\"\n            )\n            imports.extend([\"import pandas as pd\",\n                            \"import statsmodels.formula.api as smf\",\n                            \"import statsmodels.api as sm\"])\n\n    elif op == \"Clustering\":\n        method = ui_input.clustering_method_selectize()\n        columns = to_selected_columns(ui_input.clustering_columns_selectize(), data)\n        num_str = str_to_numstr(ui_input.clustering_numbers_text(), sup=False)\n\n        if isinstance(num_str, str) and len(columns) > 0 and method != \"\":\n            cluster_numbers = list(eval(num_str))\n            method_map = {\"K-means clustering\": \"KMeans\",\n                          \"Hierarchical clustering\": \"AgglomerativeClustering\"}\n            \n            columns_code = f\"columns = {columns.__repr__()}\\n\"\n            copy_name = f\"{name}_copy\" if left == \"\" else f\"{name_out}\"\n            copy_code = f\"{copy_name} = {name}.copy()\" if left == \"\" else f\"{left}{name}.copy()\"\n            func_code = f\"cluster.{method_map[method]}\"\n\n            cluster_params_code = \", max_iter=10000, random_state=0\" if method == \"K-means clustering\" else \"\"\n            if len(cluster_numbers) == 0:\n                return f\"{left}{name}.copy()\"\n            elif len(cluster_numbers) == 1:\n                cn = cluster_numbers[0]\n                fit_code = (\n                    f\"estimator = {func_code}(n_clusters={cn}{cluster_params_code})\\n\"\n                    f\"labels = estimator.fit_predict(scaled_features)\\n\"\n                    f\"{copy_name}['cluster_num_{cn}'] = pd.Series(labels).apply(lambda x: f'c{{x}}')\"\n                )\n            else:\n                fit_code = (\n                    f\"for cn in {cluster_numbers.__repr__()}:\\n\"\n                    f\"    estimator = {func_code}(n_clusters=cn{cluster_params_code})\\n\"\n                    f\"    labels = estimator.fit_predict(scaled_features)\\n\"\n                    f\"    {copy_name}[f'cluster_num_{{cn}}'] = pd.Series(labels).apply(lambda x: f'c{{x}}')\"\n                )\n\n            code = (\n                f\"{copy_code}\\n\"\n                f\"{columns_code}\"\n                f\"scaled_features = StandardScaler().fit_transform({name}[columns])\\n\"\n                f\"{fit_code}\\n\"\n                f\"{copy_name}\"\n            )\n            imports.extend([\"from sklearn.preprocessing import StandardScaler\",\n                            \"from sklearn import cluster\",\n                            \"import pandas as pd\"])\n    \n    elif op == \"Variance inflation factor\":\n        columns = to_selected_columns(ui_input.vif_features_selectize(), data)\n        intercept = ui_input.vif_add_constant_switch()\n        reset = ui_input.vif_reset_switch()\n        if len(columns) > 0:\n            features = data[columns]\n            is_num = features.apply(is_numeric_dtype, axis=0).values\n            intercept_code = f\"features['constant'] = 1\\n\" if intercept else \"\"\n            reset_code = f\".reset_index(names='features')\" if reset else \"\"\n            code = (\n                f\"columns = {columns}\\n\"\n                f\"features = {name}[columns].astype(float)\\n\"\n                f\"{intercept_code}\\n\"\n                f\"vif_list = [variance_inflation_factor(features.values, i) for i in range(len(columns))]\\n\"\n                f\"{left}pd.DataFrame(vif_list, index=columns, columns=['VIF']){reset_code}\"\n            )\n            imports.extend([\"from statsmodels.stats.outliers_influence import variance_inflation_factor\",\n                            \"import pandas as pd\"])\n    \n    elif op == \"Over sampling\":\n        target = to_selected_columns(ui_input.over_sampling_target_selectize(), data)\n        features = to_selected_columns(ui_input.over_sampling_features_selectize(), data)\n        method = ui_input.over_sampling_method_selectize()\n\n        if target != \"\" and len(features) > 0 and method != \"\":\n            kwargs = []\n            if method == \"Random over-sampling\":\n                os_model = \"RandomOverSampler\"\n            elif method == \"SMOTE\":\n                xdata = data[features]\n                is_num = xdata.apply(is_numeric_dtype, axis=0).values\n                if not any(is_num):\n                    os_model = \"SMOTEN\"\n                elif all(is_num):\n                    os_model = \"SMOTE\"\n                else:\n                    os_model = \"SMOTENC\"\n                    cat_list = np.array(features)[~is_num].tolist()\n                    kwargs.append(f\"categorical_features={cat_list}\")  \n            else:\n                os_model = method\n            \n            strategy = ui_input.over_sampling_strategy_selectize()\n            if strategy != \"auto\" and strategy != \"\":\n                kwargs.append(f\"strategy={strategy.__repr__()}\")\n            \n            k_neighbors = ui_input.over_sampling_k_neighbors_numeric()\n            if method != \"Random over-sampling\" and k_neighbors != 5:\n                kwargs.append(f\"k_neighbors={k_neighbors}\")\n            \n            kwargs.append(\"random_state=0\")\n\n            code = (\n                f\"y = {name}[{target.__repr__()}]\\n\"\n                f\"x = data[{features}]\\n\"\n                f\"os = {os_model}({', '.join(kwargs)})\\n\"\n                f\"{left}pd.concat(os.fit_resample(x, y), axis=1)\"\n                f\"{result}\"\n            )\n            \n            imports.extend([f\"from imblearn.over_sampling import {os_model}\",\n                            \"import pandas as pd\"])\n    \n    elif op == \"Add columns\":\n        exp_type = ui_input.add_cols_type_selectize()\n        from_columns = to_selected_columns(ui_input.add_cols_from_columns_selectize(), data)\n        if isinstance(from_columns, str):\n            from_columns = from_columns.__repr__()\n        to_columns = ui_input.add_cols_to_columns_text().strip()\n        to_columns_repr = to_columns.__repr__()\n\n        copy_name = f\"{name}_copy\" if left == \"\" else f\"{name_out}\"\n        copy_code = f\"{copy_name} = {name}.copy()\" if left == \"\" else f\"{left}{name}.copy()\"\n        \n        formula = ui_input.add_cols_expression_text().strip() if exp_type != \"To dummies\" else \"None\"\n        transform_code = \"\"\n        if from_columns != \"\" and to_columns != \"\" and formula != \"\":\n            prep_code = \"\"\n            if exp_type == \"Arithmetic expression\":\n                expr = formula\n                imports.append(\"import numpy as np\")  \n            elif exp_type == \"Type conversion\":\n                expr = f\"{copy_name}[{from_columns}].astype({formula})\"\n            elif exp_type == \"String operations\":\n                expr = f\"{copy_name}[{from_columns}].str{formula}\"\n            elif exp_type == \"To date time\":\n                format_code = \"\" if formula == \"None\" or formula == \"\" else f\", format={formula.__repr__()}\"\n                expr = f\"pd.to_datetime({copy_name}[{from_columns}]{format_code})\"\n                imports.append(\"import pandas as pd\")\n            elif exp_type == \"To dummies\":\n                drop_code = \", drop_first=True\" if ui_input.add_cols_drop_switch() else \"\"\n                cat_code = '{cat}'\n                binary_code = \".astype(int)\" if ui_input.add_cols_binary_switch() else \"\"\n                prep_code = (\n                    f\"dummies = pd.get_dummies({copy_name}[{from_columns}]{drop_code}){binary_code}\\n\"\n                    f\"columns = [f'{to_columns}_{cat_code}' for cat in dummies.columns]\\n\"\n                )\n                expr = \"dummies\"\n                to_columns_repr = \"columns\"\n                imports.append(\"import pandas as pd\")\n            elif exp_type == \"To segments\":\n                bins = str_to_values(formula)\n                if isinstance(bins, Iterable):\n                    bins = list(bins)\n                    if len(bins) == 1:\n                        bins = bins[0]\n                labels = ui_input.add_cols_labels_text().strip()\n                if labels != \"\":\n                    label_list = [lab.strip() for lab in labels.split(',')]\n                    labels_code = f\", labels={label_list.__repr__()}\"\n                else:\n                    labels_code = \"\"\n                expr = f\"pd.cut({copy_name}[{from_columns}], bins={bins.__repr__()}{labels_code}).astype(str)\"\n                imports.append(\"import pandas as pd\")\n            \n            transform_code = f\"\\n{prep_code}{copy_name}[{to_columns_repr}] = {expr}\"\n\n        code = (\n            f\"{copy_code}\"\n            f\"{transform_code}\\n\"\n            f\"{copy_name}\"\n        )\n\n    source = dict(name_out=name_out, code=code, imports=imports, markdown=markdown)\n\n    return source\n\n\ndef visual_source(dv, name, data, ui_input, color, memory):\n\n    col_nums, col_cats, col_nbs = num_cat_labels(data)\n\n    imports = [\"import matplotlib.pyplot as plt\"]\n    markdown = ui_input.dv_markdown_text_area().strip()\n\n    width, height = ui_input.fig_width_slider()/100, ui_input.fig_height_slider()/100\n    color_code = \"\" if color == \"#1f77b4\" else f\", color={color.__repr__()}\"\n\n    if dv in [\"Pair plot\", \"Radar chart\", \"ACF and PACF\"]:\n        fig_code = title_code = xlabel_code = ylabel_code = font_code = rotate_code = grid_code = \"\"\n        legend_loc = \"\"\n    else:\n        fig_code = f\"fig = plt.figure(figsize=({width}, {height}))\\n\"\n        \n        fontsize = ui_input.fig_fontsize_selectize()\n        font_code = \"\" if int(fontsize) == 10 else f\", fontsize={fontsize}\"\n\n        title = ui_input.fig_title_text().strip()\n        title_code = f\"plt.title({title.__repr__()}{font_code})\\n\" if title != \"\" else \"\"\n\n        xlabel, ylabel = ui_input.fig_xlabel_text().strip(), ui_input.fig_ylabel_text().strip()\n        special_dvs = [\"Probability plot\", \"Histogram\", \"KDE\", \"Box plot\", \"Heat map\", \"Regression plot\"]\n        specify_xlabel = xlabel != \"\" or dv in special_dvs\n        specify_ylabel = ylabel != \"\" or dv in special_dvs\n        xlabel_code = f\"plt.xlabel({xlabel.__repr__()}{font_code})\\n\" if specify_xlabel else \"\"\n        ylabel_code = f\"plt.ylabel({ylabel.__repr__()}{font_code})\\n\" if specify_ylabel else \"\"\n\n        legend_loc = ui_input.fig_legend_loc_selectize()\n        \n        rotate = ui_input.fig_xtick_rotate_numeric()\n        align = \"center\" if rotate%90== 0 else \"left\" if rotate < 0 else \"right\"\n        rotate_cond = rotate != 0\n        if dv == \"Bar chart\":\n            rotate_cond = ui_input.bar_direction_selectize() != 'Horizontal'\n        elif dv == \"Heat map\":\n            rotate_cond = not ui_input.heatmap_top_tick_switch()\n        rotate_code = f\"plt.xticks(rotation={rotate}, ha={align.__repr__()})\\n\" if rotate_cond else \"\"\n    \n        grid_code = \"plt.grid()\\n\" if ui_input.fig_grid_switch() else \"\"\n\n    plot_code = \"\"\n    if dv == \"Value counts\":\n        column = to_selected_columns(ui_input.value_counts_column_selectize(), data)\n        direction = ui_input.value_counts_direction_selectize()\n        method = ui_input.value_counts_method_selectize()\n        alpha = ui_input.value_counts_alpha_slider()\n\n        if column != \"\" and direction != \"\" and method != \"\":\n            method_code = \"\" if method == \"Count\" else \"normalize=True\"\n            if direction == \"Vertical\":\n                bar_code = \"bar\" \n                sort_code = \"\"\n            else:\n                bar_code = \"barh\"\n                sort_code = \".sort_values(ascending=True)\"\n            alpha_code = \"\" if alpha == 1 else f\", alpha={alpha}\"\n\n            plot_code = (\n                f\"summary = {name}[{column.__repr__()}].value_counts({method_code}){sort_code}\\n\"\n                f\"plt.{bar_code}(summary.index, summary.values{color_code}{alpha_code})\\n\"\n            )\n    elif dv == \"Histogram\":\n        column = to_selected_columns(ui_input.hist_column_selectize(), data)\n        method = ui_input.hist_method_selectize().lower()\n\n        if column != \"\" and method != \"\":\n            bins = ui_input.hist_bins_numeric()\n            hue = to_selected_columns(ui_input.hist_group_by_selectize(), data)\n            norm = ui_input.hist_grouped_norm_selectize()\n            style = ui_input.hist_grouped_multiple_selectize().lower()\n            cmap = ui_input.hist_grouped_cmap_selectize()\n            \n            hue_code = f\", hue={hue.__repr__()}\"\n            common_code = f\", common_norm={norm == \"Jointly\"}\"\n            style_code = f\", multiple={style.__repr__()}\"\n            cmap_code = f\", palette={cmap.__repr__()}\"\n            title_font_code = f\", title_fontsize={fontsize}\" if fontsize != \"10\" else \"\"\n            legend_code = f\"sns.move_legend(fig.gca(), loc={legend_loc.__repr__()}{font_code}{title_font_code})\\n\"\n            break_code = f\"\\n             \"\n\n            if hue == \"\":\n                hue_code = common_code = style_code = cmap_code = legend_code = break_code = \"\"\n            else:\n                color_code = \"\"\n            alpha_code = f\", alpha={ui_input.hist_alpha_slider()}\"\n\n            plot_code = (\n                f\"sns.histplot({name}, x={column.__repr__()}{hue_code}, bins={bins}, {break_code}\"\n                f\"stat={method.__repr__()}{common_code}{style_code}\"\n                f\"{cmap_code}{color_code}{alpha_code})\\n\"\n                f\"{legend_code}\"\n            )\n    elif dv == \"KDE\":\n        column = to_selected_columns(ui_input.kde_column_selectize(), data)\n\n        if column != \"\":\n            hue = to_selected_columns(ui_input.kde_group_by_selectize(), data)\n            norm = ui_input.kde_grouped_norm_selectize()\n            style = ui_input.kde_grouped_multiple_selectize().lower()\n            cmap = ui_input.kde_grouped_cmap()\n            \n            hue_code = f\", hue={hue.__repr__()}\"\n            common_code = f\", common_norm={norm == \"Jointly\"}\"\n            style_code = f\", multiple={style.__repr__()}\"\n            cmap_code = f\", palette={cmap.__repr__()}\"\n            title_font_code = f\", title_fontsize={fontsize}\" if fontsize != \"10\" else \"\"\n            legend_code = f\"sns.move_legend(fig.gca(), loc={legend_loc.__repr__()}{font_code}{title_font_code})\\n\"\n            break_code = f\"\\n            \"\n\n            if hue == \"\":\n                hue_code = common_code = style_code = cmap_code = legend_code = break_code = \"\"\n            else:\n                color_code = \"\"\n            alpha_code = f\", alpha={ui_input.kde_alpha_slider()}\"\n\n            plot_code = (\n                f\"sns.kdeplot({name}, x={column.__repr__()}{hue_code}, {break_code}\"\n                f\"fill=True{common_code}{style_code}{cmap_code}{color_code}{alpha_code})\\n\"\n                f\"{legend_code}\"\n            )\n    elif dv == \"Box plot\":\n        column = to_selected_columns(ui_input.boxplot_column_selectize(), data)\n        group = to_selected_columns(ui_input.boxplot_group_by_selectize(), data)\n        hue = to_selected_columns(ui_input.boxplot_hue_selectize(), data)\n        notch = ui_input.boxplot_notch_switch()\n        mean = ui_input.boxplot_mean_switch()\n        direction = ui_input.boxplot_direction_selectize()\n        cmap = ui_input.boxplot_grouped_cmap_selectize()\n\n        h, v = \"x\", \"y\"\n        if direction == \"Horizontal\":\n            h, v = v, h\n\n        box_width = ui_input.boxplot_width_numeric()\n        if column != \"\":\n            hdata_code = f\", {h}={group.__repr__()}\" if group != \"\" else \"\"\n            data_code = f\"data={name}{hdata_code}, {v}={column.__repr__()}\"\n            orient_code = \", orient='h'\" if direction == \"Horizontal\" else \"\"\n            \n            break_code = f\"\\n            \"\n            notch_code = f\", notch=True\" if notch else \"\"\n            mean_prop_code = \"meanprops=dict(marker='o', markerfacecolor='k', markeredgecolor='k', markersize=5)\"\n            mean_code = f\", showmeans=True, {break_code}{mean_prop_code}\" if mean else \"\"\n            hue_code = f\", hue={hue.__repr__()}\"\n            cmap_code = f\", palette={cmap.__repr__()}\"\n            title_font_code = f\", title_fontsize={fontsize}\" if fontsize != \"10\" else \"\"\n            legend_code = f\"sns.move_legend(fig.gca(), loc={legend_loc.__repr__()}{font_code}{title_font_code})\\n\"\n            if hue == \"\":\n                hue_code = cmap_code = legend_code = \"\"\n                break_code = \" \"\n            else:\n                color_code = \"\"\n            alpha_code = f\", boxprops=dict(alpha={ui_input.boxplot_alpha_slider()})\"\n            \n            plot_code = (\n                f\"sns.boxplot({data_code}{orient_code}{hue_code}{notch_code}{mean_code},{break_code}\"\n                f\"width={box_width}{color_code}{cmap_code}{alpha_code})\\n\"\n                f\"{legend_code}\"\n            )\n\n    elif dv == \"Probability plot\":\n        column = to_selected_columns(ui_input.proba_plot_selectize(), data)\n        distr_str = ui_input.proba_plot_distri_selectize()\n        if column != \"\" and distr_str != \"\":\n            distr_map = {\"Normal\": \"norm\",\n                         \"Exponential\": \"expon\",\n                         \"Uniform\": \"uniform\"}\n            distr = distr_map[distr_str]\n            color_code = \"\" if color == \"#1f77b4\" else f\", markerfacecolor={color.__repr__()}\"\n            alpha = ui_input.proba_plot_alpha_slider()\n            alpha_code = f\", alpha={alpha}\" if alpha < 1 else \"\"\n            data_code = f\"{name}[{column.__repr__()}]\"\n            distr_code = \"\" if distr_str == \"Normal\" else f\", dist={distr}\"\n            if ui_input.proba_plot_standardize_switch():\n                sample_code = \"sample = (sample - sample.mean()) / sample.std()\\n\"\n            else:\n                sample_code = \"\"\n            plot_code = (\n                f\"sample = {data_code}\\n\"\n                f\"{sample_code}\"\n                f\"sm.qqplot(sample{distr_code}, line='q',\\n\"\n                f\"          markeredgecolor='none'{color_code}{alpha_code}, ax=fig.gca())\\n\"\n            )\n            #if xlabel == \"\":\n            #    xlabel_code = \"plt.xlabel('')\\n\"\n            #if ylabel == \"\":\n            #    ylabel_code = \"plt.ylabel('')\\n\"\n            imports.extend([\"import statsmodels.api as sm\",\n                            f\"from scipy.stats import {distr}\"])\n\n    elif dv == \"Pair plot\":\n        xcols = to_selected_columns(ui_input.pair_columns_selectize(), data)\n        drops = to_selected_columns(ui_input.pair_drop_rows_selectize(), data)\n        ycols = [c for c in xcols if c not in drops]\n\n        if len(xcols) > 0 and len(ycols) > 0:\n            if len(drops) > 0:\n                cols_code = (\n                    f\"xcols = {xcols.__repr__()}\\n\"\n                    f\"ycols = {ycols.__repr__()}\\n\"\n                )\n                vars_code = \", x_vars=xcols, y_vars=ycols\"\n            else:\n                cols_code = f\"cols = {xcols.__repr__()}\\n\"\n                vars_code = \", vars=cols\"\n\n            hues = to_selected_columns(ui_input.pair_hue_selectize(), data)\n            cmap = ui_input.pair_cmap_selectize()\n            alpha = ui_input.pair_alpha_slider()\n            kind = ui_input.pair_kind_selectize()\n            diag = ui_input.pair_diag_kind_selectize()\n\n            hue_code = \"\" if hues == \"\" else f\", hue={hues.__repr__()}\"\n            cmap_code = \"\" if hues == \"\" else f\", palette={cmap.__repr__()}\"\n            corner_code = \", corner=True\" if ui_input.pair_corner_switch() else \"\"\n\n            if kind == \"reg\":\n                kws_code = f\"plot_kws={{'scatter_kws': {{'alpha': {0.5*alpha}}} }}\"\n            else:\n                kws_code = f\"plot_kws={{'alpha': {alpha}, 'edgecolor': 'none'}}\"\n\n            each_width, each_height = width/len(xcols), height/len(ycols)\n            all_grid_code = \"[ax.grid() for ax in fig.axes]\\n\" if ui_input.fig_grid_switch() else \"\"\n\n            plot_code = (\n                f\"{cols_code}\"\n                f\"plots = sns.pairplot({name}{vars_code}{hue_code},\\n\"\n                f\"                     kind={kind.__repr__()}, diag_kind={diag.__repr__()},\\n\"\n                f\"                     {kws_code}{cmap_code},\\n\"\n                f\"                     height={each_height:.4f}, aspect={each_width/each_height:.4f}{corner_code})\\n\"\n                \"fig = plots.figure\\n\"\n                f\"{all_grid_code}\"\n            )\n        else:\n            plot_code = \"fig = plt.figure()\\n\"\n    \n    elif dv == \"Heat map\":\n        columns = to_selected_columns(ui_input.heatmap_columns_selectize(), data)\n        cmap = ui_input.heatmap_colormap_selectize()\n        annot = ui_input.heatmap_annot_switch()\n        toptick = ui_input.heatmap_top_tick_switch()\n        \n        if columns != []:\n            data_code = f\"{name}[{columns.__repr__()}]\" if columns != data.columns.tolist() else name\n            annot_code = \", annot=True\" if annot else \"\"\n            cmap_code = f\", cmap={cmap.__repr__()}\" if cmap != \"\" else \"\"\n\n            toptick_code = \"\\nfig.gca().xaxis.tick_top()\" if toptick else \"\"\n            plot_code = (\n                f\"sns.heatmap({data_code}{annot_code}{cmap_code}, ax=fig.gca())\"\n                f\"{toptick_code}\\n\"\n            )\n            imports.append(\"import seaborn as sns\")\n\n            #xlabel, ylabel = ui_input.fig_xlabel_text().strip(), ui_input.fig_ylabel_text().strip()\n            #xlabel_code = f\"plt.xlabel({xlabel.__repr__()}{font_code})\\n\"\n            #ylabel_code = f\"plt.ylabel({ylabel.__repr__()}{font_code})\\n\"\n\n    elif dv == \"Bar chart\":\n        current_ydata = ui_input.bar_ydata_selectize()\n        current_color = color\n\n        bars = memory.copy()\n        ydata = []\n        bar_colors = []\n        for bar in bars:\n            ydata.append(to_selected_columns(bar[\"ydata\"], data))\n            bar_colors.append(bar[\"color\"])\n        if current_ydata != \"\":\n            ydata.append(to_selected_columns(current_ydata, data))\n            bar_colors.append(current_color)\n        \n        if len(ydata) > 0:\n            xdata = to_selected_columns(ui_input.bar_xdata_selectize(), data)\n            xdata_code = \"\" if xdata == \"\" else f\"x={xdata.__repr__()}, \"\n\n            bar_width = ui_input.bar_width_slider()\n            bar_func = \"barh\" if ui_input.bar_direction_selectize() == 'Horizontal' else \"bar\"\n            stacked_code = \", stacked=True\" if ui_input.bar_mode_selectize() == \"Stacked\" else \"\"\n\n            if len(ydata) <= 1:\n                hide_legend_code = \", legend=False\"\n                legend_code = \"\"\n            else:\n                hide_legend_code = \"\"\n                if list(data.columns.names) == [None]:\n                    legend_title_code = \"\"\n                else:\n                    names = ['-' if name is None else str(name) for name in data.columns.names]\n                    legend_title_code = f\"title={(', '.join(names)).__repr__()}, title_fontsize={fontsize}, \"\n                legend_code = f\"plt.legend({legend_title_code}loc={legend_loc.__repr__()}{font_code})\\n\"\n\n            hide_xlabel_code = \", xlabel=''\" if ui_input.fig_xlabel_text() == \"\" else \"\"\n            hide_ylabel_code = \", ylabel=''\" if ui_input.fig_ylabel_text() == \"\" else \"\"\n            \n            alpha = ui_input.bar_alpha_slider()\n            alpha_code = \"\" if alpha == 1 else f\", alpha={alpha}\"\n            if ui_input.bar_sort_switch():\n                descending_code = \", ascending=False\" if ui_input.bar_sort_descending_switch() else \"\"\n                sort_by = to_selected_columns(ui_input.bar_sort_by_selectize(), data)\n                if sort_by == \"\":\n                    sort_code = f\"sorted = {name}.sort_index({descending_code.replace(', ', '')})\\n\"\n                else:\n                    sort_code = f\"sorted = {name}.sort_values(by={sort_by.__repr__()}{descending_code})\\n\"\n                name_sorted = f\"sorted\"\n            else:\n                sort_code = \"\"\n                name_sorted = name\n            shift = \" \" *(len(name_sorted) + (bar_func == \"barh\"))\n            plot_code = (\n                f\"{sort_code}\"\n                f\"{name_sorted}.plot.{bar_func}({xdata_code}y={ydata.__repr__()}, \"\n                f\"color={bar_colors.__repr__()}{alpha_code},\\n\"\n                f\"{shift}          width={bar_width}{stacked_code}\"\n                f\"{hide_xlabel_code}{hide_ylabel_code}{hide_legend_code}, ax=fig.gca())\\n\"\n                f\"{legend_code}\"\n            )\n    \n    elif dv == \"Radar chart\":\n        columns = to_selected_columns(ui_input.radar_selectize(), data)\n        cats = to_selected_columns(ui_input.radar_cats_selectize(), data)\n        cmap = ui_input.radar_cmap_selectize()\n        alpha = ui_input.radar_alpha_slider()\n        tick_angle = ui_input.radar_tick_angle_slider()\n        \n        if len(columns) > 0:\n            cats_code = f\"{name}[{cats.__repr__()}].tolist()\" if cats != \"\" else f\"{name}.index.tolist()\"\n            if len(columns) > 1:\n                if list(data.columns.names) == [None]:\n                    legend_title_code = \"\"\n                else:\n                    names = ['-' if name is None else str(name) for name in data.columns.names]\n                    legend_title_code = f\"title={(', '.join(names)).__repr__()}, \"\n                loc_code = \"loc='outside lower center', ncol=len(columns)\"\n                legend_code = f\"fig.legend({legend_title_code}labels=values.columns, {loc_code})\\n\"\n            else:\n                legend_code = \"\"\n            plot_code = (\n                f\"fig, ax = plt.subplots(figsize=({width}, {height}), subplot_kw={{'polar': True}})\\n\"\n                f\"ax.set_prop_cycle(cycler('color', plt.cm.{cmap}.colors))\\n\"\n                f\"cats = {cats_code}\\n\"\n                \"angles = np.concatenate((np.linspace(0, 2*np.pi, len(cats), endpoint=False), [0]))\\n\"\n                f\"columns = {columns.__repr__()}\\n\"\n                f\"values = data[columns].iloc[list(range(len(data))) + [0]]\\n\"\n                f\"ax.fill(angles, values, alpha={alpha})\\n\"\n                \"ax.plot(angles, values, 'o-', linewidth=2)\\n\"\n                \"ax.set_theta_offset(np.pi / 2)\\n\"\n                f\"ax.set_rlabel_position({tick_angle})\\n\"\n                \"ax.set_thetagrids(np.degrees(angles[:-1]), cats)\\n\"\n                f\"{legend_code}\"\n            )\n            imports.extend([\"import numpy as np\", \"from matplotlib import cycler\"])\n        else:\n            plot_code = \"fig = plt.figure()\\n\"\n    \n    elif dv == \"Line plot\":\n        markers = {\"none\": \"\",\n                   \"circle\": \"o\", \"square\": \"s\", \"diamond\": \"d\", \"triangle\": \"^\",\n                   \"dot\": \".\", \"star\": \"*\", \"cross\": \"x\"}\n        styles = {\"solid\": \"-\", \"dash\": \"--\", \"dot\": \":\", \"dash-dot\": \"-.\"}\n\n        lines = memory.copy()\n        ydata = ui_input.line_ydata_selectize()\n        margin = ui_input.line_margin_data_selectize()\n        if ydata != \"\":\n            lines.append(dict(xdata=ui_input.line_xdata_selectize(),\n                              ydata=ydata,\n                              margin=margin,\n                              color=color,\n                              style=ui_input.line_style_selectize(),\n                              marker=ui_input.line_marker_selectize(),\n                              width=ui_input.line_width_slider(),\n                              scale=ui_input.line_marker_scale_slider()))\n\n        line_code = []\n        for line in lines:\n            ydata = to_selected_columns(line['ydata'], data)\n            ydata_code = f\"{name}[{ydata.__repr__()}]\"\n            xdata = to_selected_columns(line['xdata'], data)\n            xdata_code = \"\" if line[\"xdata\"] == \"\" else f\"{name}[{xdata.__repr__()}], \"\n            \n            color_code = f\", color={line['color'].__repr__()}\"\n            width_code = f\"linewidth={line['width']}\"\n            style = styles[line[\"style\"]]\n            style_code = \"\" if style == '-' else f\", linestyle={style.__repr__()}\"\n            marker = markers[line[\"marker\"]]\n            marker_code = \"\" if marker == '' else f\", marker={marker.__repr__()}\"\n            scale = 3**(line[\"scale\"] - 1)\n            scale_code = \"\" if scale == 1 else f\", markersize={6*scale:.3f}\"\n            label_str = f\"{line['ydata']}\"\n\n            if len(line[\"margin\"]) > 0:\n                if len(line[\"margin\"]) == 1:\n                    margin_data = to_selected_columns(line['margin'][0], data)\n                    y1_code = y2_code = f\"{name}[{margin_data.__repr__()}]\"\n                elif len(line[\"margin\"]) == 2:\n                    margin_data1 = to_selected_columns(line['margin'][0], data)\n                    margin_data2 = to_selected_columns(line['margin'][1], data)\n                    y1_code = f\"{name}[{margin_data1.__repr__()}]\"\n                    y2_code = f\"{name}[{margin_data2.__repr__()}]\"\n                margin_xdata_code = xdata_code if xdata != \"\" else f\"{name}.index, \" \n                margin_code = (\n                    f\"\\nplt.fill_between({margin_xdata_code}\"\n                    f\"{ydata_code}-{y1_code}, {ydata_code}+{y2_code},\\n\"\n                    f\"                 color={line['color'].__repr__()}, alpha=0.4)\"\n                )\n            else:\n                margin_code = \"\"\n\n            each_code = (\n                f\"plt.plot({xdata_code}{ydata_code}{color_code},\\n\"\n                f\"         {width_code}{style_code}{marker_code}{scale_code}, label={label_str.__repr__()})\"\n                f\"{margin_code}\"\n            )\n            line_code.append(each_code)\n\n        legend_code = \"\" if len(line_code) < 2 else f\"plt.legend(loc={legend_loc.__repr__()}{font_code})\\n\"\n        plot_code = (\n            f\"{'\\n'.join(line_code)}\\n\"\n            f\"{legend_code}\"\n        )\n\n    elif dv == \"Scatter plot\":\n        xdata = to_selected_columns(ui_input.scatter_xdata_selectize(), data)\n        ydata = to_selected_columns(ui_input.scatter_ydata_selectize(), data)\n        color_data = ui_input.scatter_color_data_selectize()\n\n        if ydata != \"\":\n            each_code = \"_each\" if color_data != \"\" and color_data in col_cats else \"\"\n\n            xdata_code = f\"{name}{each_code}[{xdata.__repr__()}]\" if xdata != \"\" else f\"{name}{each_code}.index\"\n            ydata_code = f\"{name}{each_code}[{ydata.__repr__()}]\"\n            \n            size_data = to_selected_columns(ui_input.scatter_size_data_selectize(), data)\n            scale = ui_input.scatter_size_scale_slider()\n            multiplier = 25**(scale-1)\n            if size_data == \"\":\n                size_code = \"\" if scale == 1 else f\", s={36*multiplier:.3f}\"\n            else:\n                multi_code = \"\" if multiplier == 1 else f\"*{multiplier:.3f}\"\n                size_code = f\", s={name}{each_code}[{size_data.__repr__()}]{multi_code}\"\n                \n            alpha = ui_input.scatter_alpha_slider()\n            alpha_code = f\", alpha={alpha}\"\n            cmap = ui_input.scatter_cmap_selectize()\n            if color_data == \"\":\n                plot_code = (\n                    f\"plt.scatter({xdata_code}, {ydata_code}{size_code}{color_code}{alpha_code})\\n\"\n                )\n            elif color_data in col_nums:\n                color_code = f\", c={name}[{to_selected_columns(color_data, data).__repr__()}]\"\n                plot_code = (\n                    f\"plt.scatter({xdata_code}, {ydata_code}{size_code}{color_code}{alpha_code})\\n\"\n                    f\"plt.set_cmap({cmap.__repr__()})\\n\"\n                    f\"plt.colorbar()\\n\"\n                )\n            elif color_data in col_cats:\n                color_col_code = f\"{name}[{to_selected_columns(color_data, data).__repr__()}]\"\n                label_code = \", label=cat\"\n                plot_code = (\n                    f\"colors = plt.cm.{cmap}.colors\\n\"\n                    \"nc = len(colors)\\n\"\n                    f\"for i, cat in enumerate({color_col_code}.unique()):\\n\"\n                    f\"    {name}_each = {name}.loc[{color_col_code} == cat]\\n\"\n                    f\"    plt.scatter({xdata_code}, {ydata_code}{size_code}, color=colors[i%nc]\"\n                    f\"{alpha_code}{label_code})\\n\"\n                    f\"plt.legend(title={color_data.__repr__()}, loc={legend_loc.__repr__()}{font_code})\\n\"\n                )\n    \n    elif dv == \"Regression plot\":\n        xdata = to_selected_columns(ui_input.regplot_xdata_selectize(), data)\n        ydata = to_selected_columns(ui_input.regplot_ydata_selectize(), data)\n\n        if xdata != \"\" and ydata != \"\":\n            fig_code = \"\"\n\n            fitted = ui_input.regplot_fitted_line_switch()\n            if fitted:\n                reg_code = \"\"\n                ci_level = ui_input.regplot_ci_level_selectize()\n                ci_level_value = None if ci_level == \"None\" else int(ci_level.replace(\"%\", \"\"))\n                if ui_input.regplot_transform_selectize() == \"Polynomial\":\n                    trans_code = f\", order={ui_input.regplot_poly_order_numeric()}\"\n                elif ui_input.regplot_transform_selectize() == \"Log\":\n                    trans_code = \", logx=True\"\n                elif ui_input.regplot_transform_selectize() == \"Logistic\":\n                    trans_code = \", logistic=True\"\n                else:\n                    trans_code = \"\"\n                ci_code = f\", ci={ci_level_value}\"\n            else:\n                reg_code = \",fit_reg=False\"\n                trans_code = ci_code = \"\"\n\n            color_data = ui_input.regplot_color_data_selectize()\n            scatter_kws = {\"color\": f\"{color}\"} if color_data == \"\" else {}\n            line_kws = {\"color\": f\"{color}\"} if color_data == \"\" else {}            \n            alpha = ui_input.regplot_alpha_slider()\n            if alpha != 1:\n                scatter_kws[\"alpha\"] = alpha\n            cmap = ui_input.regplot_cmap_selectize()\n\n            vars_code = f\", x={xdata.__repr__()}, y={ydata.__repr__()}\"\n            xydata_code = f\"[{xdata.__repr__()}, {ydata.__repr__()}]\"\n            if color_data == \"\":\n                hue_order_code = \"\"\n                hue_code = \"\"\n                palette_code = \"\"\n                legend_code = \"\"\n                centroid_code = f\"centroid = {name}[{xydata_code}].mean().to_frame().T\\n\"\n                centroid_color_code = f\", facecolor = {color.__repr__()}\"\n            else:\n                hue_order_code = f\"hues = np.sort({name}[{color_data.__repr__()}].unique()).tolist()\\n\"\n                hue_code = f\", hue={color_data.__repr__()}, hue_order=hues\"\n                palette_code = f\", palette={cmap.__repr__()}\"\n                legend_code = f\"plt.legend(title={color_data.__repr__()}, loc={legend_loc.__repr__()}{font_code})\\n\"\n                centroid_code = f\"centroid = {name}.groupby({color_data.__repr__()})[{xydata_code}].mean()\\n\"\n                centroid_color_code = \"\"\n                imports.append(\"import numpy as np\")\n            \n            if ui_input.regplot_centroid_switch():\n                plot_centroid_code = (\n                    f\"{centroid_code}\"\n                    f\"sns.scatterplot(centroid{vars_code}{hue_code}, marker='X',\\n\"\n                    f\"                edgecolor='k'{centroid_color_code}, s=90, linewidth=2,\\n\"\n                    f\"                legend=False{palette_code}, ax=fig.gca(), zorder=2)\\n\"\n                )\n            else:\n                plot_centroid_code = \"\"\n\n            scatter_kws_code = f\", scatter_kws={scatter_kws.__repr__()}\" if scatter_kws else \"\"\n            line_kws_code = f\", line_kws={line_kws.__repr__()}\" if line_kws else \"\"\n            plot_code = (\n                f\"{hue_order_code}\"\n                f\"plots = sns.lmplot({name}{vars_code}{hue_code}{reg_code}{ci_code}{trans_code},\\n\"\n                f\"                   legend=False{palette_code}{scatter_kws_code}{line_kws_code},\\n\"\n                f\"                   height={height:.4f}, aspect={width/height:.4f})\\n\"\n                \"fig = plots.figure\\n\"\n                f\"{plot_centroid_code}\"\n                \"sns.despine(top=False, right=False)\\n\"\n                f\"{legend_code}\"\n            )\n\n    elif dv == \"Filled areas\":\n        cmap = ui_input.filled_areas_cmap_selectize()\n        style = ui_input.filled_areas_style_selectize()\n        ydata = to_selected_columns(ui_input.filled_areas_ydata_selectize(), data)\n        xdata = to_selected_columns(ui_input.filled_areas_xdata_selectize(), data)\n        alpha = ui_input.filled_areas_alpha_slider()\n        \n        if len(ydata) > 0:\n            if len(ydata) == 1:\n                y1_code = f\", y1={name}[{ydata[0].__repr__()}]\"\n                column_code = bottom_code = bottom_init_code = \"\"\n                y2_code = for_code = indent_code = label_code = legend_code = \"\"\n            else:\n                column_code = f\"columns = {ydata}\\n\"\n                for_code = \"for i, c in enumerate(columns):\\n\"\n                indent_code = \"    \"\n                label_code = f\", label=c\"\n                legend_code = f\"plt.legend(loc={legend_loc.__repr__()}{font_code})\\n\"\n                if style != \"Stack\":\n                    bottom_init_code = \"\"\n                    y1_code = f\", y1={name}[c]\"\n                    y2_code = \"\"\n                    bottom_code = \"\"\n                else:\n                    bottom_init_code = \"bottom = 0\\n\"\n                    y1_code = f\", y1=bottom+{name}[c]\"\n                    y2_code = f\", y2=bottom\"\n                    bottom_code = f\"    bottom += {name}[c]\\n\"\n        \n            xdata_code = f\"{name}.index\" if xdata == \"\" else f\"{name}[{xdata.__repr__()}]\"\n            alpha_code = alpha_code = f\", alpha={alpha}\" if alpha != 1 else \"\"\n\n            plot_code = (\n                f\"fig.gca().set_prop_cycle(cycler('color', plt.cm.{cmap}.colors))\\n\"\n                f\"{bottom_init_code}\"\n                f\"{column_code}\"\n                f\"{for_code}\"\n                f\"{indent_code}plt.fill_between({xdata_code}{y1_code}{y2_code}{alpha_code}{label_code})\\n\"\n                f\"{bottom_code}\"\n                f\"{legend_code}\"\n            )\n            imports.append(\"from matplotlib.pyplot import cycler\")\n    \n    elif dv == \"ACF and PACF\":\n        columns = to_selected_columns(ui_input.ac_plot_selectize(), data)\n        func = ui_input.ac_plot_type_selectize().lower()\n        func_name = \"Partial autocorrelation\" if func == \"pacf\" else \"Autocorrelation\"\n        if len(columns) > 0 and func != \"\":\n            fig_code = \"\"\n            method = ui_input.ac_plot_method_selectize()\n            lags = ui_input.ac_plot_lags_numeric()\n            ci_level = ui_input.ac_plot_ci_selectize()\n            alpha_value = 1 - 0.01*int(ci_level.replace(\"%\", \"\")) if ci_level != \"\" else 0.05\n            ci_code = f\", alpha={alpha_value:.4f}\" if alpha_value != 0.05 else \"\"\n\n            grid = ui_input.fig_grid_switch()\n            if len(columns) == 1:\n                plot_fig_code = f\"fig = plt.figure(figsize=({width}, {height}))\\n\"\n                for_code = \"\"\n                indent = \"\"\n                column_name = f\"{columns[0].__repr__()}\"\n                ax_code = \"ax=fig.gca(),\"\n                each_ylabel_code = f\"plt.ylabel({columns[0].__repr__()})\\n\"\n                each_title_code = f\"plt.title({func_name.__repr__()})\\n\"\n                tight_code = \"\"\n                each_grid_code = \"plt.grid()\\n\" if grid else \"\"\n            else:\n                num_plots = len(columns)\n                plot_fig_code = f\"fig, axes = plt.subplots({num_plots}, 1, figsize=({width}, {height}))\\n\"\n                for_code = f\"for col, ax in zip({columns}, axes):\\n\"\n                indent = \"    \"\n                column_name = \"col\"\n                ax_code = \"ax=ax,\"\n                each_ylabel_code = \"ax.set_ylabel(col)\\n\\n\"\n                each_title_code = f\"axes[0].set_title({func_name.__repr__()})\\n\"\n                tight_code = \"plt.tight_layout()\\n\"\n                each_grid_code = f\"    ax.grid()\\n\" if grid else \"\"\n            \n            if method in [\"\", \"Not adjusted\", \"ywunbiased\"]:\n                method_code = \"\"\n            elif method == \"Adjusted\":\n                method_code = \", adjusted=True\"\n            else:\n                method_code = f\", method={method.__repr__()}\"\n\n            series_code = f\"{name}[{column_name}]\"\n            if data[columns].isnull().values.sum() > 0:\n                series_code += \".dropna()\" \n            \n            color_str = color.__repr__()\n            color_code = f\"vlines_kwargs={{'color': {color_str}}}, color={color_str}\"\n            plot_code = (\n                f\"{plot_fig_code}\"\n                f\"{for_code}\"\n                f\"{indent}sm.graphics.tsa.plot_{func}({series_code}, title=None,\\n\"\n                f\"{indent}                     {' '*len(func)}\"\n                f\"lags={lags}{ci_code}{method_code}, auto_ylims=True, {ax_code}\\n\"\n                f\"{indent}                     {' '*len(func)}{color_code})\\n\"\n                f\"{each_grid_code}\"\n                f\"{indent}{each_ylabel_code}\"\n                f\"plt.xlabel('Lags')\\n\"\n                f\"{each_title_code}\"\n                f\"{tight_code}\"\n            )\n\n            imports.append(\"import statsmodels.api as sm\")\n        else:\n            plot_code = \"fig = plt.figure()\\n\"\n\n    if plot_code == \"\":\n        config_code = \"\"\n    else:\n        config_code = (\n            f\"{title_code}\"\n            f\"{xlabel_code}\"\n            f\"{ylabel_code}\"\n            f\"{rotate_code}\"\n            f\"{grid_code}\"\n        )\n\n    code = (\n        f\"{fig_code}\"\n        f\"{plot_code}\"\n        f\"{config_code}\"\n        \"plt.show()\"\n    )\n\n    if dv in [\"Histogram\", \"KDE\", \"Box plot\", \"Pair plot\", \"Regression plot\"]:\n        imports.append(\"import seaborn as sns\")\n    \n    return dict(code=code, imports=imports, markdown=markdown)\n\n\ndef operation_exec_source(data, name, source):\n    try:\n        error = source[\"error\"]\n        if error is not None:\n            raise RuntimeError(error)\n        \n        imports = source[\"imports\"]\n        code = source['code']\n        name_out = source[\"name_out\"]\n\n        # Build exec namespace\n        ns = {}\n        ns[name] = data\n        #ns['data'] = data\n\n        # Run imports in ns\n        if imports:\n            exec(\"\\n\".join(imports), ns)\n        \n        # Operation code execution\n        if name_out == \"\":\n            lines = code.split(\"\\n\")\n            exec(\"\\n\".join(lines[:-1]), ns)\n            return eval(lines[-1], ns)\n        else:\n            exec(code, ns)\n            return eval(name_out, ns)\n    except Exception as err:\n        return str(err)\n\n\ndef visual_exec_source(data, name, dvs_dict):\n\n    plt.close('all')\n    try:\n        imports = dvs_dict[\"source\"][\"imports\"]\n        code = dvs_dict[\"source\"][\"code\"]\n\n        ns = {}\n        ns[name] = data\n        ns['data'] = data\n\n        if imports:\n            exec(\"\\n\".join(imports), ns)        \n        code_lines = code.split(\"\\n\")\n        exec(\"\\n\".join(code_lines[:-1]), ns)\n        return eval(\"fig\", ns)\n    except Exception as err:\n        return str(err)\n\n\ndef statsmodels_source(mds_dict, name, ui_input):\n\n    markdown = ui_input.md_markdown_text_area().strip()\n    imports = [\"import statsmodels.formula.api as smf\", \"import numpy as np\"]\n\n    func = ui_input.statsmodels_type_selectize()\n    mds_dict[\"type\"] = func\n    formula = ui_input.statsmodels_formula_text().strip()\n\n    if formula != \"\" and func != \"\":\n        code = (\n            f\"model = smf.{func}({formula.__repr__()}, data={name})\\n\"\n            f\"result = model.fit()\\n\"\n            f\"print(result.summary())\"\n        )\n    else:\n        code = \"\"\n\n    return dict(code=code, imports=imports, markdown=markdown)\n\n\ndef sklearn_model_source(mds_dict, name, data, ui_input, page):\n\n    predicted = ui_input.model_dependent_selectize()\n    predictors = list(ui_input.model_independent_selectize())\n\n    code_step1 = code_step2 = code_step3 = code_step4 = \"\"\n    imports_step1 = []\n\n    cat_predictors = []\n    if predicted != \"\" and len(predictors) > 0:\n        _, cat_predictors, _ = num_cat_labels(data[to_selected_columns(predictors, data)])\n        cat_predictors += list(ui_input.model_numeric_cats_selectize())\n\n        if len(cat_predictors) > 0:\n            imports_step1.extend([\"from sklearn.preprocessing import OneHotEncoder\",\n                                  \"from sklearn.compose import ColumnTransformer\"])\n            dummy_code = (\n                f\"\\n\\ncats = {cat_predictors.__repr__()}\\n\"\n                \"ohe = OneHotEncoder(drop='first', sparse_output=False)\\n\"\n                \"to_dummies = ColumnTransformer(transformers=[('cats', ohe, cats)],\\n\"\n                \"                               remainder='passthrough',\\n\"\n                \"                               force_int_remainder_cols=False)\"\n            )\n        else:\n            dummy_code = \"\"\n        \n        #y = data[predicted]\n        #if (not is_numeric_dtype(y)) or is_bool_dtype(y):\n        #    mds_dict[\"type\"] = \"Classifier\"\n        #else:\n        #    mds_dict[\"type\"] = \"Regressor\"\n\n        code_step1 = (\n            f\"y = {name}[{predicted.__repr__()}]\\n\"\n            f\"x = {name}[{predictors.__repr__()}]\"\n            f\"{dummy_code}\"\n        )\n\n    model = ui_input.sklearn_model_selectize()\n    imports_step2 = []\n    params = []\n    if model != \"\":\n        imports_step2.extend([\"import numpy as np\"])\n        if mds_dict[\"type\"] == \"Classifier\":\n            os_method = ui_input.sklearn_over_sampling_selectize()\n            log_trans = False\n        else:\n            os_method = \"\"\n            log_trans = ui_input.sklearn_predicted_log_switch()\n\n        os_kwargs = []\n        if os_method == \"\" or os_method == \"Not applied\":\n            imports_step2.append(\"from sklearn.pipeline import Pipeline\")\n            os_code = \"\"\n        else:\n            if os_method == \"SMOTE\":\n                if len(cat_predictors) == 0:\n                    os = \"SMOTE\"\n                elif len(cat_predictors) == len(predictors):\n                    os = \"SMOTEN\"\n                else:\n                    os = \"SMOTENC\"\n                    os_kwargs.append(f\"categorical_features={cat_predictors}\")  \n                os_param = \"k_neighbors\"\n            else:\n                os = os_method\n                os_param = \"n_neighbors\"\n            imports_step2.extend([\"from imblearn.pipeline import Pipeline\",\n                                  f\"from imblearn.over_sampling import {os}\"])\n            \n            if os_method in [\"SMOTE\", \"ADASYN\"]:\n                kn_str = str_to_numstr(ui_input.sklearn_over_sampling_k_neighbors())\n                kn = eval(kn_str) if isinstance(kn_str, str) else []\n                if len(kn) == 1:\n                    os_kwargs.append(f\"k_neighbors={kn[0]}\")\n                if len(kn) > 1:\n                    params.append(f\"    'os__{os_param}': {kn_str}\")\n\n            os_kwargs.append(\"random_state=0\")\n            os_code = f\"    ('os', {os}({', '.join(os_kwargs)})),\\n\"\n\n        scaler = ui_input.sklearn_scaling_selectize()\n        if scaler in [\"StandardScaler\", \"Normalizer\"]:\n            imports_step2.append(f\"from sklearn.preprocessing import {scaler}\")\n            scaler_code = f\"    ('scaling', {scaler}()),\\n\"\n        else:\n            scaler_code = \"\"\n        pca_str = str_to_numstr(ui_input.sklearn_pca_numbers())\n        pca = eval(pca_str) if isinstance(pca_str, str) else []\n        if len(pca) > 0:\n            imports_step2.append(f\"from sklearn.decomposition import PCA\")\n            if len(pca) == 1:\n                pca_code = f\"    ('pca', PCA(n_components={pca[0]}))\\n\"\n            else:\n                params.append(f\"    'pca__n_components': {pca_str}\")\n                pca_code = \"    ('pca', PCA()),\\n\"\n        else:\n            pca_code = \"\"\n            \n    if model in [\"LinearRegression\", \"Ridge\", \"Lasso\", \"LogisticRegression\"]:\n        imports_step2.append(f\"from sklearn.linear_model import {model}\")\n    elif model in [\"DecisionTreeRegressor\", \"DecisionTreeClassifier\"]:\n        imports_step2.append(f\"from sklearn.tree import {model}\")\n    elif model in [\"RandomForestRegressor\", \"RandomForestClassifier\"]:\n        imports_step2.append(f\"from sklearn.ensemble import {model}\")\n\n    args = []\n    if model != \"\":\n        hyper_list = model_hypers[model]\n        reg_name = \"__regressor\" if log_trans else \"\"\n        for hyper, label, default_value in hyper_list:\n            values_str = str_to_numstr(eval(f\"ui_input.sklearn_{model.lower()}_{hyper}()\"))\n            values = eval(values_str) if isinstance(values_str, str) else []\n            if len(values) == 1:\n                args.append(f\"{hyper}={values[0]}\")\n            elif len(values) > 1:\n                params.append(f\"    '{model.lower()}{reg_name}__{hyper}': {values_str}\")\n    \n    if model in [\"Lasso\", \"LogisticRegression\"]:\n        args.append(\"max_iter=1000000\")\n    elif model in [\"DecisionTreeRegressor\", \"DecisionTreeClassifier\",\n                   \"RandomForestRegressor\", \"RandomForestClassifier\"]:\n        args.append(\"random_state=0\")\n\n    if len(cat_predictors) > 0:\n        dummy_code = \"    ('dummy', to_dummies),\\n\"\n    else:\n        dummy_code = \"\"\n    if model != \"\":\n        if len(params) > 0:\n            params_code = (\n                \"params = {\\n\"\n                f\"{',\\n'.join(params)}\\n\"\n                \"}\\n\"\n            )\n        else:\n            params_code = \"\"\n        \n        model_object = f\"{model}({', '.join(args)})\"\n        if log_trans:\n            imports_step2.append(\"from sklearn.compose import TransformedTargetRegressor\")\n            space = \" \" * (len(str(model)) + 9)\n            model_object = (\n                f\"TransformedTargetRegressor(regressor={model_object},\\n{space}\"\n                f\"                           func=np.log, inverse_func=np.exp)\"\n            )\n        code_step2 = (\n            f\"{params_code}\"\n            \"steps = [\\n\"\n            f\"{os_code}\"\n            f\"{dummy_code}\"\n            f\"{scaler_code}\"\n            f\"{pca_code}\"\n            f\"    ({model.lower().__repr__()}, {model_object})\\n\"\n            \"]\\n\"\n            \"pipe = Pipeline(steps)\"\n        )\n\n    imports_step3 = [\"from sklearn.model_selection import KFold\",\n                     \"from sklearn.model_selection import cross_val_predict\",\n                     \"import pandas as pd\", \"import numpy as np\"]\n    if mds_dict[\"type\"] == \"Classifier\":\n        scoring_code = \", scoring='roc_auc_ovr'\"\n        score_name = \"AUC\"\n    else:\n        scoring_code = \"\"\n        score_name = \"R-squared\"\n        #imports_step3.append(\"from sklearn.model_selection import cross_val_predict\")\n    test_set = ui_input.sklearn_test_set_switch()\n    if test_set:\n        split_code = (\n            \"x_train, x_test, y_train, y_test = \"\n            f\"train_test_split(x, y, test_size={ui_input.sklearn_test_ratio_numeric()}, random_state=0)\\n\"\n        )\n        y_name, x_name = \"y_train\", \"x_train\"\n        test_code = (\n            \"\\n\\nmodel.fit(x_train, y_train)\\n\"\n            f\"test_score = model.score(x_test, y_test{scoring_code})\\n\"\n            \"print(f'Test score: {test_score:.4f}')\"\n        )\n        imports_step3.append(\"from sklearn.model_selection import train_test_split\")\n    else:\n        split_code = \"\"\n        y_name, x_name = \"y\", \"x\"\n        test_code = \"\"\n    if len(params) > 0:\n        cv_code = (\n            f\"search = GridSearchCV(pipe, params{scoring_code}, cv=cv, error_score='raise', n_jobs=-1)\\n\"\n            f\"search.fit({x_name}, {y_name})\\n\"\n            \"print('Best parameters:')\\n\"\n            \"for p in params:\\n\"\n            \"    print(f\\\"- {p[p.index('__')+2:]}: {search.best_params_[p]}\\\")\\n\\n\"\n            \"model = search.best_estimator_\\n\"\n            \"best_index = search.best_index_\\n\"\n            \"score = np.array([search.cv_results_[f'split{i}_test_score'][best_index]\\n\"\n            \"                  for i in range(folds)])\\n\"\n\n        )\n        imports_step3.append(\"from sklearn.model_selection import GridSearchCV\")\n    else:\n        cv_code = (\n            f\"score = cross_val_score(pipe, {x_name}, {y_name}{scoring_code}, cv=cv)\\n\\n\"\n            \"model = pipe\\n\"\n        )\n        imports_step3.append(\"from sklearn.model_selection import cross_val_score\")\n    \n    if mds_dict[\"type\"] == \"Classifier\":\n        pred_name = \"proba\"\n        pred_method_code = \", method='predict_proba'\"\n        \n        if page >= 3:\n            y_label = ui_input.model_dependent_selectize()\n    else:\n        pred_name = \"yhat\"\n        pred_method_code = \"\"\n    \n    if test_set:\n        predict_func = \"predict_proba\" if mds_dict[\"type\"] == \"Classifier\" else \"predict\"\n        test_pred_code = (\n            f\"\\nmodel.fit({x_name}, {y_name})\\n\"\n            f\"{pred_name}_test = model.{predict_func}(x_test)\"\n        )\n    else:\n        test_pred_code = \"\"\n        #decision_test_code = \"\"\n\n    code_step3 = (\n        f\"folds = {ui_input.sklearn_cv_folds_numeric()}\\n\"\n        f\"cv = KFold(n_splits=folds, shuffle=True, random_state=0)\\n\"\n        f\"{split_code}\"\n        f\"{cv_code}\"\n        \"index=[f'fold{i}' for i in range(folds)]\\n\"\n        f\"table = pd.DataFrame({{{score_name.__repr__()}: score.round(4)}}, index=index).T\\n\"\n        \"print(f'{table}')\\n\"\n        \"print(f'Cross-validation score: {score.mean():.4f}')\"\n        f\"{test_code}\\n\\n\"\n        f\"{pred_name}_cv = cross_val_predict(model, {x_name}, {y_name}{pred_method_code}, cv=cv)\"\n        f\"{test_pred_code}\"\n        #f\"{decision_cv_code}\"\n        #f\"{decision_test_code}\"\n    )\n\n    imports_step4 = []\n    if mds_dict[\"type\"] == \"Classifier\" and page >= 4:\n        y_label = ui_input.model_dependent_selectize()\n        target_class = ui_input.sklearn_class_selectize()\n        if is_bool_dtype(data[y_label]) and target_class in [\"True\", \"False\"]:\n            target_class = eval(target_class)\n        default = target_class == \"\"\n        threshold = 0.5 if default else ui_input.sklearn_class_threshold_slider()\n\n        if default:      ######################################\n            decision_cv_code = f\"yhat_cv = cross_val_predict(model, {x_name}, {y_name}, cv=cv)\"\n            decision_test_code = \"\\nyhat_test = model.predict(x_test)\"\n            imports_step4.append(\"from sklearn.model_selection import cross_val_predict\")\n        else:\n            decision_cv_code = (\n                f\"threshold, target = {threshold}, {target_class.__repr__()}\\n\"\n                f\"index = np.unique({y_name}).tolist().index(target)\\n\"\n                f\"y_target = y == target\\n\"\n                f\"yhat_cv = proba_cv[:, index] > threshold\"\n            )\n            decision_test_code = f\"\\nyhat_test = proba_test[:, index] > threshold\"\n            imports_step4.append(\"import numpy as np\")\n\n        if not test_set:\n            decision_test_code = \"\"\n\n        code_step4 = (\n            f\"{decision_cv_code}\"\n            f\"{decision_test_code}\"\n        )\n\n    markdown = ui_input.md_markdown_text_area()\n\n    return dict(code={1: code_step1, 2: code_step2, 3: code_step3, 4: code_step4},\n                imports={1: imports_step1, 2: imports_step2, 3: imports_step3, 4: imports_step4},\n                markdown=markdown)\n\n\ndef statsmodels_outputs_source(ui_input):\n\n    imports = [\"import pandas as pd\"]\n    name_out = ui_input.statsmodels_output_text().strip()\n\n    code = (\n        #f\"{name_out} = pd.concat((result.params, result.bse, result.tvalues, result.pvalues), axis=1)\\n\"\n        f\"{name_out} = result.summary2().tables[1]\\n\"\n        f\"{name_out}.columns = ['coef', 'std err', 't-values', 'p-vlaues', 'CI-lower', 'CI-upper']\\n\"\n        #f\"{name_out}[['CI-lower', 'CI-upper']] = result.conf_int()\\n\"\n        f\"{name_out}\"\n    )\n\n    return dict(type=\"data\", name_out=name_out, code=code, imports=imports)\n\n\ndef sklearn_outputs_source(mds_dict, name, data, ui_input):\n\n    imports = []\n    name_out = ui_input.sklearn_output_text().strip()\n\n    test_set = ui_input.sklearn_test_set_switch()\n    row_index = \"x_train.index\" if test_set else \":\"\n    y_label = ui_input.model_dependent_selectize() \n    if mds_dict[\"type\"] == \"Classifier\":\n        predicted = \"proba\"\n        classes = np.unique(data[y_label]).tolist()\n        pred_cols = [f\"{y_label}_proba_{c}\" for c in classes]\n\n        target_class = ui_input.sklearn_class_selectize()\n        if is_bool_dtype(data[y_label]) and target_class in [\"True\", \"False\"]:\n            target_class = eval(target_class)\n        default = target_class == \"\"\n        \n        if default:\n            label = f\"{y_label}_pred\".__repr__()\n            decision_cv_code = f\"\\n{name_out}.loc[{row_index}, {label}] = yhat_cv\"\n            decision_test_code = f\"{name_out}.loc[x_test.index, {label}] = yhat_test\\n\"\n        else:\n            label = f\"{y_label}_is_{target_class}\".__repr__()\n            decision_cv_code = f\"\\n{name_out}.loc[{row_index}, {label}] = proba_cv[:, index] > threshold\"\n            decision_test_code = f\"{name_out}.loc[x_test.index, {label}] = proba_test[:, index] > threshold\\n\"\n        resid_code = \"\"\n    else:\n        predicted = \"yhat\"\n        pred_cols = f\"{y_label}_pred\"\n        decision_cv_code = \"\"\n        decision_test_code = \"\"\n        if ui_input.sklearn_residual_switch():\n            resid_expr = f\"{name_out}[{y_label.__repr__()}] - {name_out}[{pred_cols.__repr__()}]\"\n            resid_code = f\"\\n{name_out}['{y_label}_resid'] = {resid_expr}\"\n        else:\n            resid_code = \"\"\n\n    if test_set:\n        save_test_code = (\n            f\"\\n{name_out}.loc[x_test.index, {pred_cols.__repr__()}] = {predicted}_test\\n\"\n            f\"{decision_test_code}\"\n            f\"{name_out}.loc[x_train.index, 'split'] = 'cross-validation'\\n\"\n            f\"{name_out}.loc[x_test.index, 'split'] = 'test'\"\n        )\n    else:\n        save_test_code = \"\"\n    \n    \n    code = (\n        f\"{name_out} = {name}.copy()\\n\"\n        f\"{name_out}.loc[{row_index}, {pred_cols.__repr__()}] = {predicted}_cv\"\n        f\"{decision_cv_code}\"\n        f\"{save_test_code}\"\n        f\"{resid_code}\"\n    )\n\n    return dict(type=\"data\", name_out=name_out, code=code, imports=imports)\n\n\ndef sklearn_plots_source(mds_dict, name, data, ui_input, page):\n\n    y_label = ui_input.model_dependent_selectize() \n    test_set = ui_input.sklearn_test_set_switch()\n    plots = ui_input.sklearn_outputs_checkbox()\n\n    if mds_dict[\"type\"] == \"Classifier\" and page == 4:\n        target_class = ui_input.sklearn_class_selectize()\n        if is_bool_dtype(data[y_label]) and target_class in [\"True\", \"False\"]:\n            target_class = eval(target_class)\n    \n    test_min = test_max = cv_label_code = test_resid_code = test_plot_code = legend_code = \"\"\n    if test_set:\n        x_name, y_name = \"x_train\", \"y_train\"\n        cv_label_code = \", label='Cross-validation'\"\n        legend_code = \"plt.legend()\\n\"\n        num_axes = 2\n    else:\n        x_name, y_name = \"x\", \"y\"\n        num_axes = 1\n\n    imports = [\"import matplotlib.pyplot as plt\"]\n    source = []\n    if \"Prediction plot\" in plots and page == 4:\n        if test_set:\n            test_min, test_max = \", yhat_test.min()\", \", yhat_test.max()\"\n            test_plot_code = (\n                \"plt.scatter(yhat_test, y_test, linewidth=2,\\n\"\n                \"            edgecolor='r', facecolor='none', alpha=0.3, label='Test')\\n\"\n            )\n        code = (\n            \"fig = plt.figure(figsize=(4.2, 4.2))\\n\"\n            f\"ymin = min(yhat_cv.min(){test_min}, {y_name}.min())\\n\"\n            f\"ymax = max(yhat_cv.max(){test_max}, {y_name}.max())\\n\"\n            f\"plt.scatter(yhat_cv, {y_name}, linewidth=2,\\n\"\n            f\"            edgecolor='b', facecolor='none', alpha=0.3{cv_label_code})\\n\"\n            f\"{test_plot_code}\"\n            \"plt.plot([ymin, ymax], [ymin, ymax], linestyle='--', color='k')\\n\"\n            \"plt.xlabel('Predicted values')\\n\"\n            \"plt.ylabel('Actual values')\\n\"\n            f\"{legend_code}\"\n            \"plt.grid()\\n\"\n            \"plt.show()\"\n        )\n        source.append(dict(type=\"plot\", code=code, imports=imports, fig=None))\n    \n    if \"Residual plot\" in plots and page == 4:\n        if test_set:\n            test_resid_code = \"resid_test = y_test - yhat_test\\n\"\n            test_plot_code = (\n                \"plt.scatter(yhat_test, resid_test, linewidth=2,\\n\"\n                \"            edgecolor='r', facecolor='none', alpha=0.3, label='Test')\\n\"\n            )\n            ymin_code = \"ymin = min((yhat_cv.min(), yhat_test.min()))\\n\"\n            ymax_code = \"ymax = max((yhat_cv.max(), yhat_test.max()))\\n\"\n        else:\n            ymin_code = \"ymin = yhat_cv.min()\\n\"\n            ymax_code = \"ymax = yhat_cv.max()\\n\"\n        code = (\n            \"fig = plt.figure(figsize=(4.2, 4.2))\\n\"\n            f\"resid_cv = {y_name} - yhat_cv\\n\"\n            f\"{test_resid_code}\"\n            f\"{ymin_code}\"\n            f\"{ymax_code}\"\n            f\"plt.scatter(yhat_cv, resid_cv, linewidth=2,\\n\"\n            f\"            edgecolor='b', facecolor='none', alpha=0.3{cv_label_code})\\n\"\n            f\"{test_plot_code}\"\n            \"plt.plot([ymin, ymax], [0, 0], linestyle='--', color='k')\\n\"\n            \"plt.xlabel('Predicted values')\\n\"\n            \"plt.ylabel('Residuals')\\n\"\n            f\"{legend_code}\"\n            \"plt.grid()\\n\"\n            \"plt.show()\"\n        )\n        source.append(dict(type=\"plot\", code=code, imports=imports, fig=None))\n\n    if \"Confusion matrix\" in plots and page == 4:\n        \n        imports.extend([\"import seaborn as sns\",\n                        \"from sklearn.metrics import confusion_matrix\"])\n\n        rows = \"[x_train.index]\" if test_set else \"\"\n        default = target_class == \"\"\n        classes = np.unique(data[y_label]).tolist()\n        if default:\n            args = f\"{y_name}, yhat_cv\"\n            index_code = f\"index={classes.__repr__()},\"\n            columns_code = f\"columns={classes.__repr__()}\"\n        else:\n            args = f\"y_target{rows}, proba_cv[:, index]>threshold\"\n            index_code = f\"index=['is {target_class}', 'not {target_class}'],\"\n            columns_code = f\"columns=['is {target_class}', 'not {target_class}']\"\n\n        code = (\n            f\"cmat_cv = pd.DataFrame(confusion_matrix({args}, normalize='true').round(5),\\n\"\n            f\"                       {index_code}\\n\"\n            f\"                       {columns_code})\\n\"\n            \"cmat_cv.index.name = 'Actual'\\n\"\n            \"cmat_cv.columns.name = 'Predicted'\\n\"\n            f\"fig = plt.figure(figsize=(4.2, 4.5))\\n\"\n            \"sns.heatmap(cmat_cv, annot=True, cmap='YlGn', cbar=False, ax=fig.gca())\\n\"\n            \"plt.title('Cross-validation')\\n\"\n            \"plt.show()\"\n        )\n        source.append(dict(type=\"plot\", code=code, imports=imports, fig=None))\n\n        if test_set:\n            default = target_class == \"\"\n            if default:\n                args = f\"y_test, yhat_test\"\n            else:\n                args = \"y_target[x_test.index], proba_test[:, index]>threshold\"\n            code = (\n                f\"cmat_test = pd.DataFrame(confusion_matrix({args}, normalize='true').round(5),\\n\"\n                f\"                         {index_code}\\n\"\n                f\"                         {columns_code})\\n\"\n                \"cmat_test.index.name = 'Actual'\\n\"\n                \"cmat_test.columns.name = 'Predicted'\\n\"\n                f\"fig = plt.figure(figsize=(4.2, 4.5))\\n\"\n                \"sns.heatmap(cmat_test, annot=True, cmap='YlGn', cbar=False, ax=fig.gca())\\n\"\n                \"plt.title('Test')\\n\"\n                \"plt.show()\"\n            )\n            source.append(dict(type=\"plot\", code=code, imports=imports, fig=None))\n    \n    if \"Receiver-operating characteristic\" in plots and page == 4:\n\n        imports.extend([\"import numpy as np\", \"from sklearn.metrics import roc_curve\"])\n\n        rows = \"[x_train.index]\" if test_set else \"\"\n        code = (\n            f\"fpr, tpr, thresholds = roc_curve(y_target{rows}, proba_cv[:, index])\\n\"\n            \"fig = plt.figure(figsize=(4.2, 4.5))\\n\"\n            \"plt.fill_between(fpr, tpr, color='orange', alpha=0.3, zorder=0, label='AUC')\\n\"\n            \"plt.plot(fpr, tpr, linewidth=2, color='b', zorder=1, label='ROC')\\n\"\n            \"k = np.argmin(abs(thresholds - threshold))\\n\"\n            \"plt.scatter(fpr[k], tpr[k], s=80, linewidth=2, edgecolor='b', facecolor='lightblue')\\n\"\n            \"plt.plot([0, 1], [0, 1], linewidth=2, linestyle='--', color='k')\\n\"\n            \"plt.title('Cross-validation')\\n\"\n            \"plt.legend()\\n\"\n            \"plt.xlabel('False positive rate')\\n\"\n            \"plt.ylabel('True positive rate')\\n\"\n            \"plt.grid()\\n\"\n            \"plt.show()\"\n        )\n        source.append(dict(type=\"plot\", code=code, imports=imports, fig=None))\n    \n    if \"Precision-recall\" in plots and page == 4:\n\n        imports.extend([\"import numpy as np\",\n                        \"from sklearn.metrics import precision_recall_curve\",\n                        \"from sklearn.metrics import f1_score\"])\n        \n        rows = \"[x_train.index]\" if test_set else \"\"\n        code = (\n            f\"precision, recall, thresholds = precision_recall_curve(y_target{rows}, proba_cv[:, index])\\n\"\n            f\"f1 = f1_score(y_target{rows}, proba_cv[:, index] > threshold)\\n\"\n            \"fig = plt.figure(figsize=(4.2, 4.5))\\n\"\n            \"plt.plot(recall, precision, linewidth=2, color='b', zorder=0)\\n\"\n            \"k = np.argmin(abs(thresholds - threshold))\\n\"\n            \"plt.scatter(recall[k], precision[k], s=80, linewidth=2, edgecolor='b', facecolor='lightblue')\\n\"\n            \"plt.text(0.6, 0.98, f'f1-score: {f1:.4f}',\\n\"\n            \"         bbox=dict(facecolor='wheat', edgecolor='black', boxstyle='round, pad=0.5'))\\n\"\n            \"plt.title('Cross-validation')\\n\"\n            \"plt.xlabel('Recall')\\n\"\n            \"plt.ylabel('Precision')\\n\"\n            \"plt.grid()\\n\"\n            \"plt.show()\"\n        )\n        source.append(dict(type=\"plot\", code=code, imports=imports, fig=None))\n\n    return source\n\n\ndef export(nodes):\n\n    code_cells = []\n    all_imports = []\n    for node in nodes:\n        info = node.info\n        source = info[\"source\"]\n        code = source[\"code\"]\n        if isinstance(code, dict):\n            keys = [\"vars\", \"dummy\", \"pipeline\", \"fitting\"]\n            code = '\\n'.join([code[k] for k in keys])\n        markdown = source[\"markdown\"]\n        imports = source[\"imports\"]\n    \n        all_imports.extend(imports)\n        \n        if markdown.strip() != \"\":\n            markdown_dict = dict(cell_type=\"markdown\", metadata={}, source=f\"{markdown}\")\n            code_cells.append(markdown_dict)\n\n        code_dict = dict(cell_type='code', metadata={}, source=f'{code}')\n        code_cells.append(code_dict)\n    \n    all_imports = list(set(all_imports))\n    if \"import pandas as pd\" in all_imports:\n        all_imports.remove(\"import pandas as pd\")\n    if \"import numpy as np\" in all_imports:\n        all_imports.remove(\"import numpy as np\")\n    all_imports.sort(reverse=True)\n\n    all_imports = ['import pandas as pd', 'import numpy as np'] + all_imports\n    \n    import_cell = dict(cell_type='code', metadata={}, source='\\n'.join(all_imports))\n    code_cells.insert(0, import_cell)\n\n    return {\n        \"metadata\" : {\n            \"signature\": \"hex-digest\",\n            \"kernel_info\": {\n                \"name\" : \"the name of the kernel\"\n            },\n        },\n        \"nbformat\": 4,\n        \"nbformat_minor\": 0,\n        \"cells\" : code_cells,\n    }\n", "type": "text"}, {"name": "canvas.py", "content": "import numpy as np\nimport pandas as pd\n\n\nclass PSNode:\n\n    def __init__(self, pos, ntype, before=None, levels=[], info={}):\n\n        self.dx = 10\n        self.dy = -4\n\n        self.pos = pos\n        self.ntype = ntype\n        self.before = before\n        self.after = []\n        self.nbranch = 0\n        self.offset = None\n\n        self.levels = levels\n\n        self.info = info\n\n    def get_root(self):\n\n        node = self.before\n        if node is None:\n            return self\n        else:\n            return node.get_root()\n\n    def get_all(self):\n\n        output = [self]\n        for node in self.after:\n            output.extend(node.get_all())\n\n        return output\n\n    def get_all_lines(self):\n\n        x = []\n        y = []\n        for node in self.after:\n            x1, x2 = self.pos[0], node.pos[0]\n            y1, y2 = self.pos[1], node.pos[1]\n            if x1 == x2:\n                x.extend([np.nan, x1, x2, np.nan])\n                y.extend([np.nan, y1, y2, np.nan])\n            else:\n                xmid = x1 + (x2 - x1)*np.concatenate([np.linspace(0, 0.6, 60), np.linspace(0.61, 1, 5)])\n                x.extend([np.nan] + list(xmid) + [np.nan])\n                ymid = y2 + (y1 - y2)/(1 + np.exp(4*(xmid - (0.6*x1 + 0.4*x2))))\n                y.extend([np.nan] + list(ymid) + [np.nan])\n            data = node.get_all_lines()\n            x.extend(data[0])\n            y.extend(data[1])\n\n        return x, y\n\n    def content_label(self):\n\n        if self.ntype == 'data':\n            name, data = self.content\n            return f'<b>{name}</b>:<br>{data.shape[0]} x {data.shape[1]}'\n        elif self.ntype == 'visual':\n            name, _, vtype = self.content\n            return f'{vtype} for <b>{name}</b>'\n        elif self.ntype == 'model':\n            return self.content[2]\n        else:\n            return 'Unknown'\n\n    def grow(self, ntype, info):\n\n        x = self.pos[0] + self.dx\n        y0 = self.pos[1]\n        levels = self.levels + [self.nbranch]\n        root = self.get_root()\n        all_nodes = root.get_all()\n        nlevels = len(self.levels)\n        upper = []\n        lower = []\n        lower_nodes = []\n        for node in all_nodes:\n            if nlevels + 1 == len(node.levels) and nlevels > 0:\n                shift = np.array(self.levels) - np.array(node.levels[:nlevels])\n                nonzero_indices = np.nonzero(shift)[0]\n                if len(nonzero_indices) > 0:\n                    if shift[nonzero_indices[0]] > 0:\n                        upper.append(node.pos[1])\n                    else:\n                        lower_nodes.append(node)\n                        lower.append(node.pos[1])\n        if upper:\n            y0 = min(upper) + self.dy if y0 >= min(upper) else y0\n        y = y0 + self.dy*self.nbranch\n        if lower:\n            ymax = max(lower)\n            if y <= ymax:\n                offset = y - ymax + self.dy\n                for node in lower_nodes:\n                    node.pos = (node.pos[0], node.pos[1] + offset)\n\n        #next_node = PSNode((x, y), ntype, self, levels, content, code=code)\n        next_node = PSNode((x, y), ntype, self, levels, info=info)\n        self.after.append(next_node)\n        self.nbranch += 1\n\n        return next_node", "type": "text"}, {"name": "launch.py", "content": "from shiny.express import wrap_express_app\nfrom pathlib import Path\n\nimport uvicorn\nimport asyncio\nimport warnings\nimport socket\n\ndef occupied_port(port: int) -> bool:\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:\n        return s.connect_ex(('localhost', port)) == 0\n\ndef run(port=8010):\n\n    if occupied_port(port):\n        raise ValueError(f\"The port {port} is invalid or occupied.\")\n\n    current_file = Path(__file__)\n    directory = current_file.parent\n\n    with warnings.catch_warnings():\n        warnings.simplefilter(\"ignore\")\n        app = wrap_express_app(Path(directory/\"app.py\"))\n\n        print(f\"Uvicorn running on: http://localhost:{port}\")\n        config = uvicorn.Config(app, port=port)\n        server = uvicorn.Server(config)\n        loop = asyncio.get_running_loop()\n        loop.create_task(server.serve())\n", "type": "text"}, {"name": "requirements.txt", "content": "shiny >= 1.4.0\npandas >= 2.2.3\nnumpy >= 2.0.2\nscipy\nxlsxwriter >= 3.2.0\nmatplotlib\nseaborn\nbokeh\njupyter_bokeh\nshinywidgets\nscikit-learn\nimbalanced-learn\nstatsmodels", "type": "text"}, {"name": "styles.py", "content": "chd_style = 'color:white; background:#007bc2 !important;'\n\ndf_styles = [\n    {\n        \"cols\": [0],\n        \"style\": {\n            \"background-color\": \"#F8F8F8\",\n            \"font-weight\": \"bold\",\n            \"width\": \"80px\",\n        },\n    },\n    {   \n        \"style\": {\n            \"max-width\": \"160px\",\n            \"padding-right\": \"15px\",\n        }\n    }\n]\n\ntable_styles =  [\n    {'selector': 'th',\n     'props': [('background', 'white'),\n               ('text-align', 'right'),\n               ('font-size', '10pt'),\n               ('color', 'black'),\n               ('padding-left', '5px'),\n               ('padding-right', '5px'),\n               ('padding-top', '5px'),\n               ('padding-bottom', '5px')]},\n    {'selector': 'td',\n     'props': [('text-align', 'right'),\n               ('font-size', '10pt'),\n               ('padding-left', '15px'),\n               ('padding-right', '5px'),\n               ('padding-top', '5px'),\n               ('padding-bottom', '5px')]},\n    {'selector': 'tr:nth-of-type(odd)',\n     'props': [('background', '#EBEBEB')]},\n    {'selector': 'tr:nth-of-type(even)',\n     'props': [('background', 'white')]},\n]\n\nhc_style = (\"font-size:10pt;border:1px solid;\"\n            \"font-family:monospace;\"\n            \"margin-top:6px;padding:3px;padding-left:9px\")", "type": "text"}, {"name": "images/acf_and_pacf.png", "content": "", "type": "binary"}, {"name": "images/add_columns.png", "content": "", "type": "binary"}, {"name": "images/aggregation.png", "content": "", "type": "binary"}, {"name": "images/anova.png", "content": "", "type": "binary"}, {"name": "images/bar_chart.png", "content": "", "type": "binary"}, {"name": "images/boolean_conditions.png", "content": "", "type": "binary"}, {"name": "images/box_plot.png", "content": "", "type": "binary"}, {"name": "images/clustering.png", "content": "", "type": "binary"}, {"name": "images/correlation.png", "content": "", "type": "binary"}, {"name": "images/filled_areas.png", "content": "", "type": "binary"}, {"name": "images/group_by.png", "content": "", "type": "binary"}, {"name": "images/heat_map.png", "content": "", "type": "binary"}, {"name": "images/histogram.png", "content": "", "type": "binary"}, {"name": "images/kde.png", "content": "", "type": "binary"}, {"name": "images/line_plot.png", "content": "", "type": "binary"}, {"name": "images/over_sampling.png", "content": "", "type": "binary"}, {"name": "images/pair_plot.png", "content": "", "type": "binary"}, {"name": "images/pivot_table.png", "content": "", "type": "binary"}, {"name": "images/probability_plot.png", "content": "", "type": "binary"}, {"name": "images/radar_chart.png", "content": "", "type": "binary"}, {"name": "images/regression_plot.png", "content": "", "type": "binary"}, {"name": "images/scatter_plot.png", "content": "", "type": "binary"}, {"name": "images/select_columns.png", "content": "", "type": "binary"}, {"name": "images/sklearn_models.png", "content": "", "type": "binary"}, {"name": "images/sort_rows.png", "content": "", "type": "binary"}, {"name": "images/statsmodels.png", "content": "", "type": "binary"}, {"name": "images/time_trend.png", "content": "", "type": "binary"}, {"name": "images/treat_missing_values.png", "content": "", "type": "binary"}, {"name": "images/value_counts.png", "content": "", "type": "binary"}, {"name": "images/value_counts_operations.png", "content": "", "type": "binary"}, {"name": "images/variance_inflation_factor.png", "content": "", "type": "binary"}]